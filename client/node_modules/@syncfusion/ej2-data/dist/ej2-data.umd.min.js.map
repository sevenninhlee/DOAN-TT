{"version":3,"file":"ej2-data.umd.min.js","sources":["../src/query.js","../src/util.js","../src/adaptors.js","../src/manager.js"],"sourcesContent":["import { DataUtil } from './util';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @class */ (function () {\n    /**\n     * Constructor for Query class.\n     * @param  {string|string[]} from?\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        /** @hidden */\n        this.distincts = [];\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        return this;\n    }\n    /**\n     * Sets the primary key.\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        cloned.distincts = this.distincts.slice(0);\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    Query.prototype.distinct = function (fields) {\n        if (typeof fields === 'string') {\n            this.distincts = [].slice.call([fields], 0);\n        }\n        else {\n            this.distincts = fields.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string|number|boolean} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     * @param  {string|number|boolean} searchKey - Defines the search key.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param  {string} operator - Defines the operator how to search data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        operator = operator || 'contains';\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        var order = 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\nexport { Query };\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     * @param  {string|Predicate} field\n     * @param  {string} operator\n     * @param  {string|number|boolean|Predicate|Predicate[]} value\n     * @param  {boolean=false} ignoreCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var isAnd;\n        var ret;\n        if (!this.isComplex && this.comparer) {\n            return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n        }\n        isAnd = this.condition === 'and';\n        for (var i = 0; i < predicate.length; i++) {\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\nexport { Predicate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y, locales, options) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y, locales, options);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y, locales, options) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y, locales, options) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            grouped[val].items.push(jsonData[i]);\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = DataUtil.getVal(json, index, fieldName);\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Species whether are not to be parsed with serverTimezoneOffset value.\n     * @hidden\n     */\n    DataUtil.timeZoneHandling = true;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n                    var arr = value.split(/[^0-9.]/);\n                    if (isUTC) {\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, false);\n                    }\n                    else {\n                        var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n                        var hrs = parseInt(arr[6], 10);\n                        var mins = parseInt(arr[7], 10);\n                        if (isNaN(hrs) && isNaN(mins)) {\n                            return utcFormat;\n                        }\n                        if (value.indexOf('+') > -1) {\n                            utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n                        }\n                        else {\n                            utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n                    }\n                    if (DataUtil.serverTimezoneOffset == null) {\n                        value = DataUtil.dateParse.addSelfOffset(value);\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                if (DataUtil.serverTimezoneOffset == null) {\n                    val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n                }\n                else {\n                    d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n                    val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Date object with respective to UTC format value.\n         * @param  {string} key\n         * @param  {any} value\n         * @hidden\n         */\n        /* tslint:disable-next-line:no-any */\n        jsonDateReplacer: function (key, value) {\n            if (key === 'value' && value) {\n                if (typeof value === 'string') {\n                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                    if (ms) {\n                        value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n                    }\n                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                        var arr = value.split(/[^0-9]/);\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n                    }\n                }\n                if (value instanceof Date) {\n                    value = DataUtil.dateParse.addSelfOffset(value);\n                    if (DataUtil.serverTimezoneOffset === null) {\n                        return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n                    }\n                    else {\n                        value = DataUtil.dateParse.toTimeZone(value, (((value.getTimezoneOffset() / 60) * 2)\n                            - DataUtil.serverTimezoneOffset), false);\n                        return value.toJSON();\n                    }\n                }\n            }\n            return value;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\nexport { DataUtil };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = value[keyField];\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (ds[i][keyField] === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key = value[keyField];\n        for (i = 0; i < ds.length; i++) {\n            if (ds[i][keyField] === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        this.getAggregateResult(pvt, data, args, groupDs, query);\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: value[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        if (pvt && pvt.groups && pvt.groups.length) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            selected[splits[0]].push(splits[1]);\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + _this.options.select + \"=\" + selected[expand].join(',') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation \n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify({\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            })\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n","import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor ? false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest]))) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url)) {\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        var ajax = new Ajax(req);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        req = ajax.send();\n        req.catch(function (e) { return true; }); // to handle failure remote requests.        \n        this.requests.push(ajax);\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            var deff_1 = new Deferred();\n            var ajax_1 = new Ajax(req);\n            ajax_1.beforeSend = function () {\n                _this.beforeSend(ajax_1.httpRequest, ajax_1);\n            };\n            ajax_1.onSuccess = function (data, request) {\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n            };\n            ajax_1.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            ajax_1.send().catch(function (e) { return true; }); // to handle the failure requests.        \n            return deff_1.promise;\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            return this.doAjaxRequest(req);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = value[keyField];\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            return this.doAjaxRequest(res);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            return this.doAjaxRequest(res);\n        }\n    };\n    DataManager.prototype.doAjaxRequest = function (res) {\n        var _this = this;\n        var defer = new Deferred();\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        var ajax = new Ajax(res);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        ajax.onSuccess = function (record, request) {\n            try {\n                DataUtil.parse.parseJson(record);\n            }\n            catch (e) {\n                record = [];\n            }\n            record = _this.adaptor.processResponse(DataUtil.parse.parseJson(record), _this, null, request.httpRequest, request);\n            defer.resolve(record);\n        };\n        ajax.onFailure = function (e) {\n            defer.reject([{ error: e }]);\n        };\n        ajax.send().catch(function (e) { return true; }); // to handle the failure requests.\n        return defer.promise;\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n"],"names":["Query","from","this","subQuery","isChild","distincts","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","prototype","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","DataUtil","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","distinct","fields","call","expand","tables","where","fieldName","operator","ignoreCase","ignoreAccent","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sorts","temp","order","endsWith","replace","fnSort","filterQueries","i","length","j","direction","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","fromJson","json","len","fromJSONData","pred","validate","record","isAnd","ret","getObject","toJson","p","preds","consts","GroupGuid","getValue","inst","input","substr","startsWith","fnAscending","fnDescending","x","y","locales","options","isNullOrUndefined","undefined","localeCompare","extractFields","obj","newObj","setValue","jsonArray","newData","aggregates","level","groupDs","jsonData","_loop_1","items","this_1","count","indx","childLevels","grouped","groupedArray","records","_loop_2","val","this_2","getVal","tempObj","_loop_3","aggs","buildHierarchy","source","lookup","pKey","grp","result","fKeyData","getFieldList","prefix","copyObj","keys_1","Object","keys","prop","nameSpace","splits","split","toString","fromObj","sort","ds","middle","parseInt","left","right","merge","ignoreDiacritics","map","diacritics","join","current","shift","array","index","callAdaptorFunction","adaptor","fnName","param1","param2","getAddParams","adp","dm","req","reqParams","isPlainObject","constructor","isCors","xhr","window","getGuid","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","requiresCompleteRecord","tmp","forEach","data","serverTimezoneOffset","timeZoneHandling","error","Error","message","stack","sum","isNaN","average","min","max","truecount","DataManager","falsecount","operatorSymbols","<",">","<=",">=","==","!=","*=","$=","^=","odBiOperator","lessthan","lessthanorequal","greaterthan","greaterthanorequal","equal","notequal","odUniOperator","endswith","startswith","contains","odv4UniOperator","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","actual","expected","notnull","isnull","processSymbols","parse","parseJson","jsonText","JSON","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","ms","exec","offSet","dateParse","toTimeZone","Date","isUTC","utcFormat","hrs","mins","setHours","getHours","getMinutes","addSelfOffset","isJson","isGuid","replacer","stringify","jsonReplacer","arrayReplacer","keys_3","d","toJSON","date","jsonDateReplacer","getTimezoneOffset","toUTC","offset","utc","unix","toLocalTime","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getSeconds","__extends","extendStatics","b","setPrototypeOf","__proto__","hasOwnProperty","__","create","Adaptor","requestType","dataSource","pvt","processResponse","JsonAdaptor","_super","processQuery","countFlg","agg","batchRequest","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","onWhere","onAggregates","onSearch","onSortBy","fnCompare","onGroup","aggQuery","onPage","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","UrlAdaptor","hierarchyFilters","getQueryRequest","url","request","groups","filters","searches","getFiltersFrom","getRequestQuery","_a","pvtData","contentType","convertToQueryString","request1","selects","getResponseHeader","handleTimeZone","requests","action","getAggregateResult","original","batchUrl","crudUrl","removeUrl","dataType","extend","changed","added","deleted","table","beforeSend","insertUrl","keyColumn","updateUrl","predicats","pData","aggregateData","groupQuery","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","getModuleName","onPredicate","requiresCast","guid","returnValue","getField","encodeURIComponent","onComplexPredicate","onEachWhere","onEachSearch","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","metaCheck","rootUrl","dataUrls","resourceTableName","dataCopy","results","emptyAndBatch","processBatchResponse","versionCheck","version","oDataCount","requiresFormat","keys_4","localTimeReplacer","convertObj","localTime","compareAndRemove","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","stat","method","generateBodyContent","org","change","o","cIdx","jsonObj","substring","exVal","changeGuid","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","ex","onDistinct","distinctFields","metaName","dataUrl","WebApiAdaptor","location","host","state","Count","Items","WebMethodAdaptor","param","RemoteSaveAdaptor","updateKey","CacheAdaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","crossDomain","offline","headers","timeTillExpiration","cachingPageSize","enableCaching","jsonp","defaultQuery","isDataAvailable","ready","then","setDefaultQuery","makeRequest","deffered","Deferred","getDeferedArgs","resolve","nextTick","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","processData","onSuccess","onFailure","isSelector","reject","process","virtualSelectRecords","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","httpRequest","virtualRecords","ajax","Ajax","send","catch","Promise","all","pResult","cResult","saveChanges","deff_1","ajax_1","doAjaxRequest","defer","bind"],"mappings":"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"}