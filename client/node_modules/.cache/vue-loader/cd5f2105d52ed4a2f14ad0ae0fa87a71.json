{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/payment/UpgradeToPlan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/payment/UpgradeToPlan.vue","mtime":1573548269965},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UserIcon from \"../../components/UserIcon\";\nimport UserSelect from \"../../components/UserSelect\";\nimport country_region_list from \"country-region-data/data\";\nimport Vue from \"vue\";\nimport { DropDownListPlugin  } from '@syncfusion/ej2-vue-dropdowns';\nVue.use(DropDownListPlugin);\nimport PayPal from 'vue-paypal-checkout'\n\nexport default {\n  name: \"UpgradeToPlan\",\n  components: {\n    UserIcon,\n    UserSelect,\n    PayPal\n  },\n  data() {\n    return {\n      promo_code: \"\",\n      edit_promo_code: false,\n      plan: null,\n      subscription: \"Monthly Subscription\",\n      country: \"Select country\",\n      countries: [],\n      region: \"Select region\",\n      month: \"Month\",\n      year: \"Year\",\n      years: [],\n\n      error_flag: false,\n      first_name: \"\",\n      last_name: \"\",\n      card_number: \"\",\n      cvv: \"\",\n      state: \"Select state\",\n      states: [],\n      billing_addr: \"\",\n      billing_addr1: \"\",\n      city: \"\",\n      zip_code: \"\",\n      street_addr: \"\",\n      amount: 0,\n      error_status: 0,\n      planmode: \"\",\n      paypal: {\n        sandbox: 'ARv33Gg8JreFiRa0QWebUQVdokycZo7cL6wLMYD204bjkSmaeMybGqZCfIFJ16Gq5rmV-q7iSjpIaux3',\n        production: '<production client id>'\n      },\n      credentials: {\n        sandbox: 'ARv33Gg8JreFiRa0QWebUQVdokycZo7cL6wLMYD204bjkSmaeMybGqZCfIFJ16Gq5rmV-q7iSjpIaux3',\n        production: '<production client id>'\n      },\n      showpaypal: false,\n      tabIndex: 0,\n      pricecomment: \"Per month\",\n      myItems: [{ \"name\": \"CoffeeSign Plan - \"+this.subscription, \"description\": \"Subscription Plan\", \"price\": this.amount, \"quantity\": \"1\", \"currency\": \"USD\"}]\n    };\n  },\n  created() {\n    this.plan = this.$route.query.plan;\n    this.id = this.$route.query.id;\n    this.planmode = this.$route.query.planmode;\n    if (!this.plan.title) {\n      this.$router.push({\n        path: \"/payment/upgrade-plan\"\n      });\n    }\n    if (this.planmode==\"annual\") {\n      this.subscription = \"Annual Subscription\"\n    } else {\n      this.subscription = \"Monthly Subscription\"\n    }\n    if (this.id==1 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 10\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n    }\n    if (this.id==1 && this.subscription==\"Annual Subscription\") {\n      this.amount = 120\n      this.plan.price = this.amount\n      this.pricecomment = \"Annual\"\n    }\n    if (this.id==2 && this.subscription==\"Monthly Subscription\") {\n      this.amount = 25\n      this.plan.price = this.amount\n      this.pricecomment = \"Per month\"\n    }\n    if (this.id==2 && this.subscription==\"Annual Subscription\") {\n      this.amount = 300\n      this.plan.price = this.amount\n      this.pricecomment = \"Annual\"\n    }\n    if (this.id==3 && this.subscription==\"Monthly Subscription\") {\n      this.amount = 40\n      this.plan.price = this.amount\n      this.pricecomment = \"Per month\"\n    }\n    if (this.id==3 && this.subscription==\"Annual Subscription\") {\n      this.amount = 480\n      this.plan.price = this.amount\n      this.pricecomment = \"Annual\"\n    }\n    const dt = new Date();\n    const start = dt.getYear();\n    for (let i = start; i < start + 10; i++) {\n      this.years.push((i + 1900).toString());\n    }\n    \n    this.states = [];\n    this.state = \"Select state\";\n    this.countries = [];\n    country_region_list.forEach(country => {\n      this.countries.push(country.countryName);\n    });\n  },\n  methods: {\n    changeStateEx(arg) {\n      this.state = arg.value;\n    },\n    changeCountryEx(arg) {\n      this.country = arg.value;\n      this.states = [];\n      this.state = \"Select state\";\n      if(this.country == \"Select country\") return;\n      const region = country_region_list.find(item => (item.countryName == this.country));\n      region.regions.forEach(item => {\n        this.states.push(item.name);\n      });\n    },\n    showModal() {\n      /*\n      this.error_flag = true;\n      if (this.isError(this.first_name)) return;\n      if (this.isError(this.last_name)) return;\n      if (this.isError(this.card_number)) return;\n      if (this.isError(this.cvv)) return;\n      if (this.isError(this.state)) return;\n      if (this.isError(this.street_addr)) return;\n      if (this.isError(this.zip_code)) return;\n      this.$refs[\"done-modal\"].show();\n      */\n      if (this.id==1 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 10\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==1 && this.subscription==\"Annual Subscription\") {\n        this.amount = 120\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n      if (this.id==2 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 25\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==2 && this.subscription==\"Annual Subscription\") {\n        this.amount = 300\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n      if (this.id==3 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 40\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==3 && this.subscription==\"Annual Subscription\") {\n        this.amount = 480\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n      \n      if (this.tabIndex==0) {\n        console.log(\"I am in card\");\n        this.error_flag = true;\n        this.showpaypal = false;\n        if (this.card_number.length != 0 && this.month != 'Month' && this.year != 'Year' && this.cvv.length != 0 && this.billing_addr != 0 && this.city != 0 && this.state != 'Select state' && this.country != 'Select country' && this.zip_code.length != 0) {\n        const formdata = new FormData();\n        formdata.append('cardnumber', this.card_number);\n        formdata.append('month', this.month);\n        formdata.append('year', this.year);\n        formdata.append('cvv', this.cvv);\n        formdata.append('street_address', this.billing_addr);\n        formdata.append('street_address_optional', this.billing_addr1);\n        formdata.append('city', this.city);\n        formdata.append('state', this.state);\n        formdata.append('country', this.country);\n        formdata.append('zip_code', this.zip_code);\n        formdata.append('amount', this.amount);\n        formdata.append('name_on_card', \"test name\");\n        formdata.append('userid', \"user1\");\n        this.$refs[\"process-modal\"].show();\n        this.$http.post(this.$api_url+'/cardpayment', formdata, { headers: { 'Authorization': null } })\n                  .then((response) => {\n                  //alert(JSON.stringify(response.data));\n                  if (response.data['status']=='1') {\n                      console.log(response.data);\n                      this.$refs[\"done-modal\"].show();\n                      this.$refs[\"process-modal\"].hide();\n                      } else {\n                        this.$refs[\"failed-modal\"].show();\n                        this.$refs[\"process-modal\"].hide();\n                        console.log('there was an error: ', response.data);\n                      }\n                  })\n                  .catch((error) => {\n                      // Error\n                      if (error.response) {\n                          // The request was made and the server responded with a status code\n                          //alert(\"There is error. Please try again.\")\n                      } else if (error.request) {\n                          // The request was made but no response was received\n                          console.log(error.request)\n                          //alert(\"No connection to server. Please check your internet connectivity.\");\n                      } else {\n                          // Something happened in setting up the request that triggered an Error\n                          console.log('Error', error.message);\n                          //alert(\"unknown error. please try again.\")\n                      }\n                      console.log(error.config)\n              });\n          }    \n      }\n\n      if (this.tabIndex==1) {\n        console.log(\"I am in paypal\");\n        this.showpaypal = true;\n      }\n    },\n    isError(value) {\n      return (\n        this.error_flag &&\n        (value === undefined ||\n          value === null || \n          (typeof value === \"object\" && Object.keys(value).length === 0) ||\n          (typeof value === \"string\" && value.trim().length === 0) || (this.cvv.trim().length>4))\n      );\n    },\n    upgradeMyPlan() {\n      this.$router.push({\n        path: \"/landing\",\n        query: { id: this.id }\n      });\n    },\n    updateprice() {\n      if (this.id==1 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 10\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==1 && this.subscription==\"Annual Subscription\") {\n        this.amount = 120\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n      if (this.id==2 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 25\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==2 && this.subscription==\"Annual Subscription\") {\n        this.amount = 300\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n      if (this.id==3 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 40\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==3 && this.subscription==\"Annual Subscription\") {\n        this.amount = 480\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n    },\n    payment_completed_cb(res){\n      this.$refs[\"done-modal\"].show();\n      console.log(res);  \n      console.log('the id is ', res.id);\n      console.log('the amount is ', res.transactions[0]['amount']['total']);\n      const formdata = new FormData();\n      formdata.append('amount', res.transactions[0]['amount']['total']);\n      formdata.append('transaction_id', res.id);\n      formdata.append('userid', \"user1\");\n      this.$http.post(this.$api_url+'/paypalpayment', formdata, { headers: { 'Authorization': null } })\n                .then((response) => {\n                //alert(JSON.stringify(response.data));\n                if (response.data['status']=='1') {\n                    console.log(response.data);\n                    } else {\n                      console.log('there was an error: ', response.data);\n                    }\n                })\n                .catch((error) => {\n                    // Error\n                    if (error.response) {\n                        // The request was made and the server responded with a status code\n                        //alert(\"There is error. Please try again.\")\n                    } else if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request)\n                        //alert(\"No connection to server. Please check your internet connectivity.\");\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log('Error', error.message);\n                        //alert(\"unknown error. please try again.\")\n                    }\n                    console.log(error.config)\n            });\n    },\n    payment_authorized_cb(res){\n    console.log(res); \n    },\n    payment_cancelled_cb(res){\n        this.$refs[\"cancelled-modal\"].show();\n        console.log(res); \n    },\n    show_promo_price() {\n      var promo_value = document.getElementById(\"promo_code\").value;\n      if (promo_value=='123' && document.getElementById(\"promocode_used\").value=='0') {\n        this.amount = this.amount-( 10 * this.amount / 100 );\n        this.plan.price = this.amount;\n        document.getElementById(\"promocode_used\").value = \"1\";\n        setTimeout(() => { this.$refs[\"promocode-modal\"].show(); }, 800); \n      } else {\n        setTimeout(() => { this.$refs[\"fpromocode-modal\"].show(); }, 800);\n      }\n    },\n  }\n};\n",{"version":3,"sources":["UpgradeToPlan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkTA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpgradeToPlan.vue","sourceRoot":"src/views/payment","sourcesContent":["<template>\n  <div class=\"app flex-row\">\n    <div class=\"w-100 position-relative\">\n      <div class=\"plan-header\">\n        <h1>Upgrade To {{plan.title}}</h1>\n      </div>\n      <hr class=\"mb-4\" />\n      <div class=\"row plans\">\n        <div class=\"col-12 col-sm-6 col-md-8 col-lg-8\">\n          <div class=\"content-card\">\n            <div class=\"content-header\">Payment information</div>\n            <b-tabs v-model=\"tabIndex\">\n              <b-tab title=\"Card\" active>\n                <div class=\"row\">\n                  <div class=\"col-12 col-lg-6\">\n                    <div class=\"form-group\">\n                      <label for=\"name\">Credit/debit card number</label>\n                      <b-input-group\n                        class=\"pl-3\"\n                        v-bind:class=\"{'input-error': isError(card_number)}\"\n                      >\n                        <b-form-input placeholder=\"**** **** **** 5432\" v-model=\"card_number\"></b-form-input>\n                        <b-input-group-prepend class=\"mr-0\">\n                          <b-input-group-text class=\"h-auto\">\n                            <UserIcon icon=\"mastercard.svg\" />\n                          </b-input-group-text>\n                        </b-input-group-prepend>\n                      </b-input-group>\n                      <div v-if=\"isError(card_number)\" class=\"error-text\">Please input valid card number</div>\n                    </div>\n                  </div>\n                  <div class=\"col-12 col-lg-6 pl-lg-0\">\n                    <div class=\"d-flex align-items-start\">\n                      <div class=\"form-group\">\n                        <label for=\"name\">Expiration month</label>\n                        <div class=\"d-flex align-items-center\">\n                          <UserSelect\n                            v-bind:value=\"month\"\n                            v-bind:items=\"['Month', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']\"\n                            @changeValue=\"month=$event\"\n                            class=\"mb-0\"\n                            style=\"min-width:105px\"\n                            v-bind:class=\"{'input-error': month == 'Month' && error_flag}\"\n                          />\n                          <span class=\"mx-2\">/</span>\n                        </div>\n                        <div v-if=\"month == 'Month' && error_flag\" class=\"error-text\">Select a month</div>\n                      </div>\n\n                      <div class=\"form-group mr-3\">\n                        <label for=\"name\">Expiration year</label>\n                        <UserSelect\n                          v-bind:value=\"year\"\n                          v-bind:items=\"years\"\n                          @changeValue=\"year=$event\"\n                          class=\"mb-0\"\n                          style=\"min-width:95px\"\n                          v-bind:class=\"{'input-error': year == 'Year' && error_flag}\"\n                        />\n                        <div v-if=\"year == 'Year' && error_flag\" class=\"error-text\">Select a year</div>\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"name\">CVV</label>\n                        <input\n                          type=\"text\"\n                          class=\"form-control\"\n                          id=\"cvv\"\n                          placeholder=\"Your CVV\"\n                          name=\"cvv\"\n                          v-bind:class=\"{'input-error': isError(cvv)}\"\n                          v-model=\"cvv\"\n                        />\n                        <div v-if=\"isError(cvv)\" class=\"error-text\">Please input valid CVV</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </b-tab>\n              <b-tab title=\"PAYPAL\">\n                <label class=\"mr-3\">Pay with PayPal</label>\n                <!--\n                <a href=\"https://www.paypal.com\">\n                  <img src=\"img/icons/paypal.png\" />\n                </a>\n                -->\n                <PayPal v-if=\"showpaypal\" :amount=\"this.amount\" currency=\"USD\" :client=\"credentials\" env=\"sandbox\" @payment-authorized=\"payment_authorized_cb\" @payment-completed=\"payment_completed_cb\" @payment-cancelled=\"payment_cancelled_cb\"></PayPal>\n              </b-tab>\n            </b-tabs>\n          </div>\n          <div class=\"content-card\">\n            \n            <div v-if=\"tabIndex == 0\" class=\"content-header\">Billing information</div>\n            <div v-if=\"tabIndex == 1\" class=\"content-header\">Please click on \"Upgrade my plan\" button to continue payment with PayPal</div>\n            <div v-if=\"tabIndex == 0\" class=\"form-group\">\n              <label for=\"name\">Country</label>\n              <div v-bind:class=\"{'input-error': (country == '' || country == 'Select country') && error_flag}\">\n                <ejs-dropdownlist id='dropdownlist' \n                  :dataSource=\"countries\"\n                  :change = \"changeCountryEx\"\n                  placeholder = \"Select country\"\n                  >\n                </ejs-dropdownlist>\n              </div>\n              <div v-if=\"(country == '' || country == 'Select country') && error_flag\" class=\"error-text\">Please select a country</div>\n            </div>\n            <div v-if=\"tabIndex == 0\" class=\"form-group\">\n              <label for=\"name\">Street address</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"billing_addr\"\n                placeholder=\"Street address\"\n                name=\"billing_addr\"\n                v-bind:class=\"{'input-error': isError(billing_addr)}\"\n                v-model=\"billing_addr\"\n              />\n              <div v-if=\"isError(billing_addr)\" class=\"error-text\">Please enter a street address</div>\n            </div>\n            <div v-if=\"tabIndex == 0\" class=\"form-group\">\n              <label for=\"name\">Street address line 2</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"billing_addr1\"\n                placeholder=\"Enter your street address line 2 (Optional)\"\n                name=\"billing_addr1\"\n                v-model=\"billing_addr1\"\n              />\n            </div>\n            <div v-if=\"tabIndex == 0\" class=\"row\">\n              <div class=\"col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"name\">Zip code</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"zip_code\"\n                    placeholder=\"Zip code\"\n                    name=\"zip_code\"\n                    v-bind:class=\"{'input-error': isError(zip_code)}\"\n                    v-model=\"zip_code\"\n                  />\n                  <div v-if=\"isError(zip_code)\" class=\"error-text\">Please enter a valid zip Code</div>\n                </div>\n              </div>\n              <div class=\"col-sm-8\">\n                <div class=\"form-group\">\n                  <label for=\"name\">City</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"city\"\n                    placeholder=\"City\"\n                    name=\"city\"\n                    v-bind:class=\"{'input-error': isError(city)}\"\n                    v-model=\"city\"\n                  />\n                  <div v-if=\"isError(city)\" class=\"error-text\">Please enter a valid city</div>\n                </div>\n              </div>\n              <div class=\"col-sm-12\">\n                <div class=\"form-group\">\n                  <label for=\"name\">State</label>\n                  <div v-bind:class=\"{'input-error': (state == '' || state == 'Select state') && error_flag}\">\n                    <ejs-dropdownlist id='dropdownlist-state' \n                      :dataSource=\"states\"\n                      :change = \"changeStateEx\"\n                      placeholder = \"Select state\"\n                      >\n                    </ejs-dropdownlist>\n                  </div>\n                  <div v-if=\"(state == '' || state == 'Select state') && error_flag\" class=\"error-text\">Please select a state</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-12 col-sm-6 col-md-4 col-lg-4\">\n          <div class=\"plan-card content-card\">\n            <div class=\"content-header\">You're buying:</div>\n            <div class=\"plan-card-head\">\n              <div class=\"plan-title\">\n                {{plan.title}}\n                <img\n                  v-bind:src=\"'img/icons/'+plan.title+'.png'\"\n                  width=\"32\"\n                  height=\"32\"\n                  class=\"ml-3\"\n                />\n              </div>\n              <div>\n                <span class=\"comments\">{{pricecomment}}</span>\n                <span class=\"price\">\n                  ${{plan.price}}\n                  <sup>.00</sup>\n                </span>\n              </div>\n            </div>\n            <UserSelect\n              v-bind:value=\"subscription\"\n              v-bind:items=\"['Monthly Subscription', 'Annual Subscription']\"\n              @changeValue=\"subscription=$event\"\n              class=\"mb-0 mt-3\"\n              style=\"min-width:105px\"\n            />\n            <div class=\"d-flex-align-center justify-content-between mt-2\" v-if=\"!edit_promo_code\">\n              <span>Promo Code: <strong>{{promo_code}}</strong></span>\n              <b-button variant=\"link\" v-on:click=\"edit_promo_code=true\">{{promo_code.length==0?'Add Code': 'Edit Code'}}</b-button>\n            </div>\n            <div class=\"mt-2\" v-if=\"edit_promo_code\">\n              <div class=\"form-group\">\n                <label for=\"name\">Promo code</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"promo_code\"\n                  placeholder=\"Promo Code\"\n                  name=\"promo_code\"\n                  v-model=\"promo_code\"\n                />\n              </div>\n              <div class=\"text-center\">\n                <b-button variant=\"primary\" v-on:click=\"edit_promo_code=false; show_promo_price();\" class=\"mr-3\">Add Code</b-button>\n                <b-button variant=\"link\" v-on:click=\"edit_promo_code=false\">Cancel</b-button>\n              </div>\n            </div>\n            \n\n            <hr />\n            <div class=\"text-center\">\n              <div class=\"limit-for-sending\">Limit for Sending for Signature</div>\n              <div class=\"limit-times\">{{plan.limit}}</div>\n            </div>\n            <hr />\n            <b-button block variant=\"other\" v-on:click=\"showModal()\">Upgrade my plan!</b-button>\n            <div class=\"mt-3\">\n              By clicking \"Upgrade my plan!\" you agree to the\n              <b-button variant=\"link\" class=\"p-0\">Terms and Conditions</b-button>.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <b-modal id=\"done-modal\" ref=\"done-modal\" hide-footer>\n      <div class=\"done-modal\">\n        <img src=\"img/icons/send.svg\" class=\"mb-4\" />\n        <div class=\"you-done\">Your plan is upgraded</div>\n        <div\n          class=\"comments text-center\"\n          style=\"margin-bottom:30px\"\n        >Thank You for upgrading to {{plan.title}}! You can always downgrade when you are not in needs any more.</div>\n        <button type=\"submit\" class=\"btn btn-primary\" v-on:click=\"upgradeMyPlan()\">Get start</button>\n      </div>\n    </b-modal>\n\n    <b-modal id=\"process-modal\" ref=\"process-modal\" hide-footer>\n      <div class=\"done-modal\">\n        <div class=\"you-done\">Payment for ${{amount}}</div>\n        <div\n          class=\"comments text-center\"\n          style=\"margin-bottom:30px\"\n        >Your request is being processed. Please standby.</div>\n      </div>\n    </b-modal>\n\n    <b-modal id=\"failed-modal\" ref=\"failed-modal\" hide-footer>\n      <div class=\"done-modal\">\n        <div class=\"you-done\">Payment Failed!!</div>\n        <div\n          class=\"comments text-center\"\n          style=\"margin-bottom:30px\"\n        >Please check your information and try again.</div>\n      </div>\n    </b-modal>\n\n    <b-modal id=\"cancelled-modal\" ref=\"cancelled-modal\" hide-footer>\n      <div class=\"done-modal\">\n        <div class=\"you-done\">Payment cancelled!</div>\n      </div>\n    </b-modal>\n\n    <b-modal id=\"promocode-modal\" ref=\"promocode-modal\" hide-footer>\n      <div class=\"done-modal\">\n        <div class=\"you-done\">Promo Code Added Successfully</div>\n        <div\n          class=\"comments text-center\"\n          style=\"margin-bottom:30px\"\n        >You have 10% discount now.</div>\n      </div>\n    </b-modal>\n\n    <b-modal id=\"fpromocode-modal\" ref=\"fpromocode-modal\" hide-footer>\n      <div class=\"done-modal\">\n        <div class=\"you-done\">Promo Code Invalid!</div>\n        <div\n          class=\"comments text-center\"\n          style=\"margin-bottom:30px\"\n        >Please check your promo code and try again.</div>\n      </div>\n    </b-modal>\n\n    <input type=\"hidden\" id=\"promocode_used\" value=\"0\"/>\n  </div>\n</template>\n\n<script>\nimport UserIcon from \"../../components/UserIcon\";\nimport UserSelect from \"../../components/UserSelect\";\nimport country_region_list from \"country-region-data/data\";\nimport Vue from \"vue\";\nimport { DropDownListPlugin  } from '@syncfusion/ej2-vue-dropdowns';\nVue.use(DropDownListPlugin);\nimport PayPal from 'vue-paypal-checkout'\n\nexport default {\n  name: \"UpgradeToPlan\",\n  components: {\n    UserIcon,\n    UserSelect,\n    PayPal\n  },\n  data() {\n    return {\n      promo_code: \"\",\n      edit_promo_code: false,\n      plan: null,\n      subscription: \"Monthly Subscription\",\n      country: \"Select country\",\n      countries: [],\n      region: \"Select region\",\n      month: \"Month\",\n      year: \"Year\",\n      years: [],\n\n      error_flag: false,\n      first_name: \"\",\n      last_name: \"\",\n      card_number: \"\",\n      cvv: \"\",\n      state: \"Select state\",\n      states: [],\n      billing_addr: \"\",\n      billing_addr1: \"\",\n      city: \"\",\n      zip_code: \"\",\n      street_addr: \"\",\n      amount: 0,\n      error_status: 0,\n      planmode: \"\",\n      paypal: {\n        sandbox: 'ARv33Gg8JreFiRa0QWebUQVdokycZo7cL6wLMYD204bjkSmaeMybGqZCfIFJ16Gq5rmV-q7iSjpIaux3',\n        production: '<production client id>'\n      },\n      credentials: {\n        sandbox: 'ARv33Gg8JreFiRa0QWebUQVdokycZo7cL6wLMYD204bjkSmaeMybGqZCfIFJ16Gq5rmV-q7iSjpIaux3',\n        production: '<production client id>'\n      },\n      showpaypal: false,\n      tabIndex: 0,\n      pricecomment: \"Per month\",\n      myItems: [{ \"name\": \"CoffeeSign Plan - \"+this.subscription, \"description\": \"Subscription Plan\", \"price\": this.amount, \"quantity\": \"1\", \"currency\": \"USD\"}]\n    };\n  },\n  created() {\n    this.plan = this.$route.query.plan;\n    this.id = this.$route.query.id;\n    this.planmode = this.$route.query.planmode;\n    if (!this.plan.title) {\n      this.$router.push({\n        path: \"/payment/upgrade-plan\"\n      });\n    }\n    if (this.planmode==\"annual\") {\n      this.subscription = \"Annual Subscription\"\n    } else {\n      this.subscription = \"Monthly Subscription\"\n    }\n    if (this.id==1 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 10\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n    }\n    if (this.id==1 && this.subscription==\"Annual Subscription\") {\n      this.amount = 120\n      this.plan.price = this.amount\n      this.pricecomment = \"Annual\"\n    }\n    if (this.id==2 && this.subscription==\"Monthly Subscription\") {\n      this.amount = 25\n      this.plan.price = this.amount\n      this.pricecomment = \"Per month\"\n    }\n    if (this.id==2 && this.subscription==\"Annual Subscription\") {\n      this.amount = 300\n      this.plan.price = this.amount\n      this.pricecomment = \"Annual\"\n    }\n    if (this.id==3 && this.subscription==\"Monthly Subscription\") {\n      this.amount = 40\n      this.plan.price = this.amount\n      this.pricecomment = \"Per month\"\n    }\n    if (this.id==3 && this.subscription==\"Annual Subscription\") {\n      this.amount = 480\n      this.plan.price = this.amount\n      this.pricecomment = \"Annual\"\n    }\n    const dt = new Date();\n    const start = dt.getYear();\n    for (let i = start; i < start + 10; i++) {\n      this.years.push((i + 1900).toString());\n    }\n    \n    this.states = [];\n    this.state = \"Select state\";\n    this.countries = [];\n    country_region_list.forEach(country => {\n      this.countries.push(country.countryName);\n    });\n  },\n  methods: {\n    changeStateEx(arg) {\n      this.state = arg.value;\n    },\n    changeCountryEx(arg) {\n      this.country = arg.value;\n      this.states = [];\n      this.state = \"Select state\";\n      if(this.country == \"Select country\") return;\n      const region = country_region_list.find(item => (item.countryName == this.country));\n      region.regions.forEach(item => {\n        this.states.push(item.name);\n      });\n    },\n    showModal() {\n      /*\n      this.error_flag = true;\n      if (this.isError(this.first_name)) return;\n      if (this.isError(this.last_name)) return;\n      if (this.isError(this.card_number)) return;\n      if (this.isError(this.cvv)) return;\n      if (this.isError(this.state)) return;\n      if (this.isError(this.street_addr)) return;\n      if (this.isError(this.zip_code)) return;\n      this.$refs[\"done-modal\"].show();\n      */\n      if (this.id==1 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 10\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==1 && this.subscription==\"Annual Subscription\") {\n        this.amount = 120\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n      if (this.id==2 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 25\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==2 && this.subscription==\"Annual Subscription\") {\n        this.amount = 300\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n      if (this.id==3 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 40\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==3 && this.subscription==\"Annual Subscription\") {\n        this.amount = 480\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n      \n      if (this.tabIndex==0) {\n        console.log(\"I am in card\");\n        this.error_flag = true;\n        this.showpaypal = false;\n        if (this.card_number.length != 0 && this.month != 'Month' && this.year != 'Year' && this.cvv.length != 0 && this.billing_addr != 0 && this.city != 0 && this.state != 'Select state' && this.country != 'Select country' && this.zip_code.length != 0) {\n        const formdata = new FormData();\n        formdata.append('cardnumber', this.card_number);\n        formdata.append('month', this.month);\n        formdata.append('year', this.year);\n        formdata.append('cvv', this.cvv);\n        formdata.append('street_address', this.billing_addr);\n        formdata.append('street_address_optional', this.billing_addr1);\n        formdata.append('city', this.city);\n        formdata.append('state', this.state);\n        formdata.append('country', this.country);\n        formdata.append('zip_code', this.zip_code);\n        formdata.append('amount', this.amount);\n        formdata.append('name_on_card', \"test name\");\n        formdata.append('userid', \"user1\");\n        this.$refs[\"process-modal\"].show();\n        this.$http.post(this.$api_url+'/cardpayment', formdata, { headers: { 'Authorization': null } })\n                  .then((response) => {\n                  //alert(JSON.stringify(response.data));\n                  if (response.data['status']=='1') {\n                      console.log(response.data);\n                      this.$refs[\"done-modal\"].show();\n                      this.$refs[\"process-modal\"].hide();\n                      } else {\n                        this.$refs[\"failed-modal\"].show();\n                        this.$refs[\"process-modal\"].hide();\n                        console.log('there was an error: ', response.data);\n                      }\n                  })\n                  .catch((error) => {\n                      // Error\n                      if (error.response) {\n                          // The request was made and the server responded with a status code\n                          //alert(\"There is error. Please try again.\")\n                      } else if (error.request) {\n                          // The request was made but no response was received\n                          console.log(error.request)\n                          //alert(\"No connection to server. Please check your internet connectivity.\");\n                      } else {\n                          // Something happened in setting up the request that triggered an Error\n                          console.log('Error', error.message);\n                          //alert(\"unknown error. please try again.\")\n                      }\n                      console.log(error.config)\n              });\n          }    \n      }\n\n      if (this.tabIndex==1) {\n        console.log(\"I am in paypal\");\n        this.showpaypal = true;\n      }\n    },\n    isError(value) {\n      return (\n        this.error_flag &&\n        (value === undefined ||\n          value === null || \n          (typeof value === \"object\" && Object.keys(value).length === 0) ||\n          (typeof value === \"string\" && value.trim().length === 0) || (this.cvv.trim().length>4))\n      );\n    },\n    upgradeMyPlan() {\n      this.$router.push({\n        path: \"/landing\",\n        query: { id: this.id }\n      });\n    },\n    updateprice() {\n      if (this.id==1 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 10\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==1 && this.subscription==\"Annual Subscription\") {\n        this.amount = 120\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n      if (this.id==2 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 25\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==2 && this.subscription==\"Annual Subscription\") {\n        this.amount = 300\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n      if (this.id==3 && this.subscription==\"Monthly Subscription\") {\n        this.amount = 40\n        this.plan.price = this.amount\n        this.pricecomment = \"Per month\"\n      }\n      if (this.id==3 && this.subscription==\"Annual Subscription\") {\n        this.amount = 480\n        this.plan.price = this.amount\n        this.pricecomment = \"Annual\"\n      }\n    },\n    payment_completed_cb(res){\n      this.$refs[\"done-modal\"].show();\n      console.log(res);  \n      console.log('the id is ', res.id);\n      console.log('the amount is ', res.transactions[0]['amount']['total']);\n      const formdata = new FormData();\n      formdata.append('amount', res.transactions[0]['amount']['total']);\n      formdata.append('transaction_id', res.id);\n      formdata.append('userid', \"user1\");\n      this.$http.post(this.$api_url+'/paypalpayment', formdata, { headers: { 'Authorization': null } })\n                .then((response) => {\n                //alert(JSON.stringify(response.data));\n                if (response.data['status']=='1') {\n                    console.log(response.data);\n                    } else {\n                      console.log('there was an error: ', response.data);\n                    }\n                })\n                .catch((error) => {\n                    // Error\n                    if (error.response) {\n                        // The request was made and the server responded with a status code\n                        //alert(\"There is error. Please try again.\")\n                    } else if (error.request) {\n                        // The request was made but no response was received\n                        console.log(error.request)\n                        //alert(\"No connection to server. Please check your internet connectivity.\");\n                    } else {\n                        // Something happened in setting up the request that triggered an Error\n                        console.log('Error', error.message);\n                        //alert(\"unknown error. please try again.\")\n                    }\n                    console.log(error.config)\n            });\n    },\n    payment_authorized_cb(res){\n    console.log(res); \n    },\n    payment_cancelled_cb(res){\n        this.$refs[\"cancelled-modal\"].show();\n        console.log(res); \n    },\n    show_promo_price() {\n      var promo_value = document.getElementById(\"promo_code\").value;\n      if (promo_value=='123' && document.getElementById(\"promocode_used\").value=='0') {\n        this.amount = this.amount-( 10 * this.amount / 100 );\n        this.plan.price = this.amount;\n        document.getElementById(\"promocode_used\").value = \"1\";\n        setTimeout(() => { this.$refs[\"promocode-modal\"].show(); }, 800); \n      } else {\n        setTimeout(() => { this.$refs[\"fpromocode-modal\"].show(); }, 800);\n      }\n    },\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./UpgradeToPlan.scss\";\n</style>\n\n"]}]}