{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/components/connect/Dropbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/components/connect/Dropbox.vue","mtime":1573548262160},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport UserIcon from \"../UserIcon\";\nimport config from \"../../config/config\";\nimport { extensionToMimeType, convertUrlToFile } from \"../../helpers\";\n\nexport default {\n  name: \"Dropbox\",\n  components: {\n    UserIcon\n  },\n  props: {\n    prop_files: Object,\n    addFiles: Function\n  },\n  data() {\n    return {\n      pickerApiLoaded: false,\n      oauthToken: null\n    };\n  },\n  methods: {\n    async chooserFile() {\n      let options = {\n        success: async files => {\n          let attachments =\n            files &&\n            files.length > 0 &&\n            files.map(v => {\n              // return convertUrlToFile(v, 'link');\n              return {\n                ...v,\n                type: extensionToMimeType(`${v.name.split(\".\")[1]}`),\n                size: v.bytes,\n                downloadUrl: v[\"link\"],\n              };\n            });\n          this.$emit(\"addFiles\", attachments, true );\n        },\n        cancel: function() {},\n        linkType: \"direct\",\n        multiselect: true,\n        // extensions: [\".pdf\", \".doc\", \".docx\"],\n        folderselect: false\n        // sizeLimit: 102400000\n      };\n      Dropbox.choose(options);\n    }\n  },\n  mounted() {\n    let dropBox = document.createElement(\"script\");\n    dropBox.setAttribute(\n      \"src\",\n      \"https://www.dropbox.com/static/api/2/dropins.js\"\n    );\n    dropBox.setAttribute(\"id\", \"dropboxjs\");\n    dropBox.setAttribute(\"data-app-key\", config.DROPBOX_KEY);\n    document.head.appendChild(dropBox);\n  }\n};\n",{"version":3,"sources":["Dropbox.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dropbox.vue","sourceRoot":"src/components/connect","sourcesContent":["<template>\n  <span v-on:click=\"chooserFile()\">\n    <UserIcon icon=\"dropbox.svg\" class=\"store-src-item\" />\n  </span>\n</template>\n\n<script>\nimport UserIcon from \"../UserIcon\";\nimport config from \"../../config/config\";\nimport { extensionToMimeType, convertUrlToFile } from \"../../helpers\";\n\nexport default {\n  name: \"Dropbox\",\n  components: {\n    UserIcon\n  },\n  props: {\n    prop_files: Object,\n    addFiles: Function\n  },\n  data() {\n    return {\n      pickerApiLoaded: false,\n      oauthToken: null\n    };\n  },\n  methods: {\n    async chooserFile() {\n      let options = {\n        success: async files => {\n          let attachments =\n            files &&\n            files.length > 0 &&\n            files.map(v => {\n              // return convertUrlToFile(v, 'link');\n              return {\n                ...v,\n                type: extensionToMimeType(`${v.name.split(\".\")[1]}`),\n                size: v.bytes,\n                downloadUrl: v[\"link\"],\n              };\n            });\n          this.$emit(\"addFiles\", attachments, true );\n        },\n        cancel: function() {},\n        linkType: \"direct\",\n        multiselect: true,\n        // extensions: [\".pdf\", \".doc\", \".docx\"],\n        folderselect: false\n        // sizeLimit: 102400000\n      };\n      Dropbox.choose(options);\n    }\n  },\n  mounted() {\n    let dropBox = document.createElement(\"script\");\n    dropBox.setAttribute(\n      \"src\",\n      \"https://www.dropbox.com/static/api/2/dropins.js\"\n    );\n    dropBox.setAttribute(\"id\", \"dropboxjs\");\n    dropBox.setAttribute(\"data-app-key\", config.DROPBOX_KEY);\n    document.head.appendChild(dropBox);\n  }\n};\n</script>\n"]}]}