{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/components/SideFolders.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/components/SideFolders.vue","mtime":1573548261933},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"SideFolders\",\n  props: {\n    folders: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    layer_id: {\n      type: String,\n      required: true,\n      default: \"\"\n    }\n  },\n  created() {\n    // console.log('111', this.folderss)\n  },\n  mounted() {\n    // console.log('222', this.folders)\n  },\n  methods: {\n    rename(index, cur_name) {\n      this.$root.$emit('renameFolder', this.layer_id+'/'+index, cur_name);\n    },\n    move(index, id) {\n      this.$root.$emit('moveFolder', this.layer_id+'/'+index, id);\n    },\n    remove(index, id) {\n      this.$root.$emit('removeFolder', this.layer_id, index, id);\n    },\n    newFolder(index) {\n      this.$root.$emit('newFolder', this.layer_id+'/'+index);\n    },\n  }\n};\n",{"version":3,"sources":["SideFolders.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SideFolders.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"folder-items\">\n    <div class=\"folder-item\" v-for=\"(folder, index) in folders\" :key=\"index\">\n      <div class=\"folder-name\" v-b-toggle=\"layer_id+'/'+index\">\n        <div>\n          <i class=\"fa fa-caret-down toggle-icon\" v-if=\"folder.children && folder.children.length > 0\"/>\n          <span class=\"space-div\" v-if=\"!folder.children || folder.children.length <= 0\"/>\n          <i class=\"fa fa-folder-open\" /> {{folder.name}}\n        </div>\n         <b-dropdown variant=\"link\" left toggle-class=\"text-decoration-none\" no-caret >\n            <template slot=\"button-content\">\n              <i class=\"fa fa-ellipsis-v folder-menu\" />\n            </template>\n            <b-dropdown-item v-if=\"folder.id > 0\" v-on:click=\"rename(index, folder.name)\">Rename</b-dropdown-item>\n            <b-dropdown-item v-if=\"folder.id > 0\" v-on:click=\"move(index, folder.id)\">Move</b-dropdown-item>\n            <b-dropdown-item v-if=\"folder.id > 0\" v-on:click=\"remove(index, folder.id)\">Delete</b-dropdown-item>\n            <b-dropdown-item v-on:click=\"newFolder(index)\">New Subfolder</b-dropdown-item>\n         </b-dropdown>\n      </div>\n      <b-collapse v-if=\"folder.children && folder.children.length > 0\" :id=\"layer_id+'/'+index\">\n        <SideFolders :folders=\"folder.children\" :layer_id=\"layer_id+'/'+index\"/>\n      </b-collapse>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"SideFolders\",\n  props: {\n    folders: {\n      type: Array,\n      required: true,\n      default: () => []\n    },\n    layer_id: {\n      type: String,\n      required: true,\n      default: \"\"\n    }\n  },\n  created() {\n    // console.log('111', this.folderss)\n  },\n  mounted() {\n    // console.log('222', this.folders)\n  },\n  methods: {\n    rename(index, cur_name) {\n      this.$root.$emit('renameFolder', this.layer_id+'/'+index, cur_name);\n    },\n    move(index, id) {\n      this.$root.$emit('moveFolder', this.layer_id+'/'+index, id);\n    },\n    remove(index, id) {\n      this.$root.$emit('removeFolder', this.layer_id, index, id);\n    },\n    newFolder(index) {\n      this.$root.$emit('newFolder', this.layer_id+'/'+index);\n    },\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"./SideFolders.scss\";\n</style>\n"]}]}