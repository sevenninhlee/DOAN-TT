{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/components/DrawingBoard.vue?vue&type=style&index=0&id=6fb44d98&lang=scss&scoped=true&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/components/DrawingBoard.vue","mtime":1573548261925},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/css-loader/index.js","mtime":1571304325802},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1571304326381},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/sass-loader/dist/cjs.js","mtime":1571304338110},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.canvas-border{\n  border: solid 2px #ebebeb;\n}\n",{"version":3,"sources":["DrawingBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA","file":"DrawingBoard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"canvas-border\">\n    <canvas\n      :ref=\"canvas_id\"\n      v-on:mousedown=\"handleMouseDown\"\n      v-on:mouseout=\"handleMouseOut\"\n      v-on:mouseup=\"handleMouseUp\"\n      v-on:mousemove=\"handleMouseMove\"\n      v-bind=\"stageSize\"\n    ></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    paramData: Object,\n    drawSize: Object\n  },\n  data: function() {\n    return {\n      canvas_id: '',\n      stageSize: {\n        width: this.drawSize.width,\n        height: this.drawSize.height\n      },\n      mouse: {\n        current: {\n          x: 0,\n          y: 0\n        },\n        previous: {\n          x: 0,\n          y: 0\n        },\n        down: false\n      }\n    };\n  },\n  computed: {\n    currentMouse: function() {\n      var c = this.$refs[this.canvas_id];\n      var rect = c.getBoundingClientRect();\n\n      return {\n        x: this.mouse.current.x - rect.left,\n        y: this.mouse.current.y - rect.top\n      };\n    }\n  },\n  mounted() {\n    this.canvas_id = 'canvas-' + this.paramData.name\n  },\n  methods: {\n    draw: function(event) {\n      var c = this.$refs[this.canvas_id];\n      var ctx = c.getContext(\"2d\");\n      // requestAnimationFrame(this.draw);\n\n      if (this.mouse.down) {\n        ctx.clearRect(0, 0, this.drawSize.width, this.drawSize.height);\n\n        ctx.lineTo(this.currentMouse.x, this.currentMouse.y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n    },\n    handleMouseDown: function(event) {\n      var c = this.$refs[this.canvas_id];\n      var ctx = c.getContext(\"2d\");\n      \n      this.mouse.down = true;\n      this.mouse.current = {\n        x: event.pageX,\n        y: event.pageY\n      };\n      \n      ctx.moveTo(this.currentMouse.x, this.currentMouse.y);\n    },\n    handleMouseOut: function(event) {\n      this.mouse.down = false;\n    },\n    handleMouseUp: function() {\n      this.mouse.down = false;\n    },\n    handleMouseMove: function(event) {\n      this.mouse.current = {\n        x: event.pageX,\n        y: event.pageY\n      };\n\n      this.draw(event);\n    },\n    getDataURL: function () {\n      var c = this.$refs[this.canvas_id];\n      return c.toDataURL('image/svg+xml')\n    }\n  },\n  ready: function() {\n    var c = this.$refs[this.canvas_id];\n    let ctx = c.getContext('2d', {antialias: false});\n    ctx.translate(0.5, 0.5);\n    ctx.mozImageSmoothingEnabled = false;\n    ctx.webkitImageSmoothingEnabled = false;\n    ctx.msImageSmoothingEnabled = false;\n    ctx.imageSmoothingEnabled = false;\n    // this.draw();\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.canvas-border{\n  border: solid 2px #ebebeb;\n}\n</style>"]}]}