{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/authentication/Login.vue?vue&type=template&id=2cd5a1e8&scoped=true&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/authentication/Login.vue","mtime":1573548269881},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1571304326381},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-container\",\n    {\n      staticClass: \"auth-page login\",\n      staticStyle: { position: \"relative\", display: \"inline-block\" },\n      attrs: { fluid: \"\" }\n    },\n    [\n      _c(\"custom-loader\", {\n        attrs: { \"own-loading\": _vm.pageLoading, \"no-sidebar\": _vm.nosidebar }\n      }),\n      _c(\"error\"),\n      _c(\n        \"b-row\",\n        { staticClass: \"container header\" },\n        [_c(\"b-col\", { attrs: { md: \"12\" } }, [_c(\"AuthHeader\")], 1)],\n        1\n      ),\n      _c(\n        \"b-row\",\n        { staticClass: \"auth-form\" },\n        [\n          _c(\n            \"b-col\",\n            {\n              staticClass: \"wrapper\",\n              attrs: { lg: \"5\", md: \"8\", \"offset-md\": \"2\" }\n            },\n            [\n              _c(\n                \"b-form\",\n                {\n                  on: {\n                    submit: function($event) {\n                      $event.preventDefault()\n                      return _vm.onLogin($event)\n                    }\n                  }\n                },\n                [\n                  _c(\"h3\", { staticClass: \"form-title\" }, [\n                    _vm._v(_vm._s(_vm.$t(\"auth.signintitle\")))\n                  ]),\n                  _c(\n                    \"span\",\n                    { staticClass: \"form-subtitle text-gray\" },\n                    [\n                      _vm._v(_vm._s(_vm.$t(\"auth.signinsubtitle\")) + \"Â \"),\n                      _c(\n                        \"b-link\",\n                        {\n                          staticClass: \"text-coffee-light link\",\n                          attrs: { href: \"javascript:;\" },\n                          on: { click: _vm.toSignup }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"auth.signinsubtitle2\")))]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      class: {\n                        \"form-group-withicon\": true,\n                        \"form-group-focus\":\n                          _vm.validator.email.focus &&\n                          !_vm.validator.email.error &&\n                          (!_vm.validator.email.blured ||\n                            _vm.validEmail(_vm.form.email)),\n                        \"form-group-invalid\":\n                          !_vm.validEmail(_vm.form.email) &&\n                          _vm.validator.email.blured,\n                        \"form-group-valid\":\n                          _vm.validator.email.blured &&\n                          (_vm.validEmail(_vm.form.email) &&\n                            !_vm.validator.email.error)\n                      },\n                      attrs: { id: \"grpEmail\" }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        class: {\n                          \"form-control-coffee\": true,\n                          \"input-invalid\":\n                            !_vm.validEmail(_vm.form.email) &&\n                            _vm.validator.email.blured,\n                          \"input-valid\":\n                            _vm.validator.email.blured &&\n                            (_vm.validEmail(_vm.form.email) &&\n                              !_vm.validator.email.error)\n                        },\n                        attrs: {\n                          id: \"email\",\n                          type: \"email\",\n                          placeholder: _vm.$t(\"auth.input.email\"),\n                          autocomplete: \"username\"\n                        },\n                        on: {\n                          blur: function($event) {\n                            ;(_vm.validator.email.blured = true),\n                              (_vm.validator.email.focus = false)\n                          },\n                          focus: function($event) {\n                            _vm.validator.email.focus = true\n                          }\n                        },\n                        model: {\n                          value: _vm.form.email,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"email\", $$v)\n                          },\n                          expression: \"form.email\"\n                        }\n                      }),\n                      _c(\"font-awesome-icon\", {\n                        attrs: { icon: \"envelope-open\" }\n                      }),\n                      !_vm.validEmail(_vm.form.email) &&\n                      _vm.validator.email.blured\n                        ? _c(\"p\", { staticClass: \"validation-error\" }, [\n                            _vm._v(_vm._s(_vm.validator.email.text))\n                          ])\n                        : _vm._e()\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    {\n                      class: {\n                        \"form-group-withicon\": true,\n                        \"form-group-focus\":\n                          _vm.validator.password.focus &&\n                          !_vm.validator.password.error &&\n                          (!_vm.validator.password.blured ||\n                            _vm.validPassword(_vm.form.password)),\n                        \"form-group-password\": true,\n                        \"form-group-invalid\":\n                          _vm.validator.password.blured &&\n                          !_vm.validPassword(_vm.form.password),\n                        \"form-group-valid\":\n                          _vm.validator.password.blured &&\n                          (_vm.validPassword(_vm.form.password) &&\n                            !_vm.validator.password.error)\n                      },\n                      attrs: { id: \"grpPassword\" }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        class: {\n                          \"form-control-coffee\": true,\n                          password: true,\n                          \"input-valid\":\n                            _vm.validator.password.blured &&\n                            (_vm.validPassword(_vm.form.password) &&\n                              !_vm.validator.password.error),\n                          \"input-invalid\":\n                            !_vm.validPassword(_vm.form.password) &&\n                            _vm.validator.password.blured\n                        },\n                        attrs: {\n                          id: \"password\",\n                          type: _vm.isShowPassword ? \"text\" : \"password\",\n                          placeholder: _vm.$t(\"auth.input.password\"),\n                          autocomplete: \"current-password\"\n                        },\n                        on: {\n                          blur: function($event) {\n                            ;(_vm.validator.password.blured = true),\n                              (_vm.validator.password.focus = false)\n                          },\n                          focus: function($event) {\n                            _vm.validator.password.focus = true\n                          }\n                        },\n                        model: {\n                          value: _vm.form.password,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"password\", $$v)\n                          },\n                          expression: \"form.password\"\n                        }\n                      }),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"eye\",\n                          on: { click: _vm.onShowPassword }\n                        },\n                        [\n                          _vm.isShowPassword\n                            ? _c(\"font-awesome-icon\", {\n                                attrs: { icon: \"eye-slash\" }\n                              })\n                            : _c(\"font-awesome-icon\", {\n                                attrs: { icon: \"eye\" }\n                              })\n                        ],\n                        1\n                      ),\n                      _c(\"font-awesome-icon\", { attrs: { icon: \"lock\" } }),\n                      !_vm.validPassword(_vm.form.password) &&\n                      _vm.validator.password.blured\n                        ? _c(\"p\", { staticClass: \"validation-error\" }, [\n                            _vm._v(_vm._s(_vm.validator.password.text))\n                          ])\n                        : _vm._e()\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { id: \"remember\" } },\n                    [\n                      _c(\n                        \"b-form-checkbox\",\n                        {\n                          staticClass: \"form-checkbox-coffee pull-left\",\n                          attrs: { id: \"remember_me\" },\n                          model: {\n                            value: _vm.form.remember_me,\n                            callback: function($$v) {\n                              _vm.$set(_vm.form, \"remember_me\", $$v)\n                            },\n                            expression: \"form.remember_me\"\n                          }\n                        },\n                        [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"auth.input.remember\")) +\n                              \"\\n          \"\n                          )\n                        ]\n                      ),\n                      _c(\n                        \"b-link\",\n                        {\n                          staticClass: \"text-coffee-light link pull-right\",\n                          attrs: { href: \"javascript:;\" },\n                          on: { click: _vm.toPassword }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"auth.input.forgot\")))]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\"input\", {\n                    staticClass: \"btn btn-block btn-md btn-coffee\",\n                    attrs: { type: \"submit\" },\n                    domProps: { value: _vm.$t(\"auth.button.signin\") }\n                  })\n                ],\n                1\n              ),\n              _c(\"div\", { staticClass: \"signup-withsocial\" }, [\n                _c(\"p\", { staticClass: \"text-gray\" }, [\n                  _vm._v(_vm._s(_vm.$t(\"auth.socincomment\")))\n                ]),\n                _c(\n                  \"div\",\n                  { staticClass: \"social-links\" },\n                  [\n                    _c(\"facebook-login\", {\n                      key: _vm.fbkey,\n                      staticClass: \"button btn-facebook\",\n                      attrs: { appId: _vm.fbAppId },\n                      on: {\n                        login: _vm.onFBLogin,\n                        logout: _vm.onFBLogout,\n                        \"sdk-loaded\": _vm.onFBSdkLoaded\n                      }\n                    }),\n                    _c(\"GoogleLogin\", {\n                      staticClass: \"button btn-google\",\n                      attrs: {\n                        params: _vm.googleLoginParams,\n                        onSuccess: _vm.onGLoginSuccess,\n                        onFailure: _vm.onGLoginFailure\n                      }\n                    }),\n                    _c(\n                      \"b-link\",\n                      {\n                        attrs: {\n                          href:\n                            \"https://access.line.me/oauth2/v2.1/authorize?response_type=code&client_id=\" +\n                            _vm.lineLoginParams.client_id +\n                            \"&redirect_uri=\" +\n                            _vm.server_url +\n                            \"/api/auth/lineauth&state=login12&scope=\" +\n                            this.stringToURL(_vm.lineLoginParams.scope)\n                        }\n                      },\n                      [_c(\"img\", { attrs: { src: \"/img/social/line.png\" } })]\n                    ),\n                    _c(\"KakaoLogin\", {\n                      attrs: {\n                        \"api-key\": _vm.kakaoLoginParams.api_key,\n                        \"on-success\": _vm.onKakaoLoginSuccess,\n                        \"on-failure\": _vm.onKakaoLoginFailure\n                      }\n                    })\n                  ],\n                  1\n                )\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}