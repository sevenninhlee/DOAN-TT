{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/payment/DocumentList.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/payment/DocumentList.vue","mtime":1573548269952},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/css-loader/index.js","mtime":1571304325802},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1571304326381},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/sass-loader/dist/cjs.js","mtime":1571304338110},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"./DocumentList.scss\";\n",{"version":3,"sources":["DocumentList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8aA","file":"DocumentList.vue","sourceRoot":"src/views/payment","sourcesContent":["<template>\n  <div class=\"app flex-row\">\n    <div class=\"w-100 document-list\">\n      <div class=\"action-header\">\n        <h1>{{ $t('payment.document.title') }}</h1>\n        <div class=\"action-search-field\">\n          <UserSelect\n            v-bind:value=\"progress_status\"\n            v-bind:items=\"['Status', 'All', 'Completed', 'Waiting', 'Declined', 'Voided']\"\n            @changeValue=\"changeProgressStatus\"\n            class=\"mb-0 mx-1 mobile-style\"\n          />\n          <UserSelect\n            v-bind:value=\"period\"\n            v-bind:items=\"['Date', 'Last 24 Hours', 'Last Week', 'Last 30 Days', 'Last 6 Months', 'Custom']\"\n            @changeValue=\"changePeriod\"\n            class=\"mb-0 mx-1 mobile-style\"\n          />\n          <b-input-group class=\"min-width-378px ml-1\">\n            <b-form-input \n            placeholder=\"Type here to search...\"\n            name=\"search\"\n            v-model=\"search\"\n            @input=\"filterDocuments\"\n            ></b-form-input>\n            <b-input-group-prepend class=\"mr-0\">\n              <b-input-group-text class=\"h-auto\">\n                <i class=\"fa fa-search\"></i>\n              </b-input-group-text>\n            </b-input-group-prepend>\n          </b-input-group>\n        </div>\n      </div>\n      <hr class=\"mb-4\" />\n      <div class=\"actions-table\">\n        <div class=\"table-header\">\n          <div class=\"d-flex align-items-center\">\n            <b-form-checkbox v-on:change=\"clickHeaderCheckbox($event)\" v-model=\"header_checkbox\" :indeterminate.sync=\"indeterminate\"></b-form-checkbox>\n            <template v-if=\"selected_items.length>0\">\n              <span>{{selected_items.length}} {{ $t('payment.document.table.selected') }}</span>\n              <b-button variant=\"outline-primary\" class=\"mx-3\" @click=\"deleteDocs\">{{ $t('payment.document.table.delete') }}</b-button>\n            </template>\n            <div class=\"col-basic-info comments d-mobile-none\">{{ $t('payment.document.table.document') }}</div>\n          </div>\n          <div class=\"d-flex align-items-center d-mobile-none\">\n            <div class=\"col-status comments\">{{ $t('payment.document.table.status') }}</div>\n            <div class=\"col-last-change comments\">{{ $t('payment.document.table.change') }}</div>\n            <div class=\"col-action comments\">{{ $t('payment.document.table.action') }}</div>\n          </div>\n        </div>\n        <div class=\"table-body\">\n          <div v-if=\"doc_list.length == 0\" class=\"table-row content-card\">\n            <p style=\"text-align: center;padding: 15px;font-size: 16px;\"> Data not found </p>\n          </div>\n          <div v-else class=\"table-row content-card\" v-for=\"(item, index) in doc_list\" :key=\"index\" @contextmenu.prevent=\"$refs.menu.open($event, {item: item})\">\n            <div class=\"row-content\">\n              <div class=\"d-flex align-items-center\" v-bind:style=\"item.status == 'Voided'?{opacity: 0.4}:null\">\n                <b-form-checkbox v-on:change=\"clickCheckBox($event, index, item.id)\" v-model=\"item.selected\"></b-form-checkbox>\n                <div class=\"col-basic-info\">\n                  <!-- <img :src=\"getFileType(item.title)\" class=\"doc-icon\" /> -->\n                  <div class=\"ml-3\">\n                    <div class=\"doc-name\">{{item.title}}</div>\n                    <div class=\"senders comments\">\n                      {{item.description}}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"col-status\">\n                  <div :class=\"getStyle(item.status)\">{{item.status}}</div>\n                </div>\n                <div class=\"col-last-change comments\">\n                  <div class=\"date\">{{ item.date | dateParse('YYYY-MM-DD HH:mm:ss') | dateFormat('DD.MM.YYYY') }}</div>\n                  <div class=\"comments\">{{ item.date | dateParse('YYYY-MM-DD HH:mm:ss') | dateFormat('HH:mm:ss a') }}</div>\n                </div>\n                <div class=\"col-action comments collapsed-header\" v-b-toggle=\"'collapse'+index.toString()\">\n                  <span class=\"collapsed-icon\"><i class=\"fa fa-caret-down \" ></i></span>\n                </div>\n              </div>\n            </div>\n            <b-collapse :id=\"'collapse'+index.toString()\" class=\"row-body\">\n              <div class=\"wrap-content\" v-for=\"(recip, index) in item.recipients\" :key=\"index\">\n                <div class=\"row-detail add-margin-left\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"col-basic-info remove-margin-left\">\n                      <img :src=\"recip.avatar\" style=\"width: 33px; height: 33px; border-radius: 50%\" />\n                      <div class=\"ml-3\">\n                        <div class=\"user-name\">{{recip.name}}</div>\n                        <div class=\"comments\">Sign status: {{getStatusRecipients(recip.action)}}</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"col-status\">\n                      <div :class=\"getStyleRecipients(recip.status)\">{{recip.status}}</div>\n                    </div>\n                    <div class=\"col-last-change\">\n                      <div class=\"date\">{{ recip.date | dateParse('YYYY-MM-DD HH:mm:ss') | dateFormat('DD.MM.YYYY') }}</div>\n                      <div class=\"comments\">{{ recip.date | dateParse('YYYY-MM-DD HH:mm:ss') | dateFormat('HH:mm:ss a') }}</div>\n                    </div>\n                    <div class=\"col-action comments\"></div>\n                  </div>\n                </div>\n              </div>\n            </b-collapse>\n          </div>\n          \n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between align-items-center flex-wrap\">\n        <div class=\"d-flex justify-content-between align-items-center flex-wrap\">\n          <span class=\"comments mr-3\">Per page</span>\n          <div>\n            <span class=\"mr-3 clickable-icon\" v-for=\"(item, index) in pages\" :key=\"index\" \n              v-bind:class=\"item == items_per_page?'selected':'comments'\"\n              v-on:click =\"items_per_page = item\"\n            >\n              {{item}}\n            </span>\n          </div>\n        </div>\n\n        <b-pagination align=\"right\" :total-rows=\"totalPage\" v-model=\"currentPage\" :per-page=\"items_per_page\" @input=\"getPostData(currentPage)\"></b-pagination>\n      </div>\n    </div>\n    <b-modal id=\"share-modal\" ref=\"share-modal\"\n       hide-footer centered size=\"lg\">\n      <div class=\"share-modal\" v-if=\"selected_template\">\n        <div class=\"title\">Do you want to share the XXX template with other users?</div>\n        <b-form-group>\n          <b-input-group>\n            <b-input-group-prepend>\n              <b-input-group-text>\n                <!-- <i class=\"fa fa-lock\"></i> -->\n                <UserIcon icon=\"file_name.svg\" class=\"mr-2\"/>\n              </b-input-group-text>\n            </b-input-group-prepend>\n            <b-form-input\n              type=\"text\"\n              placeholder=\"Input file name\"\n              v-model=\"selected_template.fileName\"\n            ></b-form-input>\n          </b-input-group>\n        </b-form-group>\n        <div class=\"doc-container mb-2\">\n          <div class=\"doc-tag\" v-for=\"(item, index) in tags\" :key=\"index\">\n            {{item}} <i class=\"fa fa-close ml-1 clickable-icon\" v-on:click=\"tags.splice(index,1);\"/>\n          </div>\n        </div>\n        \n        <b-form-group>\n          <b-input-group>\n            <b-input-group-prepend>\n              <b-input-group-text>\n                <i class=\"fa fa-tag\"/>\n              </b-input-group-text>\n            </b-input-group-prepend>\n            <b-form-input\n              type=\"text\"\n              placeholder=\"Input Tag name and click 'Enter'\"\n              v-model=\"tag_name\"\n              v-on:keyup.enter=\"tags.push(tag_name); tag_name='';\"\n            ></b-form-input>\n          </b-input-group>\n        </b-form-group>\n        <div class=\"d-flex flex-wrap mb-4\">\n          <div class=\"proposed-tag\" v-for=\"(item, index) in proposed_tag\" :key=\"index\">\n            {{item}}\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <button type=\"submit\" class=\"btn btn-primary\" v-on:click=\"shareTemplate()\">Share this template</button>\n        </div>\n      </div>\n    </b-modal>\n    <vue-context ref=\"menu\" class=\"context-menu\">\n      <template slot-scope=\"child\">\n        <li><a href=\"#\" @click.prevent=\"onClick($event, child.data)\"><i class=\"fa fa-pencil mr-2 clickable-icon\"/>Sign</a></li>\n        <li><a href=\"#\" @click.prevent=\"onClick($event, child.data)\"><i class=\"fa fa-copy mr-2 clickable-icon\"/>Create a copy</a></li>\n        <li><a href=\"#\" @click.prevent=\"openShareModal(child.data)\"> <i class=\"fa fa-download mr-2 clickable-icon\"/>Save as template</a></li>\n        <li><a href=\"#\" @click.prevent=\"onClick($event, child.data)\"><i class=\"fa fa-clock-o mr-2 clickable-icon\"/>History</a></li>\n        <li><a href=\"#\" @click.prevent=\"onClick($event, child.data)\"><i class=\"fa fa-file-excel-o mr-2 clickable-icon\"/>Export as CSV</a></li>\n        <li><a href=\"#\" @click.prevent=\"onClick($event, child.data)\"><i class=\"fa fa-trash mr-2 clickable-icon\"/>Delete</a></li>\n      </template>\n    </vue-context>\n  </div>\n</template>\n\n<script>\nimport UserIcon from \"../../components/UserIcon\";\nimport UserSelect from \"../../components/UserSelect\";\nimport { VueContext } from 'vue-context';\nimport store from '../../store/store'\nimport { mapGetters } from \"vuex\";\nimport {\n  GET_LIST_DOCUMENTS_REQUEST,\n  REMOVE_DOCUMENT_DETAIL_REQUEST\n} from \"../../store/modules/document\";\n\nexport default {\n  name: \"DocumentList\",\n  components: {\n    UserIcon,\n    UserSelect,\n    VueContext\n  },\n  data() {\n    return {\n      header_checkbox: false,\n      indeterminate: false,\n      selected_items: [],\n      selected_id_items: [],\n      items_per_page: 10,\n      pages: [10, 25, 50, 100],\n      tag_name: \"\",\n      selected_template: null,\n      tags: [\"Inquiry\", \"Report\", \"Tag #3\", \"Tag #4\", \"Tag #5\", \"Tag 6\", \"Report\", \"Tag #3\", \"Tag #4\"],\n      proposed_tag: [\"Proposed tag\", \"Example proposed tag\", \"Proposed tag\"],\n      doc_list: [],\n      doc_list_search: [],\n      currentPage: 1,\n      totalPage: null,\n      period: \"Date\",\n      progress_status: \"Status\",\n      actions: [\n        {\n          setted: false,\n          fileName: \"Continuous Improvement.pdf\"\n        }\n      ],\n      search: ''\n    };\n  },\n  created(){\n    this.getPostData()\n  },\n  mounted() {\n  },\n  filters: {\n    date: function (date) {\n      return moment(date).format('DD.MM.YYYY');\n    },\n    time: function (date) {\n      return moment(date).format('h:mm a');\n    },\n    moment: function (date) {\n      return moment(date).format('MMMM Do YYYY, h:mm:ss a');\n    }\n  },\n  computed: {\n    ...mapGetters(['getListDocs'])\n  },\n  methods: {\n    filterDocuments() {\n      // this.filteredList()\n      this.getPostData()\n      this.totalPage = this.doc_list.length\n    },\n    filteredList() {\n      let vm = this;\n      let doc_list_search =  this.doc_list_search\n      if(this.search !== ''){\n        this.doc_list = doc_list_search.filter(item => item.title.toLowerCase().indexOf(vm.search.toLowerCase()) > -1)\n      }else{\n        this.doc_list = this.doc_list_search\n      }\n    },\n    getPostData() {\n      store.dispatch(GET_LIST_DOCUMENTS_REQUEST, {per_page: this.items_per_page, page: this.currentPage, date: this.period, status: this.progress_status, search: this.search})\n      .then( res => {\n        this.doc_list = this.convertListDocs(this.getListDocs);\n        this.doc_list_search = this.convertListDocs(this.getListDocs);\n      })\n      .catch( err => {\n        console.log('err---------', err)\n      });\n    },\n    convertListDocs(list){\n      this.totalPage = list.total;\n      let data = {};\n      const list_docs = list.data.map((value, key) => {\n        this.convertDescription(value.recipients)\n        return {...data, id: value.document_id, selected: false, title: value.name, status: value.status, description: this.convertDescription(value.recipients), recipients: this.convertRecipients(value.recipients), date: value.updated_at}\n      })\n      return list_docs.sort(function (a, b) {\n        return new Date(b.date) - new Date(a.date);\n      });\n      // this.doc_list = list_docs.sort(function (a, b) {\n      //   return new Date(b.date) - new Date(a.date);\n      // });\n    },\n    convertRecipients(list){\n      let data = {};\n      const list_docs = list.map((value, key) => {\n        return {...data, name: value.name, status: value.status == 0 ? 'Waiting to sign' : 'Completed', action: value.action, avatar: value.user && value.user.avatar ? value.user.avatar : 'img/avatars/default.png', date: value.updated_at}\n      })\n      return list_docs;\n    },\n    convertDescription(list){\n      const name = []; \n      list.map((value, key) => {\n        name.push(value.name);\n      })\n      return name.join(', ');\n    },\n    filterDocs(list, value)\n    {\n      const data = list.filter( v => {\n        return v.document_id === value;\n      })\n    },\n    removeDuplicates(originalArray, prop) {\n      var newArray = [];\n      var lookupObject  = {};\n\n      for(var i in originalArray) {\n        lookupObject[originalArray[i][prop]] = originalArray[i];\n      }\n\n      for(i in lookupObject) {\n         newArray.push(lookupObject[i]);\n      }\n      return newArray;\n    },\n    getStyle(status){\n      if(status == 'completed') {\n        return \"status completed\"\n      } else if(status == 'waiting') {\n        return \"status waiting\"\n      } else if(status == 'Rejected') {\n        return \"status rejected\"\n      } else if(status == 'Voided') {\n        return \"status voided\"\n      } \n      return \"status completed\";\n    },\n    getStyleRecipients(status){\n      if(status == 'Completed') {\n        return \"status completed\"\n      } else if(status == 'Waiting to sign') {\n        return \"status waiting\"\n      }\n      return \"status completed\";\n    },\n    getStatusRecipients(status){\n      if(status == 'sign') {\n        return \"Needs to Sign\"\n      } else if(status == 'signer') {\n        return \"In personal signer\"\n      } else if(status == 'copy') {\n        return \"Receives a Copy\"\n      }\n    },\n    shareTemplate() {\n\n    },\n    openShareModal(item) {\n      this.selected_template = item;\n      this.$refs['share-modal'].show();\n    },\n    clickHeaderCheckbox($event) {\n      this.selected_items = [];\n      this.selected_id_items = [];\n      this.doc_list.forEach((item, index) => {\n        item.selected = $event;\n        if($event) {\n          this.selected_items.push(index);\n          this.selected_id_items.push(item.id);\n        } \n      });\n    },\n    clickCheckBox($event, index, id) {\n      const pos = this.selected_items.indexOf(index);\n      if($event) {\n        if(pos<0) {\n          this.selected_items.push(index);\n          this.selected_id_items.push(id);\n        } \n      } else {\n        if(pos>=0){\n          this.selected_items.splice(pos, 1);\n          this.selected_id_items.splice(pos, 1);\n        }\n      }\n      if(this.selected_items.length>0) {\n        \n        if(this.selected_items.length == this.doc_list.length){\n          this.header_checkbox = true;\n          this.indeterminate = false;\n        } else {\n          this.indeterminate = true;\n        }\n      } else {\n        this.indeterminate = false;\n        this.header_checkbox = false;\n      }\n    },\n    onClick(event, data) {\n      console.log(data);\n    },\n    getFileType(fileName) {\n      return \"img/icons/\" + fileName.split(\".\").pop() + \".svg\";\n    },\n    changePeriod(e) {\n      this.period = e;\n      this.getPostData();\n    },\n    changeProgressStatus(e) {\n      this.progress_status = e;\n      this.getPostData();\n    },\n    deleteDocs() {\n      store.dispatch(REMOVE_DOCUMENT_DETAIL_REQUEST, {document_id: this.selected_id_items})\n      .then( res => {\n        res && res.status && this.getPostData();\n        this.selected_items = [];\n        this.header_checkbox = false;\n        this.indeterminate = false;\n        \n      })\n      .catch( err => {\n        console.log('err---------', err)\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./DocumentList.scss\";\n</style>\n\n"]}]}