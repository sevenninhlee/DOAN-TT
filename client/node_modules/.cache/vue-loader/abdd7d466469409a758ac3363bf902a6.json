{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/components/UserSidebarEx.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/components/UserSidebarEx.vue","mtime":1573548262114},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/css-loader/index.js","mtime":1571304325802},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1571304326381},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/sass-loader/dist/cjs.js","mtime":1571304338110},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"./UserSidebarEx.scss\";\n",{"version":3,"sources":["UserSidebarEx.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA","file":"UserSidebarEx.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"user-sidebar-nav remove-user-drag\">\n    <div v-for=\"(item, index) in items\" :key=\"index\" class=\"user-item\">\n      <div\n        class=\"user-name tool\"\n        v-b-toggle=\"`tools-collaps-${index}`\"\n        v-bind:style=\"{color: item.color}\"\n      >\n        <i class=\"fa fa-caret-right toggle-icon\" />\n        <i v-bind:class=\"item.icon\" />\n        {{item.name}}\n      </div>\n      <b-collapse\n        class=\"user-tool-pannel\"\n        :id=\"`tools-collaps-${index}`\"\n        role=\"tabpanel\"\n        accordion=\"tools-accordion\"\n        :visible=\"index===0\"\n      >\n        <div class=\"col\" style=\"padding: 0\">\n          <div v-for=\"(tool, index1) in item.children\" :key=\"index1\" class=\"tool\">\n            <span\n              :id=\"`list_drag_${index}_${index1}`\"\n              class=\"user-drag\"\n              :data-color=\"item.color\"\n              :data-tool=\"addDataToElement(item, tool)\"\n            >\n              <font-awesome-icon icon=\"stamp\" v-if=\"tool.icon == 'fas fa-stamp'\" style=\"margin-right: 10px;\"></font-awesome-icon>\n              <i v-bind:class=\"tool.icon\" v-else/>\n              <span>{{$t(tool.label)}}</span>\n            </span>\n          </div>\n        </div>\n\n        <!-- <draggable\n          :list=\"item.children\"\n          :clone=\"cloneTool\"\n          :group=\"{ name: 'people', pull: 'clone', put: false }\"\n        >\n          <div v-for=\"(tool, index1) in item.children\" :key=\"index1\" class=\"tool\">\n            <i v-bind:class=\"tool.tool_icon\" />\n            {{tool.tool_name}}\n          </div>\n        </draggable>-->\n      </b-collapse>\n    </div>\n  </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\";\nimport { userListDefaultColors } from \"../helpers\";\nimport { userSideBarHandle, prepareTools } from \"../helpers/prepareHandle\";\nimport { GET_RECIPIENTS, DELETE_ANNTATION } from \"../store/modules/document\";\nimport { omit } from \"lodash\";\nimport { EventBus } from \"../config/event-bus\";\n\nexport default {\n  name: \"UserSidebarEx\",\n  components: {\n    draggable\n  },\n  props: {\n    navItems: {\n      type: Array,\n      required: true,\n      default: () => []\n    }\n  },\n  data() {\n    // const items = this.navItems.map(item => {\n    //   const children = prepareTools.map(tool => tool);\n    //   return {\n    //     ...item,\n    //     children: children\n    //   };\n    // });\n    return {\n      // items: items,\n      clientInfo: {},\n      items: []\n    };\n  },\n  computed: {\n    psSettings: () => {\n      // ToDo: find better rtl fix\n      return {\n        maxScrollbarLength: 200,\n        minScrollbarLength: 40,\n        suppressScrollX:\n          getComputedStyle(document.querySelector(\"html\")).direction !== \"rtl\",\n        wheelPropagation: false,\n        interceptRailY: styles => ({ ...styles, height: 0 })\n      };\n    }\n  },\n  methods: {\n    cloneTool(item) {\n      this.$emit(\"dragTool\");\n      return {\n        ...item\n      };\n    },\n    addDataToElement(item, tool) {\n      return JSON.stringify({\n        ...omit(item, [\"children\"]),\n        tool: { ...tool },\n        clientId: this.clientInfo.id\n      });\n    }\n  },\n  mounted() {\n    let vm = this;\n    vm.$store\n      .dispatch(GET_RECIPIENTS, vm.$route.query.document_id)\n      .then(res => {\n        if (res.status && res.list) {\n          vm.items = res.list.map((item, key) => {\n            const children = prepareTools.map(tool => tool);\n            return {\n              ...item,\n              color: userListDefaultColors[key],\n              icon: \"fa fa-user\",\n              children: children\n            };\n          });\n          EventBus.$emit(\"recipientsList\", vm.items);\n          userSideBarHandle((annotation_id, draggable) => {\n            vm.$store.dispatch(DELETE_ANNTATION, annotation_id).then(res => {\n              $(draggable).remove();\n            });\n          });\n        }\n      });\n\n    EventBus.$on(\"clientInfo\", clientInfo => {\n      vm.clientInfo = clientInfo;\n    });\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"./UserSidebarEx.scss\";\n</style>\n"]}]}