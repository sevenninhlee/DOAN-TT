{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/components/connect/Box.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/components/connect/Box.vue","mtime":1573548262158},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport UserIcon from \"../UserIcon\";\nimport config from \"../../config/config\";\nimport { extensionToMimeType, convertUrlToFile } from \"../../helpers\";\n\nexport default {\n  name: \"Box\",\n  components: {\n    UserIcon\n  },\n  props: {},\n  data() {\n    return {\n      pickerApiLoaded: false,\n      oauthToken: null\n    };\n  },\n  methods: {\n    chooserFile() {\n      let options = {\n        clientId: config.BOX.CLIENT_ID,\n        linkType: \"direct\",\n        multiselect: true\n      };\n      let boxSelect = new BoxSelect(options);\n      const self = this;\n\n      boxSelect.launchPopup();\n\n      // Register a success callback handler\n      boxSelect.success(function(response) {\n        let attachments =\n          response &&\n          response.length > 0 &&\n          response.map(v => {\n            // return convertUrlToFile(v, 'url');\n            return {\n              ...v,\n              type: extensionToMimeType(`${v.name.split(\".\")[1]}`),\n              downloadUrl: v[\"url\"],\n            };\n          });\n        self.$emit(\"addFiles\", attachments, true);\n      });\n      // Register a cancel callback handler\n      boxSelect.cancel(function() {\n        console.log(\"The user clicked cancel or closed the popup\");\n      });\n    }\n  },\n  mounted() {\n    let boxScript = document.createElement(\"script\");\n    boxScript.setAttribute(\"src\", \"https://app.box.com/js/static/select.js\");\n    document.head.appendChild(boxScript);\n  }\n};\n",{"version":3,"sources":["Box.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Box.vue","sourceRoot":"src/components/connect","sourcesContent":["<template>\n  <span v-on:click=\"chooserFile()\">\n    <UserIcon icon=\"box.svg\" class=\"store-src-item\" />\n  </span>\n</template>\n\n<script>\nimport UserIcon from \"../UserIcon\";\nimport config from \"../../config/config\";\nimport { extensionToMimeType, convertUrlToFile } from \"../../helpers\";\n\nexport default {\n  name: \"Box\",\n  components: {\n    UserIcon\n  },\n  props: {},\n  data() {\n    return {\n      pickerApiLoaded: false,\n      oauthToken: null\n    };\n  },\n  methods: {\n    chooserFile() {\n      let options = {\n        clientId: config.BOX.CLIENT_ID,\n        linkType: \"direct\",\n        multiselect: true\n      };\n      let boxSelect = new BoxSelect(options);\n      const self = this;\n\n      boxSelect.launchPopup();\n\n      // Register a success callback handler\n      boxSelect.success(function(response) {\n        let attachments =\n          response &&\n          response.length > 0 &&\n          response.map(v => {\n            // return convertUrlToFile(v, 'url');\n            return {\n              ...v,\n              type: extensionToMimeType(`${v.name.split(\".\")[1]}`),\n              downloadUrl: v[\"url\"],\n            };\n          });\n        self.$emit(\"addFiles\", attachments, true);\n      });\n      // Register a cancel callback handler\n      boxSelect.cancel(function() {\n        console.log(\"The user clicked cancel or closed the popup\");\n      });\n    }\n  },\n  mounted() {\n    let boxScript = document.createElement(\"script\");\n    boxScript.setAttribute(\"src\", \"https://app.box.com/js/static/select.js\");\n    document.head.appendChild(boxScript);\n  }\n};\n</script>\n"]}]}