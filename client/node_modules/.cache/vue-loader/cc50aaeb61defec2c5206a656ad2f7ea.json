{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/payment/NormalSigin_cp.vue?vue&type=template&id=4247c700&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/payment/NormalSigin_cp.vue","mtime":1573548269963},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1571304326381},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"test\" } }, [\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.model,\n            expression: \"model\"\n          }\n        ],\n        staticClass: \"model\",\n        on: {\n          click: function($event) {\n            _vm.model = false\n          }\n        }\n      },\n      [\n        _c(\"div\", { staticClass: \"model-show\" }, [\n          _c(\"img\", { attrs: { src: _vm.modelSrc, alt: \"\" } })\n        ])\n      ]\n    ),\n    _c(\"p\", [_vm._v(\"例子\")]),\n    _c(\n      \"div\",\n      { staticClass: \"cut\" },\n      [\n        _c(\"vue-cropper\", {\n          ref: \"cropper\",\n          attrs: {\n            img: _vm.option.img,\n            src: _vm.option.img,\n            \"output-size\": _vm.option.size,\n            \"output-type\": _vm.option.outputType,\n            info: true,\n            full: _vm.option.full,\n            fixed: _vm.fixed,\n            \"fixed-number\": _vm.fixedNumber,\n            \"can-move\": _vm.option.canMove,\n            \"can-move-box\": _vm.option.canMoveBox,\n            \"fixed-box\": _vm.option.fixedBox,\n            original: _vm.option.original,\n            \"auto-crop\": _vm.option.autoCrop,\n            \"auto-crop-width\": _vm.option.autoCropWidth,\n            \"auto-crop-height\": _vm.option.autoCropHeight,\n            \"center-box\": _vm.option.centerBox,\n            high: _vm.option.high,\n            mode: \"cover\"\n          },\n          on: { \"real-time\": _vm.realTime, \"img-load\": _vm.imgLoad }\n        })\n      ],\n      1\n    ),\n    _c(\n      \"div\",\n      {\n        staticClass: \"show-preview\",\n        style: {\n          width: _vm.previews.w + \"px\",\n          height: _vm.previews.h + \"px\",\n          overflow: \"hidden\",\n          margin: \"5px\"\n        }\n      },\n      [\n        _c(\"div\", { style: _vm.previews.div }, [\n          _c(\"img\", {\n            style: _vm.previews.img,\n            attrs: { src: _vm.previews.url }\n          })\n        ])\n      ]\n    ),\n    _c(\"div\", { staticClass: \"test-button\" }, [\n      _c(\"button\", { staticClass: \"btn\", on: { click: _vm.changeImg } }, [\n        _vm._v(\"changeImg\")\n      ]),\n      _c(\"label\", { staticClass: \"btn\", attrs: { for: \"uploads\" } }, [\n        _vm._v(\"upload\")\n      ]),\n      _c(\"input\", {\n        staticStyle: { position: \"absolute\", clip: \"rect(0 0 0 0)\" },\n        attrs: {\n          type: \"file\",\n          id: \"uploads\",\n          accept: \"image/png, image/jpeg, image/gif, image/jpg\"\n        },\n        on: {\n          change: function($event) {\n            return _vm.uploadImg($event, 1)\n          }\n        }\n      }),\n      !_vm.crap\n        ? _c(\"button\", { staticClass: \"btn\", on: { click: _vm.startCrop } }, [\n            _vm._v(\"start\")\n          ])\n        : _c(\"button\", { staticClass: \"btn\", on: { click: _vm.stopCrop } }, [\n            _vm._v(\"stop\")\n          ]),\n      _c(\"button\", { staticClass: \"btn\", on: { click: _vm.clearCrop } }, [\n        _vm._v(\"clear\")\n      ]),\n      _c(\"button\", { staticClass: \"btn\", on: { click: _vm.refreshCrop } }, [\n        _vm._v(\"refresh\")\n      ]),\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn\",\n          on: {\n            click: function($event) {\n              return _vm.changeScale(1)\n            }\n          }\n        },\n        [_vm._v(\"+\")]\n      ),\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn\",\n          on: {\n            click: function($event) {\n              return _vm.changeScale(-1)\n            }\n          }\n        },\n        [_vm._v(\"-\")]\n      ),\n      _c(\"button\", { staticClass: \"btn\", on: { click: _vm.rotateLeft } }, [\n        _vm._v(\"rotateLeft\")\n      ]),\n      _c(\"button\", { staticClass: \"btn\", on: { click: _vm.rotateRight } }, [\n        _vm._v(\"rotateRight\")\n      ]),\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn\",\n          on: {\n            click: function($event) {\n              return _vm.finish(\"base64\")\n            }\n          }\n        },\n        [_vm._v(\"preview(base64)\")]\n      ),\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn\",\n          on: {\n            click: function($event) {\n              return _vm.finish(\"blob\")\n            }\n          }\n        },\n        [_vm._v(\"preview(blob)\")]\n      ),\n      _c(\n        \"a\",\n        {\n          staticClass: \"btn\",\n          on: {\n            click: function($event) {\n              return _vm.down(\"base64\")\n            }\n          }\n        },\n        [_vm._v(\"download(base64)\")]\n      ),\n      _c(\n        \"a\",\n        {\n          staticClass: \"btn\",\n          on: {\n            click: function($event) {\n              return _vm.down(\"blob\")\n            }\n          }\n        },\n        [_vm._v(\"download(blob)\")]\n      ),\n      _c(\"div\", { staticStyle: { display: \"block\", width: \"100%\" } }, [\n        _c(\"label\", { staticClass: \"c-item\" }, [\n          _c(\"span\", [_vm._v(\"上传图片是否显示原始宽高 (针对大图 可以铺满)\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.option.original,\n                expression: \"option.original\"\n              }\n            ],\n            attrs: { type: \"checkbox\" },\n            domProps: {\n              checked: Array.isArray(_vm.option.original)\n                ? _vm._i(_vm.option.original, null) > -1\n                : _vm.option.original\n            },\n            on: {\n              change: function($event) {\n                var $$a = _vm.option.original,\n                  $$el = $event.target,\n                  $$c = $$el.checked ? true : false\n                if (Array.isArray($$a)) {\n                  var $$v = null,\n                    $$i = _vm._i($$a, $$v)\n                  if ($$el.checked) {\n                    $$i < 0 &&\n                      _vm.$set(_vm.option, \"original\", $$a.concat([$$v]))\n                  } else {\n                    $$i > -1 &&\n                      _vm.$set(\n                        _vm.option,\n                        \"original\",\n                        $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                      )\n                  }\n                } else {\n                  _vm.$set(_vm.option, \"original\", $$c)\n                }\n              }\n            }\n          }),\n          _c(\"span\", [_vm._v(\"original: \" + _vm._s(_vm.option.original))])\n        ]),\n        _c(\"label\", { staticClass: \"c-item\" }, [\n          _c(\"span\", [_vm._v(\"能否拖动图片\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.option.canMove,\n                expression: \"option.canMove\"\n              }\n            ],\n            attrs: { type: \"checkbox\" },\n            domProps: {\n              checked: Array.isArray(_vm.option.canMove)\n                ? _vm._i(_vm.option.canMove, null) > -1\n                : _vm.option.canMove\n            },\n            on: {\n              change: function($event) {\n                var $$a = _vm.option.canMove,\n                  $$el = $event.target,\n                  $$c = $$el.checked ? true : false\n                if (Array.isArray($$a)) {\n                  var $$v = null,\n                    $$i = _vm._i($$a, $$v)\n                  if ($$el.checked) {\n                    $$i < 0 &&\n                      _vm.$set(_vm.option, \"canMove\", $$a.concat([$$v]))\n                  } else {\n                    $$i > -1 &&\n                      _vm.$set(\n                        _vm.option,\n                        \"canMove\",\n                        $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                      )\n                  }\n                } else {\n                  _vm.$set(_vm.option, \"canMove\", $$c)\n                }\n              }\n            }\n          })\n        ]),\n        _c(\"label\", { staticClass: \"c-item\" }, [\n          _c(\"span\", [_vm._v(\"能否拖动截图框\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.option.canMoveBox,\n                expression: \"option.canMoveBox\"\n              }\n            ],\n            attrs: { type: \"checkbox\" },\n            domProps: {\n              checked: Array.isArray(_vm.option.canMoveBox)\n                ? _vm._i(_vm.option.canMoveBox, null) > -1\n                : _vm.option.canMoveBox\n            },\n            on: {\n              change: function($event) {\n                var $$a = _vm.option.canMoveBox,\n                  $$el = $event.target,\n                  $$c = $$el.checked ? true : false\n                if (Array.isArray($$a)) {\n                  var $$v = null,\n                    $$i = _vm._i($$a, $$v)\n                  if ($$el.checked) {\n                    $$i < 0 &&\n                      _vm.$set(_vm.option, \"canMoveBox\", $$a.concat([$$v]))\n                  } else {\n                    $$i > -1 &&\n                      _vm.$set(\n                        _vm.option,\n                        \"canMoveBox\",\n                        $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                      )\n                  }\n                } else {\n                  _vm.$set(_vm.option, \"canMoveBox\", $$c)\n                }\n              }\n            }\n          }),\n          _c(\"span\", [_vm._v(\"canMoveBox: \" + _vm._s(_vm.option.canMoveBox))])\n        ]),\n        _c(\"label\", { staticClass: \"c-item\" }, [\n          _c(\"span\", [_vm._v(\"截图框固定大小\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.option.fixedBox,\n                expression: \"option.fixedBox\"\n              }\n            ],\n            attrs: { type: \"checkbox\" },\n            domProps: {\n              checked: Array.isArray(_vm.option.fixedBox)\n                ? _vm._i(_vm.option.fixedBox, null) > -1\n                : _vm.option.fixedBox\n            },\n            on: {\n              change: function($event) {\n                var $$a = _vm.option.fixedBox,\n                  $$el = $event.target,\n                  $$c = $$el.checked ? true : false\n                if (Array.isArray($$a)) {\n                  var $$v = null,\n                    $$i = _vm._i($$a, $$v)\n                  if ($$el.checked) {\n                    $$i < 0 &&\n                      _vm.$set(_vm.option, \"fixedBox\", $$a.concat([$$v]))\n                  } else {\n                    $$i > -1 &&\n                      _vm.$set(\n                        _vm.option,\n                        \"fixedBox\",\n                        $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                      )\n                  }\n                } else {\n                  _vm.$set(_vm.option, \"fixedBox\", $$c)\n                }\n              }\n            }\n          }),\n          _c(\"span\", [_vm._v(\"fixedBox: \" + _vm._s(_vm.option.fixedBox))])\n        ]),\n        _c(\"label\", { staticClass: \"c-item\" }, [\n          _c(\"span\", [_vm._v(\"是否输出原图比例的截图\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.option.full,\n                expression: \"option.full\"\n              }\n            ],\n            attrs: { type: \"checkbox\" },\n            domProps: {\n              checked: Array.isArray(_vm.option.full)\n                ? _vm._i(_vm.option.full, null) > -1\n                : _vm.option.full\n            },\n            on: {\n              change: function($event) {\n                var $$a = _vm.option.full,\n                  $$el = $event.target,\n                  $$c = $$el.checked ? true : false\n                if (Array.isArray($$a)) {\n                  var $$v = null,\n                    $$i = _vm._i($$a, $$v)\n                  if ($$el.checked) {\n                    $$i < 0 && _vm.$set(_vm.option, \"full\", $$a.concat([$$v]))\n                  } else {\n                    $$i > -1 &&\n                      _vm.$set(\n                        _vm.option,\n                        \"full\",\n                        $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                      )\n                  }\n                } else {\n                  _vm.$set(_vm.option, \"full\", $$c)\n                }\n              }\n            }\n          }),\n          _c(\"span\", [_vm._v(\"full: \" + _vm._s(_vm.option.full))])\n        ]),\n        _c(\"label\", { staticClass: \"c-item\" }, [\n          _c(\"span\", [_vm._v(\"是否自动生成截图框\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.option.autoCrop,\n                expression: \"option.autoCrop\"\n              }\n            ],\n            attrs: { type: \"checkbox\" },\n            domProps: {\n              checked: Array.isArray(_vm.option.autoCrop)\n                ? _vm._i(_vm.option.autoCrop, null) > -1\n                : _vm.option.autoCrop\n            },\n            on: {\n              change: function($event) {\n                var $$a = _vm.option.autoCrop,\n                  $$el = $event.target,\n                  $$c = $$el.checked ? true : false\n                if (Array.isArray($$a)) {\n                  var $$v = null,\n                    $$i = _vm._i($$a, $$v)\n                  if ($$el.checked) {\n                    $$i < 0 &&\n                      _vm.$set(_vm.option, \"autoCrop\", $$a.concat([$$v]))\n                  } else {\n                    $$i > -1 &&\n                      _vm.$set(\n                        _vm.option,\n                        \"autoCrop\",\n                        $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                      )\n                  }\n                } else {\n                  _vm.$set(_vm.option, \"autoCrop\", $$c)\n                }\n              }\n            }\n          }),\n          _c(\"span\", [_vm._v(\"autoCrop: \" + _vm._s(_vm.option.autoCrop))])\n        ]),\n        _c(\"label\", { staticClass: \"c-item\" }, [\n          _c(\"span\", [_vm._v(\"是否根据dpr生成适合屏幕的高清图片\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.option.high,\n                expression: \"option.high\"\n              }\n            ],\n            attrs: { type: \"checkbox\" },\n            domProps: {\n              checked: Array.isArray(_vm.option.high)\n                ? _vm._i(_vm.option.high, null) > -1\n                : _vm.option.high\n            },\n            on: {\n              change: function($event) {\n                var $$a = _vm.option.high,\n                  $$el = $event.target,\n                  $$c = $$el.checked ? true : false\n                if (Array.isArray($$a)) {\n                  var $$v = null,\n                    $$i = _vm._i($$a, $$v)\n                  if ($$el.checked) {\n                    $$i < 0 && _vm.$set(_vm.option, \"high\", $$a.concat([$$v]))\n                  } else {\n                    $$i > -1 &&\n                      _vm.$set(\n                        _vm.option,\n                        \"high\",\n                        $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                      )\n                  }\n                } else {\n                  _vm.$set(_vm.option, \"high\", $$c)\n                }\n              }\n            }\n          }),\n          _c(\"span\", [_vm._v(\"high: \" + _vm._s(_vm.option.high))])\n        ]),\n        _c(\"label\", { staticClass: \"c-item\" }, [\n          _c(\"span\", [\n            _vm._v(\"截图框是否限制在图片里(只有在自动生成截图框时才能生效)\")\n          ]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.option.centerBox,\n                expression: \"option.centerBox\"\n              }\n            ],\n            attrs: { type: \"checkbox\" },\n            domProps: {\n              checked: Array.isArray(_vm.option.centerBox)\n                ? _vm._i(_vm.option.centerBox, null) > -1\n                : _vm.option.centerBox\n            },\n            on: {\n              change: function($event) {\n                var $$a = _vm.option.centerBox,\n                  $$el = $event.target,\n                  $$c = $$el.checked ? true : false\n                if (Array.isArray($$a)) {\n                  var $$v = null,\n                    $$i = _vm._i($$a, $$v)\n                  if ($$el.checked) {\n                    $$i < 0 &&\n                      _vm.$set(_vm.option, \"centerBox\", $$a.concat([$$v]))\n                  } else {\n                    $$i > -1 &&\n                      _vm.$set(\n                        _vm.option,\n                        \"centerBox\",\n                        $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                      )\n                  }\n                } else {\n                  _vm.$set(_vm.option, \"centerBox\", $$c)\n                }\n              }\n            }\n          }),\n          _c(\"span\", [_vm._v(\"centerBox: \" + _vm._s(_vm.option.centerBox))])\n        ]),\n        _c(\"label\", { staticClass: \"c-item\" }, [\n          _c(\"p\", [_vm._v(\"输出图片格式\")]),\n          _c(\"label\", [\n            _vm._v(\"jpg\\n          \"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.outputType,\n                  expression: \"option.outputType\"\n                }\n              ],\n              attrs: { type: \"radio\", name: \"type\", value: \"jpeg\" },\n              domProps: { checked: _vm._q(_vm.option.outputType, \"jpeg\") },\n              on: {\n                change: function($event) {\n                  return _vm.$set(_vm.option, \"outputType\", \"jpeg\")\n                }\n              }\n            })\n          ]),\n          _c(\"label\", [\n            _vm._v(\"png\\n          \"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.outputType,\n                  expression: \"option.outputType\"\n                }\n              ],\n              attrs: { type: \"radio\", name: \"type\", value: \"png\" },\n              domProps: { checked: _vm._q(_vm.option.outputType, \"png\") },\n              on: {\n                change: function($event) {\n                  return _vm.$set(_vm.option, \"outputType\", \"png\")\n                }\n              }\n            })\n          ]),\n          _c(\"label\", [\n            _vm._v(\"webp\\n          \"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.option.outputType,\n                  expression: \"option.outputType\"\n                }\n              ],\n              attrs: { type: \"radio\", name: \"type\", value: \"webp\" },\n              domProps: { checked: _vm._q(_vm.option.outputType, \"webp\") },\n              on: {\n                change: function($event) {\n                  return _vm.$set(_vm.option, \"outputType\", \"webp\")\n                }\n              }\n            })\n          ])\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}