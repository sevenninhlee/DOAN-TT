{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/containers/DocumentsContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/containers/DocumentsContainer.vue","mtime":1573548264966},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  Header as AppHeader,\n  SidebarToggler,\n  Sidebar as AppSidebar,\n  SidebarFooter,\n  SidebarForm,\n  SidebarHeader,\n  SidebarMinimizer,\n  SidebarNav,\n  Aside as AppAside,\n  AsideToggler,\n  Footer as TheFooter,\n  Breadcrumb,\n  HeaderDropdown\n} from \"@coreui/vue\";\nimport DefaultAside from \"./DefaultAside\";\nimport DefaultHeaderDropdown from \"./DefaultHeaderDropdown\";\nimport DefaultHeaderDropdownNotif from \"./DefaultHeaderDropdownNotif\";\nimport DefaultHeaderDropdownAccnt from \"./DefaultHeaderDropdownAccnt\";\nimport DefaultHeaderDropdownMssgs from \"./DefaultHeaderDropdownMssgs\";\nimport DefaultHeaderDropdownTasks from \"./DefaultHeaderDropdownTasks\";\nimport UpgradePlan from \"./UpgradePlan\";\nimport Logout from \"../components/Logout\";\nimport UserSelect from \"../components/UserSelect\";\nimport AppLogo from \"../components/AppLogo\";\nimport UserSidebarEx from \"../components/UserSidebarEx\";\nimport { firstDocuSign } from '../mixins/firstDocuSign';\nimport { EventBus } from '../config/event-bus';\nimport { purposeSizes } from \"../helpers/defaultValue\";\n\nimport { mapGetters, mapState } from 'vuex'\nimport store from '../store/store'\nimport { CHECK_CLIENT } from '../store/actions.type'\n\n\nexport default {\n  name: \"DocumentsContainer\",\n  components: {\n    UserSidebarEx,\n    AppLogo,\n    UserSelect,\n    Logout,\n    UpgradePlan,\n    AsideToggler,\n    AppHeader,\n    AppSidebar,\n    AppAside,\n    TheFooter,\n    Breadcrumb,\n    DefaultAside,\n    DefaultHeaderDropdown,\n    DefaultHeaderDropdownMssgs,\n    DefaultHeaderDropdownNotif,\n    DefaultHeaderDropdownTasks,\n    DefaultHeaderDropdownAccnt,\n    SidebarForm,\n    SidebarFooter,\n    SidebarToggler,\n    SidebarHeader,\n    SidebarNav,\n    SidebarMinimizer,\n    HeaderDropdown\n  },\n  mixins: [firstDocuSign],\n  data() {\n    return {\n      currentStepNo: 0,\n      confirmed: false,\n      form_data: {\n        error_flag: false,\n        first_name: \"\",\n        last_name: \"\",\n        company_name: \"\",\n        purpose: \"Purpose of using\",\n        employee: \"Number of Employees\",\n        title: \"\",\n        industry: \"Select Industry\",\n      },\n      client_form: {\n        first_name    : \" \",\n        last_name     : \" \",\n        company_name  : \" \",\n        account_type  : \"\",\n        company_size_id:1,\n        industry_id   :1,\n        department_name :\"\"\n      },\n      employeeSizes : [],\n      purposeSizes : [\n        {\n          value: \"Personnel\",\n          name: \"My Personnel use\"\n        },\n        {\n          value: \"Business\",\n          name: \"My Business\"\n        }\n      ],\n      industrySizes : [],\n      nav: [\n        {\n          name: \"Roger Waters\",\n          icon: \"fa fa-user\",\n          color: \"#ee9964\"\n        },\n        {\n          name: \"Barrett Nash-Willi\",\n          icon: \"fa fa-user\",\n          color: \"#60ccd8\"\n        },\n        {\n          name: \"Barrett Nash-Willi\",\n          icon: \"fa fa-user\",\n          color: \"#d5c45c\"\n        }\n      ],\n      show_tool_menu: false,\n      icon_next_step: \"['fas', 'check-circle']\",\n    };\n  },\n  computed: {\n    ...mapGetters([\"_isClient\"]),\n    name() {\n      return this.$route.name;\n    },\n    list() {\n      return this.$route.matched.filter(\n        route => route.name || route.meta.label\n      );\n    },\n    computedPurposeSizes() {\n      // return this.addTranslate(this.purposeSizes);\n      return this.purposeSizes;\n    },\n    firstName() {\n      return this.$t('profile.account.placeholder.first');\n    },\n    laststName() {\n      return this.$t('profile.account.placeholder.last');\n    },\n    company() {\n      return this.$t('profile.account.placeholder.company');\n    },\n    jobTitle() {\n      return this.$t('profile.account.placeholder.job');\n    }\n  },\n  created() {\n  },\n  mounted() {\n    let vm = this;\n    store.dispatch(CHECK_CLIENT)\n      .then( res => {\n        if(!this._isClient){\n          this.$refs[\"welcomemodal\"].show();\n        }\n        if(res.status && res.client){\n          EventBus.$emit('clientInfo', res.client);\n        }\n      })\n      .catch( err => {\n        if(!this._isClient){\n          this.$refs[\"welcomemodal\"].show();\n        }\n      });\n    this.confirmed = false;\n    // if (!this.$route.query.withoutModal) {\n    //   this.$refs[\"welcomemodal\"].show();\n    // }\n    this.setOptions();\n    this.getCompanySizesDoc();\n    this.getIndustriesDoc();\n    // this.getDepartmentsDoc();\n  },\n  methods: {\n    addTranslate(lists = []) {\n      return lists.map(v => {\n        return { ...v, name: this.$t(v.name) };\n      });\n    },\n    getCompanySizesDoc() {\n      var vm = this;\n      vm.getCompanySizes()\n        .then( res => {\n          this.employeeSizes = res.data;\n        })\n        .catch( error => {\n          console.log('error', error);\n        })\n    },\n    getIndustriesDoc() {\n      var vm = this;\n      vm.getIndustries()\n        .then( res => {\n          this.industrySizes = res.data;\n        })\n        .catch( error => {\n          console.log('error', error);\n        })\n    },\n    getDepartmentsDoc() {\n      var vm = this;\n      vm.getDepartments()\n        .then( res => {\n          // this.purposeSizes = res.data;\n        })\n        .catch( error => {\n          console.log('error', error);\n        })\n    },\n    dragTool() {\n      this.$refs.sidebarToggleBtn.toggle();\n    },\n    clickMain(e) {\n      if (e.target.className == \"main\") {\n        this.$refs.sidebarToggleBtn.toggle();\n      }\n    },\n    hideModal(e) {\n      if (!this.confirmed) {\n        e.preventDefault();\n        this.gotoPage(\"/landing\");\n      }\n    },\n    getStarted() {\n      var vm = this;\n      vm.form_data.error_flag = true;\n      if (vm.isError(vm.form_data.first_name)) return;\n      if (vm.isError(vm.form_data.last_name)) return;\n      if(vm.form_data.purpose != this.$t(\"Purpose of using\")){\n        if (vm.form_data.industry === 'My Personnel use' && (vm.isError(vm.form_data.title) || vm.isError(vm.form_data.last_name) || vm.form_data.industry === 'Select Industry' || vm.form_data.employee == 'Employee')) return;\n        vm.client_form.first_name = vm.form_data.first_name;\n        vm.client_form.last_name = vm.form_data.last_name;\n        vm.client_form.company_name = vm.form_data.company_name;\n        vm.client_form.department_name = vm.form_data.title;\n        \n        vm.createClient(vm.client_form)\n          .then( res => {\n            if(res.data.status) {\n              this.confirmed = true;\n              this.$refs[\"welcomemodal\"].hide();  \n            }\n          })\n          .catch( error => {\n            console.log('error', error)\n          })\n      }\n\n    },\n    changePurposeValue(key, value) {\n      this.client_form.account_type = key;\n      this.form_data.purpose = value;\n    },\n    changeIndustryValue(key, value) {\n      this.client_form.industry_id = key;\n      this.form_data.industry = value;\n    },\n    changeEmployeeValue(key, value) {\n      this.client_form.company_size_id = key;\n      this.form_data.employee = value;\n    },\n    isError(value) {\n      return (\n        this.form_data.error_flag &&\n        ( value === undefined ||\n          value === null ||\n          (typeof value === \"object\" && Object.keys(value).length === 0) ||\n          (typeof value === \"string\" && value.trim().length === 0)\n        )\n      );\n    },\n    gotoPage(page) {\n      this.$router.push({ path: page });\n    },\n    getStyle(no) {\n      // if(true && this.currentStepNo == no) {\n      //   return \"fa fa-check-circle ready\";\n      // }else \n      if (this.currentStepNo == no) {\n        return \"fa fa-circle-o ready\";\n      } else if (this.currentStepNo > no) {\n        return \"fa fa-check-circle ready\";\n      } else {\n        return \"fa fa-circle-o waiting\";\n      }\n    },\n    normalizeIconArgs (no) {\n      if (this.currentStepNo == no) {\n        return { prefix: 'fas', iconName: 'circle' };\n      } else if (this.currentStepNo > no) {\n        return { prefix: 'fas', iconName: 'check-circle' };\n      } else {\n        return { prefix: 'fas', iconName: 'circle' };\n      }\n    },\n    getTextStyle(no) {\n      if (this.currentStepNo >= no) {\n        return \"\";\n      } else {\n        return \"waiting\";\n      }\n    },\n    setOptions() {\n      // console.log(this.$router.history.current.fullPath, \"/docu-sign/add-document?document_id=\"+this.$route.query.document_id)\n      if (this.$router.history.current.fullPath == \"/docu-sign/add-document?document_id=\"+this.$route.query.document_id) {\n        this.currentStepNo = 0;\n      } else if (\n        this.$router.history.current.fullPath == \"/docu-sign/add-recipients?document_id=\"+this.$route.query.document_id\n      ) {\n        this.currentStepNo = 1;\n      } else if (\n        this.$router.history.current.fullPath == \"/docu-sign/prepare?document_id=\"+this.$route.query.document_id\n      ) {\n        this.currentStepNo = 2;\n      } else if (this.$router.history.current.fullPath == \"/docu-sign/review?document_id=\"+this.$route.query.document_id) {\n        this.currentStepNo = 3;\n      }\n\n      if (this.$router.history.current.fullPath == \"/docu-sign/prepare?document_id=\"+this.$route.query.document_id) {\n        this.show_tool_menu = true;\n      } else {\n        this.show_tool_menu = false;\n      }\n    }\n  },\n  watch: {\n    $route() {\n      this.setOptions();\n    }\n  }\n};\n",{"version":3,"sources":["DocumentsContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"DocumentsContainer.vue","sourceRoot":"src/containers","sourcesContent":["<template>\n  <div class=\"app\">\n    <div class=\"app-body\">\n      <AppSidebar fixed>\n        <AppLogo></AppLogo>\n        <div class=\"p-3 side-menu\">\n          <div class=\"w-100\">\n            <b-button block variant=\"primary\" v-on:click=\"gotoPage('/landing')\">{{ $t('layout.documents.sidebar.button') }}</b-button>\n\n            <b-button\n              variant=\"primary\"\n              class=\"d-block d-sm-none\"\n              block\n              style=\"padding-top: 0.5rem;\"\n              to=\"/payment/pricing-plan\"\n            >{{ $t('layout.button') }}</b-button>\n            <div class=\"prepare-tool-nav\" v-if=\"show_tool_menu\">\n              <hr class=\"seperate-bar\" />\n              <UserSidebarEx :navItems=\"nav\" @dragTool=\"dragTool\"></UserSidebarEx>\n            </div>\n          </div>\n          <Logout></Logout>\n        </div>\n      </AppSidebar>\n      <main class=\"main\" v-on:click=\"clickMain\">\n        <AppHeader class=\"pr-3\">\n          <SidebarToggler ref=\"sidebarToggleBtn\" class=\"d-lg-none\" display=\"md\" mobile />\n          <!-- <SidebarToggler class=\"d-md-down-none\" display=\"lg\" :defaultOpen=true /> -->\n          <UpgradePlan class=\"d-none d-sm-block\"></UpgradePlan>\n          <div class=\"doc-timeline\">\n            <div class=\"timeline-item\">\n              <i :class=\"getStyle(0)\" />\n              <span class=\"timeline-title\" :class=\"getTextStyle(0)\">{{ $t('layout.documents.header.upload') }}</span>\n              <div class=\"header-radio-dashline\"></div>\n            </div>\n            <div class=\"timeline-item\">\n              <i :class=\"getStyle(1)\" />\n              <span class=\"timeline-title\" :class=\"getTextStyle(1)\">{{ $t('layout.documents.header.recipients') }}</span>\n              <div class=\"header-radio-dashline\"></div>\n            </div>\n            <div class=\"timeline-item\">\n              <i :class=\"getStyle(2)\" />\n              <span class=\"timeline-title\" :class=\"getTextStyle(2)\">{{ $t('layout.documents.header.prepare') }}</span>\n              <div class=\"header-radio-dashline\"></div>\n            </div>\n            <div class=\"timeline-item\">\n              <i :class=\"getStyle(3)\" />\n              <span class=\"timeline-title\" :class=\"getTextStyle(3)\">{{ $t('layout.documents.header.review') }}</span>\n            </div>\n          </div>\n          <DefaultHeaderDropdownAccnt />\n        </AppHeader>\n        <div class=\"container-fluid main-container\">\n          <router-view></router-view>\n        </div>\n      </main>\n      <!-- <AppAside fixed>\n        <DefaultAside />\n      </AppAside> -->\n    </div>\n    <TheFooter>\n      <!--footer-->\n      <div>\n        <span class=\"ml-1\">&copy; 2019 CoffeeSign All rights reserved..</span>\n      </div>\n    </TheFooter>\n    <b-modal\n      id=\"modal-1\"\n      ref=\"welcomemodal\"\n      @hide=\"hideModal\"\n      hide-footer\n      centered\n      hide-header\n      size=\"lg\"\n    >\n      <div class=\"welcome-modal\">\n        <div class=\"welcome-header\">\n          <img class=\"navbar-brand-full\" src=\"img/logo_white.svg\" alt height=\"65\" width=\"200\" />\n        </div>\n        <div class=\"welcome-body\">\n          <h1>{{ $t('layout.documents.modal.title') }}</h1>\n          <div class=\"subtitle\">{{ $t('layout.documents.modal.subtitle') }}</div>\n          <div class=\"summary\">{{ $t('layout.documents.modal.summary') }}</div>\n          <div class=\"w-100\">\n            <div class=\"row\">\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"first_name\"\n                    :placeholder=\"firstName\"\n                    name=\"first_name\"\n                    v-bind:class=\"{'input-error': isError(form_data.first_name)}\"\n                    v-model=\"form_data.first_name\"\n                  />\n                  <div\n                    v-if=\"isError(form_data.first_name)\"\n                    class=\"error-text\"\n                  >{{ $t('layout.documents.modal.error.name.first') }}</div>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"last_name\"\n                    :placeholder=\"laststName\"\n                    name=\"last_name\"\n                    v-bind:class=\"{'input-error': isError(form_data.last_name)}\"\n                    v-model=\"form_data.last_name\"\n                  />\n                  <div v-if=\"isError(form_data.last_name)\" class=\"error-text\">{{ $t('layout.documents.modal.error.name.last') }}</div>\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group\">\n              <template>\n                <ul class=\"user-custom-select\" \n                    v-bind:class=\"{'input-error': form_data.purpose == 'Purpose of using' && form_data.error_flag}\"\n                >\n                  <HeaderDropdown>\n                    <template slot=\"header\">\n                      <div style=\"width:100%; overflow:hidden;\">{{$t(form_data.purpose)}}</div>\n                    </template>\n                    <template slot=\"dropdown\" >\n                      <b-dropdown-item v-on:click=\"changePurposeValue('', 'Purpose of using')\">{{ $t('layout.documents.modal.purpose') }}</b-dropdown-item>\n                      <b-dropdown-item\n                        v-for=\"(purp, index) in computedPurposeSizes\"\n                        :key=\"index\"\n                        :value=\"purp.value ? purp.value : ''\"\n                        @click=\"changePurposeValue(purp.value, purp.name)\"\n                      >{{$t(purp.name)}}</b-dropdown-item>\n                    </template>\n                  </HeaderDropdown>\n                </ul>\n                <div v-if=\"form_data.purpose == 'Purpose of using' && form_data.error_flag\" class=\"error-text\">{{ $t('layout.documents.modal.error.purpose') }}</div>\n              </template>\n            </div>\n            <div class=\"row\" v-if=\"form_data.purpose != 'My Personnel use'\">\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"company_name\"\n                    :placeholder=\"company\"\n                    name=\"company_name\"\n                    v-model=\"form_data.company_name\"\n                    v-bind:class=\"{'input-error': form_data.purpose == 'My Business' && form_data.error_flag && isError(form_data.company_name)}\"\n                  />\n                   <!-- v-bind:class=\"{'input-error': isError(form_data.company)}\" -->\n                  <div v-if=\"form_data.purpose == 'My Business' && form_data.error_flag && isError(form_data.company_name)\" class=\"error-text\">{{ $t('layout.documents.modal.error.company') }}</div>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <template>\n                  <ul class=\"user-custom-select\"\n                      v-bind:class=\"{'input-error': form_data.purpose == 'My Business' && form_data.employee == 'Employee' && form_data.error_flag}\"\n                  >\n                    <HeaderDropdown>\n                      <template slot=\"header\">\n                        <div style=\"width:100%; overflow:hidden;\">{{$t(form_data.employee == \"1001-3000\" ? $t('layout.documents.modal.more') : form_data.employee)}}</div>\n                      </template>\n                      <template slot=\"dropdown\">\n                        <b-dropdown-item v-on:click=\"changeEmployeeValue('', 'Employee')\">{{ $t('layout.documents.modal.employee') }}</b-dropdown-item>\n                        <b-dropdown-item\n                          v-for=\"(emp, index) in employeeSizes\"\n                          :key=\"index\"\n                          :value=\"emp.id ? emp.id : ''\"\n                          v-on:click=\"changeEmployeeValue(emp.id, emp.size)\"\n                        >{{emp.size == \"1001-3000\" ? $t('layout.documents.modal.more') : emp.size}}</b-dropdown-item>\n                      </template>\n                    </HeaderDropdown>\n                  </ul>\n                  <div v-if=\"form_data.purpose == 'My Business' && form_data.employee == 'Employee' && form_data.error_flag\" class=\"error-text\">{{$t('layout.documents.modal.error.employee') }}</div>\n                </template>\n              </div>\n            </div>\n            <div class=\"row\" v-if=\"form_data.purpose != 'My Personnel use'\">\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"job_title\"\n                    :placeholder=\"jobTitle\"\n                    name=\"job_title\"\n                    v-model=\"form_data.title\"\n                    v-bind:class=\"{'input-error': form_data.purpose == 'My Business' && form_data.error_flag && isError(form_data.title)}\"\n                  />\n                  <div v-if=\"form_data.purpose == 'My Business' && form_data.error_flag && isError(form_data.title)\" class=\"error-text\">{{$t('layout.documents.modal.error.title') }}</div>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <template>\n                    <ul class=\"user-custom-select\"\n                      v-bind:class=\"{'input-error': form_data.purpose == 'My Business' && form_data.industry == 'Select Industry' && form_data.error_flag}\"\n                  >\n                      <HeaderDropdown>\n                        <template slot=\"header\">\n                          <div style=\"width:100%; overflow:hidden;\">{{$t(form_data.industry)}}</div>\n                        </template>\n                        <template slot=\"dropdown\">\n                          <b-dropdown-item v-on:click=\"changeIndustryValue('', 'Select Industry')\">{{ $t('layout.documents.modal.industry') }}</b-dropdown-item>\n                          <b-dropdown-item\n                            v-for=\"(indus, index) in industrySizes\"\n                            :key=\"index\"\n                            :value=\"indus.id ? indus.id : ''\"\n                            v-on:click=\"changeIndustryValue(indus.id, indus.industry_name)\"\n                          >{{$t(indus.industry_name) }}</b-dropdown-item>\n                        </template>\n                      </HeaderDropdown>\n                    </ul>\n                    <div v-if=\"form_data.purpose == 'My Business' && form_data.error_flag && form_data.industry == 'Select Industry'\" class=\"error-text\">{{$t('layout.documents.modal.error.industry') }}</div>\n                  </template>\n                </div>\n              </div>\n            </div>\n            <button v-on:click=\"getStarted()\" class=\"btn btn-primary w-100\">{{ $t('layout.documents.modal.button') }}</button>\n          </div>\n        </div>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport {\n  Header as AppHeader,\n  SidebarToggler,\n  Sidebar as AppSidebar,\n  SidebarFooter,\n  SidebarForm,\n  SidebarHeader,\n  SidebarMinimizer,\n  SidebarNav,\n  Aside as AppAside,\n  AsideToggler,\n  Footer as TheFooter,\n  Breadcrumb,\n  HeaderDropdown\n} from \"@coreui/vue\";\nimport DefaultAside from \"./DefaultAside\";\nimport DefaultHeaderDropdown from \"./DefaultHeaderDropdown\";\nimport DefaultHeaderDropdownNotif from \"./DefaultHeaderDropdownNotif\";\nimport DefaultHeaderDropdownAccnt from \"./DefaultHeaderDropdownAccnt\";\nimport DefaultHeaderDropdownMssgs from \"./DefaultHeaderDropdownMssgs\";\nimport DefaultHeaderDropdownTasks from \"./DefaultHeaderDropdownTasks\";\nimport UpgradePlan from \"./UpgradePlan\";\nimport Logout from \"../components/Logout\";\nimport UserSelect from \"../components/UserSelect\";\nimport AppLogo from \"../components/AppLogo\";\nimport UserSidebarEx from \"../components/UserSidebarEx\";\nimport { firstDocuSign } from '../mixins/firstDocuSign';\nimport { EventBus } from '../config/event-bus';\nimport { purposeSizes } from \"../helpers/defaultValue\";\n\nimport { mapGetters, mapState } from 'vuex'\nimport store from '../store/store'\nimport { CHECK_CLIENT } from '../store/actions.type'\n\n\nexport default {\n  name: \"DocumentsContainer\",\n  components: {\n    UserSidebarEx,\n    AppLogo,\n    UserSelect,\n    Logout,\n    UpgradePlan,\n    AsideToggler,\n    AppHeader,\n    AppSidebar,\n    AppAside,\n    TheFooter,\n    Breadcrumb,\n    DefaultAside,\n    DefaultHeaderDropdown,\n    DefaultHeaderDropdownMssgs,\n    DefaultHeaderDropdownNotif,\n    DefaultHeaderDropdownTasks,\n    DefaultHeaderDropdownAccnt,\n    SidebarForm,\n    SidebarFooter,\n    SidebarToggler,\n    SidebarHeader,\n    SidebarNav,\n    SidebarMinimizer,\n    HeaderDropdown\n  },\n  mixins: [firstDocuSign],\n  data() {\n    return {\n      currentStepNo: 0,\n      confirmed: false,\n      form_data: {\n        error_flag: false,\n        first_name: \"\",\n        last_name: \"\",\n        company_name: \"\",\n        purpose: \"Purpose of using\",\n        employee: \"Number of Employees\",\n        title: \"\",\n        industry: \"Select Industry\",\n      },\n      client_form: {\n        first_name    : \" \",\n        last_name     : \" \",\n        company_name  : \" \",\n        account_type  : \"\",\n        company_size_id:1,\n        industry_id   :1,\n        department_name :\"\"\n      },\n      employeeSizes : [],\n      purposeSizes : [\n        {\n          value: \"Personnel\",\n          name: \"My Personnel use\"\n        },\n        {\n          value: \"Business\",\n          name: \"My Business\"\n        }\n      ],\n      industrySizes : [],\n      nav: [\n        {\n          name: \"Roger Waters\",\n          icon: \"fa fa-user\",\n          color: \"#ee9964\"\n        },\n        {\n          name: \"Barrett Nash-Willi\",\n          icon: \"fa fa-user\",\n          color: \"#60ccd8\"\n        },\n        {\n          name: \"Barrett Nash-Willi\",\n          icon: \"fa fa-user\",\n          color: \"#d5c45c\"\n        }\n      ],\n      show_tool_menu: false,\n      icon_next_step: \"['fas', 'check-circle']\",\n    };\n  },\n  computed: {\n    ...mapGetters([\"_isClient\"]),\n    name() {\n      return this.$route.name;\n    },\n    list() {\n      return this.$route.matched.filter(\n        route => route.name || route.meta.label\n      );\n    },\n    computedPurposeSizes() {\n      // return this.addTranslate(this.purposeSizes);\n      return this.purposeSizes;\n    },\n    firstName() {\n      return this.$t('profile.account.placeholder.first');\n    },\n    laststName() {\n      return this.$t('profile.account.placeholder.last');\n    },\n    company() {\n      return this.$t('profile.account.placeholder.company');\n    },\n    jobTitle() {\n      return this.$t('profile.account.placeholder.job');\n    }\n  },\n  created() {\n  },\n  mounted() {\n    let vm = this;\n    store.dispatch(CHECK_CLIENT)\n      .then( res => {\n        if(!this._isClient){\n          this.$refs[\"welcomemodal\"].show();\n        }\n        if(res.status && res.client){\n          EventBus.$emit('clientInfo', res.client);\n        }\n      })\n      .catch( err => {\n        if(!this._isClient){\n          this.$refs[\"welcomemodal\"].show();\n        }\n      });\n    this.confirmed = false;\n    // if (!this.$route.query.withoutModal) {\n    //   this.$refs[\"welcomemodal\"].show();\n    // }\n    this.setOptions();\n    this.getCompanySizesDoc();\n    this.getIndustriesDoc();\n    // this.getDepartmentsDoc();\n  },\n  methods: {\n    addTranslate(lists = []) {\n      return lists.map(v => {\n        return { ...v, name: this.$t(v.name) };\n      });\n    },\n    getCompanySizesDoc() {\n      var vm = this;\n      vm.getCompanySizes()\n        .then( res => {\n          this.employeeSizes = res.data;\n        })\n        .catch( error => {\n          console.log('error', error);\n        })\n    },\n    getIndustriesDoc() {\n      var vm = this;\n      vm.getIndustries()\n        .then( res => {\n          this.industrySizes = res.data;\n        })\n        .catch( error => {\n          console.log('error', error);\n        })\n    },\n    getDepartmentsDoc() {\n      var vm = this;\n      vm.getDepartments()\n        .then( res => {\n          // this.purposeSizes = res.data;\n        })\n        .catch( error => {\n          console.log('error', error);\n        })\n    },\n    dragTool() {\n      this.$refs.sidebarToggleBtn.toggle();\n    },\n    clickMain(e) {\n      if (e.target.className == \"main\") {\n        this.$refs.sidebarToggleBtn.toggle();\n      }\n    },\n    hideModal(e) {\n      if (!this.confirmed) {\n        e.preventDefault();\n        this.gotoPage(\"/landing\");\n      }\n    },\n    getStarted() {\n      var vm = this;\n      vm.form_data.error_flag = true;\n      if (vm.isError(vm.form_data.first_name)) return;\n      if (vm.isError(vm.form_data.last_name)) return;\n      if(vm.form_data.purpose != this.$t(\"Purpose of using\")){\n        if (vm.form_data.industry === 'My Personnel use' && (vm.isError(vm.form_data.title) || vm.isError(vm.form_data.last_name) || vm.form_data.industry === 'Select Industry' || vm.form_data.employee == 'Employee')) return;\n        vm.client_form.first_name = vm.form_data.first_name;\n        vm.client_form.last_name = vm.form_data.last_name;\n        vm.client_form.company_name = vm.form_data.company_name;\n        vm.client_form.department_name = vm.form_data.title;\n        \n        vm.createClient(vm.client_form)\n          .then( res => {\n            if(res.data.status) {\n              this.confirmed = true;\n              this.$refs[\"welcomemodal\"].hide();  \n            }\n          })\n          .catch( error => {\n            console.log('error', error)\n          })\n      }\n\n    },\n    changePurposeValue(key, value) {\n      this.client_form.account_type = key;\n      this.form_data.purpose = value;\n    },\n    changeIndustryValue(key, value) {\n      this.client_form.industry_id = key;\n      this.form_data.industry = value;\n    },\n    changeEmployeeValue(key, value) {\n      this.client_form.company_size_id = key;\n      this.form_data.employee = value;\n    },\n    isError(value) {\n      return (\n        this.form_data.error_flag &&\n        ( value === undefined ||\n          value === null ||\n          (typeof value === \"object\" && Object.keys(value).length === 0) ||\n          (typeof value === \"string\" && value.trim().length === 0)\n        )\n      );\n    },\n    gotoPage(page) {\n      this.$router.push({ path: page });\n    },\n    getStyle(no) {\n      // if(true && this.currentStepNo == no) {\n      //   return \"fa fa-check-circle ready\";\n      // }else \n      if (this.currentStepNo == no) {\n        return \"fa fa-circle-o ready\";\n      } else if (this.currentStepNo > no) {\n        return \"fa fa-check-circle ready\";\n      } else {\n        return \"fa fa-circle-o waiting\";\n      }\n    },\n    normalizeIconArgs (no) {\n      if (this.currentStepNo == no) {\n        return { prefix: 'fas', iconName: 'circle' };\n      } else if (this.currentStepNo > no) {\n        return { prefix: 'fas', iconName: 'check-circle' };\n      } else {\n        return { prefix: 'fas', iconName: 'circle' };\n      }\n    },\n    getTextStyle(no) {\n      if (this.currentStepNo >= no) {\n        return \"\";\n      } else {\n        return \"waiting\";\n      }\n    },\n    setOptions() {\n      // console.log(this.$router.history.current.fullPath, \"/docu-sign/add-document?document_id=\"+this.$route.query.document_id)\n      if (this.$router.history.current.fullPath == \"/docu-sign/add-document?document_id=\"+this.$route.query.document_id) {\n        this.currentStepNo = 0;\n      } else if (\n        this.$router.history.current.fullPath == \"/docu-sign/add-recipients?document_id=\"+this.$route.query.document_id\n      ) {\n        this.currentStepNo = 1;\n      } else if (\n        this.$router.history.current.fullPath == \"/docu-sign/prepare?document_id=\"+this.$route.query.document_id\n      ) {\n        this.currentStepNo = 2;\n      } else if (this.$router.history.current.fullPath == \"/docu-sign/review?document_id=\"+this.$route.query.document_id) {\n        this.currentStepNo = 3;\n      }\n\n      if (this.$router.history.current.fullPath == \"/docu-sign/prepare?document_id=\"+this.$route.query.document_id) {\n        this.show_tool_menu = true;\n      } else {\n        this.show_tool_menu = false;\n      }\n    }\n  },\n  watch: {\n    $route() {\n      this.setOptions();\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"./DocumentsContainer.scss\";\n</style>\n\n"]}]}