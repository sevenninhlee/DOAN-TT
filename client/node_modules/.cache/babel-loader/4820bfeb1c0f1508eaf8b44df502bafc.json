{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/document/Prepare.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/document/Prepare.vue","mtime":1573548269934},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"bootstrap-multiselect/dist/css/bootstrap-multiselect.css\";\nimport { mapGetters } from \"vuex\";\nimport UserIcon from \"../../components/UserIcon\";\nimport UserSelect from \"../../components/UserSelect\";\nimport { GET_DOCUMENT_REQUEST, GET_BLOD_FROM_URL, ADD_ANNTATION, GET_ANNTATION, EDIT_ANNTATION, DELETE_ANNTATION, ADD_ROTATE_DOCUMENTS, ADD_DELETE_DOCUMENTS } from \"../../store/modules/document\";\nimport store from \"../../store/store\";\nimport { GET_DOCS } from \"../../store/actions.type\";\nimport pdf from \"vue-pdf\";\nimport draggable from \"vuedraggable\";\nimport { addParamsToBlob } from \"../../helpers\";\nimport { prepareHandle, generalDefaultButton, initialPrepare, history, unredoButton, userSideBarHandle, addCommentToDocument, rotateFunction, deleteSuccessHandle } from \"../../helpers/prepareHandle\";\nimport config from \"../../config/config\";\nimport { EventBus } from \"../../config/event-bus\";\nexport default {\n  name: \"Prepare\",\n  components: {\n    pdf: pdf,\n    UserIcon: UserIcon,\n    UserSelect: UserSelect,\n    draggable: draggable\n  },\n  computed: _objectSpread({}, mapGetters([\"addDocument\", [GET_DOCUMENT_REQUEST], \"getRecipients\"])),\n  data: function data() {\n    return {\n      documentList: [],\n      pages: [],\n      sign_items: [],\n      percent: \"100%\",\n      viewSrc: null,\n      viewPage: 0,\n      currentPage: 0,\n      pageCount: 0,\n      src: null,\n      numPages: undefined,\n      annotations: [],\n      pageLoading: true,\n      nextLoading: false,\n      commentButtonActive: false,\n      recipientsList: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var vm = this;\n    var backendUrl = \"\".concat(config.BASE_URL);\n    var document_id = vm.$route.query.document_id;\n    vm.pages = [];\n    vm.documentList = [];\n    store.dispatch(GET_DOCS, document_id).then(function (res) {\n      vm.recipientsList = vm.getRecipients;\n    }).catch(function (err) {});\n    store.dispatch(GET_ANNTATION, document_id).then(function (res) {\n      if (res.status && res.annotations && res.annotations.length > 0) {\n        vm.annotations = res.annotations;\n        EventBus.$on(\"recipientsList\", function (recipients) {\n          _this.recipientsList = recipients;\n          recipients && generalDefaultButton(vm.annotations, recipients, _this.prepareEvent);\n        });\n      }\n    });\n    this.initialFunction();\n  },\n  methods: {\n    initialFunction: function initialFunction() {\n      var _this2 = this;\n\n      var vm = this;\n      var backendUrl = \"\".concat(config.BASE_URL);\n      var document_id = vm.$route.query.document_id;\n      vm.pages = [];\n      vm.documentList = [];\n      store.dispatch(GET_DOCUMENT_REQUEST, {\n        document_id: document_id,\n        show_image: 1\n      }).then(function (res) {\n        vm.documentList = vm[GET_DOCUMENT_REQUEST];\n\n        if (vm.documentList && vm.documentList.data && vm.documentList.data.length > 0) {\n          vm.documentList.data.map(function (v, docKey) {\n            v.images = v.images && v.images.length > 0 && v.images.filter(function (img, imgKey) {\n              var checkPageDelete = v.document_action.length > 0 && v.document_action.find(function (ac) {\n                return ac.page === imgKey + 1 && ac.delete === 1;\n              });\n              !checkPageDelete && vm.pages.push({\n                docId: v.id,\n                pageId: docKey,\n                pageNum: _this2.numpage(img),\n                image: img\n              });\n              return !checkPageDelete;\n            });\n          });\n          vm.pageLoading = false;\n          initialPrepare(vm.pages); // general drop\n\n          prepareHandle(vm.pages.map(function (v, key) {\n            return key;\n          }), _this2.recipientsList, _this2.prepareEvent);\n        } // console.log('vm.documentList.data', vm.documentList.data[0])\n        // console.log('vm.pages', vm.pages)\n\n      });\n      vm.$root.$on(\"bv::scrollspy::activate\", vm.onActivate);\n    },\n    deleteHandle: function deleteHandle(docId, imgUrl) {\n      var _this3 = this;\n\n      var numPage = this.numpage(imgUrl);\n\n      if (numPage) {\n        this.pageLoading = false;\n        var sendData = {\n          document_id: docId,\n          page: numPage,\n          delete: 1\n        };\n        this.$store.dispatch(ADD_DELETE_DOCUMENTS, sendData).then(function (res) {\n          if (res.status) {\n            _this3.pageLoading = true;\n            deleteSuccessHandle(docId, numPage);\n\n            _this3.initialFunction();\n          }\n        });\n      }\n    },\n    numpage: function numpage(imgUrl) {\n      var arrayImgUrl = imgUrl.split(\"/\").pop();\n      return parseInt(arrayImgUrl.split(\".\")[0].slice(-1));\n    },\n    checkHasDeletePage: function checkHasDeletePage(document_action, pageId) {\n      var _result = document_action.length > 0 && document_action.find(function (v) {\n        return v.page === pageId && v.delete === 1;\n      });\n\n      return !!_result;\n    },\n    rotateHandle: function rotateHandle(location, docId, pageId) {\n      var vm = this;\n      rotateFunction(location, docId, pageId, function (sendData) {\n        vm.$store.dispatch(ADD_ROTATE_DOCUMENTS, sendData);\n      });\n    },\n    checkRotate: function checkRotate(data, document) {\n      var getRotate = document && document.document_action && document.document_action.length > 0 && document.document_action.find(function (v) {\n        return v.page === data.pageNum + 1;\n      });\n      return getRotate && getRotate.rotate;\n    },\n    undo: function undo() {\n      var vm = this;\n      var document_id = vm.$route.query.document_id;\n      history.undo(vm.annotations);\n\n      if (history && history.restore_state && history.restore_state.id) {\n        var annotations_id = history.restore_state.id;\n        unredoButton(annotations_id, \"undo\");\n        vm.$store.dispatch(EDIT_ANNTATION, {\n          id: annotations_id,\n          display: \"none\"\n        }).then(function (res) {\n          if (res.status && res.annotation_id) {\n            vm.$store.dispatch(GET_ANNTATION, document_id).then(function (res) {\n              if (res.status && res.annotations && res.annotations.length > 0) {\n                vm.annotations = res.annotations;\n              }\n            });\n          }\n        });\n      }\n    },\n    redo: function redo() {\n      var vm = this;\n      var document_id = vm.$route.query.document_id;\n      history.redo();\n\n      if (history && history.restore_state && history.restore_state.id) {\n        var annotations_id = history.restore_state.id;\n        unredoButton(annotations_id, \"redo\");\n        vm.$store.dispatch(EDIT_ANNTATION, {\n          id: annotations_id,\n          display: \"block\"\n        }).then(function (res) {\n          if (res.status && res.annotation_id) {\n            vm.$store.dispatch(GET_ANNTATION, document_id).then(function (res) {\n              if (res.status && res.annotations && res.annotations.length > 0) {\n                vm.annotations = res.annotations;\n              }\n            });\n          }\n        });\n      }\n    },\n    commentsHandle: function commentsHandle() {\n      addCommentToDocument(this.pages.map(function (v, key) {\n        return key;\n      }), this.recipientsList, this.prepareEvent);\n    },\n    changePercent: function changePercent(e) {\n      this.percent = e;\n      var zoomScale = Number(parseInt(e.replace(\"%\", \"\"))) / 100;\n\n      for (var i = 0; i < document.getElementsByClassName(\"droppable_content\").length; i++) {\n        this.setZoom(zoomScale, document.getElementsByClassName(\"droppable_content\")[i]);\n      }\n    },\n    setZoom: function setZoom(zoom, el) {\n      var transformOrigin = [0, 0];\n      el = el || instance.getContainer();\n      var p = [\"webkit\", \"moz\", \"ms\", \"o\"],\n          s = \"scale(\" + zoom + \")\",\n          oString = transformOrigin[0] * 100 + \"% \" + transformOrigin[1] * 100 + \"%\";\n\n      for (var i = 0; i < p.length; i++) {\n        el.style[p[i] + \"Transform\"] = s;\n        el.style[p[i] + \"TransformOrigin\"] = oString;\n      }\n\n      el.style[\"transform\"] = s;\n      el.style[\"transformOrigin\"] = oString;\n      el.style[\"height\"] = \"auto\";\n      el.childNodes[0].style[\"height\"] = \"auto\";\n    },\n    onActivate: function onActivate(target) {// console.log(\"target\", target);\n    },\n    selectPage: function selectPage(data, imgKey) {\n      var scrollId = \"doc_id_\".concat(data.id, \"_\").concat(imgKey);\n      var scrollTo = document.getElementById(scrollId);\n      scrollTo.scrollIntoView();\n    },\n    moveNextPage: function moveNextPage() {\n      if (!this.checkUserTool()) {\n        this.$awn.alert(\"Add at least 1 tool\", {\n          position: \"bottom-left\",\n          labels: {\n            alert: \"Danger Message\"\n          }\n        });\n        return false;\n      }\n\n      this.nextLoading = true;\n      this.$router.push(\"/docu-sign/review?document_id=\" + this.$route.query.document_id);\n    },\n    checkUserTool: function checkUserTool() {\n      return $(\"div[id^='droppable_content_'] .user-drag\").length > 0;\n    },\n    moveBackPage: function moveBackPage() {\n      this.$router.push(\"/docu-sign/add-recipients?document_id=\" + this.$route.query.document_id);\n    },\n    addRecipient: function addRecipient() {\n      this.recipients.push({\n        sign_type: \"Need to sign\",\n        com_type: false,\n        name: \"\",\n        email: \"\",\n        set_password: false,\n        password: \"\",\n        confirm_password: \"\"\n      });\n    },\n    removeRecipient: function removeRecipient(index) {\n      this.recipients.splice(index, 1);\n    },\n    prepareEvent: function prepareEvent(data, element) {\n      var vm = this,\n          document_id = vm.$route.query.document_id;\n      var sendData = data.send_data;\n      sendData.annotation_id = document_id;\n      data.annotation_id && (sendData.id = data.annotation_id);\n      var checkElemnts = $(\".tool-sign:hidden\");\n      vm.$store.dispatch(ADD_ANNTATION, sendData).then(function (res) {\n        var get_annotation_id = element.data(\"annotation_id\");\n\n        if (res.status && res.annotation_id && !get_annotation_id) {\n          if (!sendData.id && history.redo_list && history.redo_list.length > 0) {\n            history.redo_list.map(function (val, key) {\n              var annotation_id = val.id;\n              vm.$store.dispatch(DELETE_ANNTATION, annotation_id).then(function (res) {\n                checkElemnts[key].remove();\n              });\n            });\n          }\n\n          element.attr(\"data-annotation_id\", res.annotation_id);\n          element.addClass(\"tool-sign tool_sign_\" + res.annotation_id);\n        }\n\n        if (sendData.text && sendData.recipient_arr) {\n          element.popover(\"hide\");\n          element.css(\"opacity\", 0.5);\n        }\n\n        vm.$store.dispatch(GET_ANNTATION, document_id).then(function (res2) {\n          if (res2.status && res2.annotations && res2.annotations.length > 0) {\n            vm.annotations = res2.annotations;\n          }\n        });\n      });\n    }\n  },\n  created: function created() {}\n};",{"version":3,"sources":["Prepare.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app flex-row\">\n    <div class=\"w-100\">\n      <div class=\"d-flex justify-content-between align-items-center\">\n        <h1>{{ $t(\"docsign.prepare.title\") }}</h1>\n        <div class=\"d-flex align-items-center control-actions\">\n          <b-button variant=\"outline-primary\" @click=\"undo\">\n            <!-- <UserIcon icon=\"past_changes.svg\" :button=\"true\"/> -->\n            <template>\n              <img src=\"img/icons/past_changes.svg\" class=\"icon-hover\" />\n            </template>\n          </b-button>\n          <b-button variant=\"outline-primary\" @click=\"redo\">\n            <!-- <UserIcon icon=\"next_changes.svg\" :button=\"true\" /> -->\n            <template>\n              <img src=\"img/icons/next_changes.svg\" class=\"icon-hover\" />\n            </template>\n          </b-button>\n          <UserSelect\n            v-bind:value=\"percent\"\n            v-bind:items=\"['10%','20%', '30%', '50%', '75%','100%', '200%']\"\n            @changeValue=\"changePercent\"\n            class=\"mb-0 mx-2\"\n          />\n          <b-button\n            variant=\"outline-primary\"\n            @click=\"commentsHandle\"\n            v-bind:class=\"commentButtonActive && 'commentButtonActive'\"\n          >\n            <UserIcon icon=\"comment.svg\" :button=\"true\" />\n          </b-button>\n        </div>\n      </div>\n      <hr class=\"mb-4\" />\n      <div class=\"row\">\n        <div class=\"col-md-9 pr-3 pr-sm-0\">\n          <div v-if=\"pageLoading\" class=\"pageLoading\">\n            <i class=\"fa fa-spinner fa-spin fa-3x\" />\n          </div>\n          <div v-if=\"!pageLoading\" id=\"document_container\">\n            <div class=\"wrap_docs\">\n              <div\n                v-for=\"(data, key) in pages\"\n                :key=\"key\"\n                :id=\"`droppable_content_${key + 1}`\"\n                :data-page_num=\"key + 1\"\n                :data-doc_id=\"data.docId\"\n                :data-rotate=\"checkRotate(data, documentList.data[data.pageId])\"\n                style=\"position:relative\"\n                class=\"droppable_content\"\n              >\n                <div :id=\"`doc_id_${data.docId}_${data.pageNum}`\" class=\"content-background\">\n                  <div class=\"loader_img\">\n                    <i class=\"fa fa-spinner fa-spin fa-2x\" />\n                  </div>\n                  <img\n                    :src=\"`${data.image}`\"\n                    class=\"w-100 main_img img_zoom\"\n                    v-bind:class=\"key==viewPage?'selected-pdf':''\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-md-3 pl-3\">\n          <div class=\"aaa\">\n            <div class=\"content-container\">\n              <div class=\"documents\">\n                <div class=\"title\">\n                  <span>{{ $t(\"docsign.documents\") }}</span>\n                  <!-- <div class=\"actions\">\n                    <i class=\"fa fa-rotate-left mr-2 clickable-icon\" @click=\"rotateHandle('left')\"></i>\n                    <i\n                      class=\"fa fa-rotate-right mr-2 clickable-icon\"\n                      @click=\"rotateHandle('right')\"\n                    ></i>\n                    <i class=\"fa fa-trash clickable-icon\" @click=\"deleteHandle\"></i>\n                  </div>-->\n                </div>\n                <hr />\n                <div class=\"documents-list\">\n                  <div class=\"document-content\" v-for=\"(file, key) in documentList.data\" :key=\"key\">\n                    <div v-if=\"file.images.length > 0\">\n                      <div\n                        class=\"collapse-header item-title\"\n                        v-b-toggle=\"`document_list_toggle_${key}`\"\n                      >\n                        <span class=\"title\">{{file.document_name}}</span>\n                        <span class=\"collapse-icon\">\n                          <i class=\"fa fa-caret-left\" />\n                        </span>\n                      </div>\n                    </div>\n                    <b-collapse :id=\"`document_list_toggle_${key}`\" class=\"item-pages\" visible v-if=\"file.images.length > 0\">\n                      <div\n                        class=\"page-content\"\n                        v-for=\"(image, imgKey) in file.images\"\n                        :key=\"imgKey\"\n                      >\n                        <div\n                          :id=\"`doc_nav_id_${file.id}_${imgKey}`\"\n                          class=\"pdf-content\"\n                          v-on:click=\"selectPage(file, numpage(image))\"\n                        >\n                          <div class=\"loader_img\" v-if=\"pageLoading\">\n                            <i class=\"fa fa-spinner fa-spin fa-2x\" />\n                          </div>\n                          <img :src=\"`${image}`\" class=\"w-100 selected-pdf main_img\" />\n                        </div>\n                        <div class=\"actionsButton\">\n                          <i\n                            class=\"fa fa-rotate-left mr-2 clickable-icon\"\n                            @click=\"rotateHandle('left', file.id, numpage(image))\"\n                          />\n                          <i\n                            class=\"fa fa-rotate-right mr-2 clickable-icon\"\n                            @click=\"rotateHandle('right', file.id, numpage(image))\"\n                          />\n                          <i\n                            class=\"fa fa-trash clickable-icon\"\n                            @click=\"deleteHandle(file.id, image)\"\n                          ></i>\n                          <div class=\"page-no pull-right\">{{imgKey + 1}}</div>\n                        </div>\n                      </div>\n                    </b-collapse>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-end flex-wrap pt-4\">\n              <button\n                class=\"btn btn-outline-primary min-width-124px m-1\"\n                v-on:click=\"moveBackPage()\"\n              >{{ $t(\"docsign.back\") }}</button>\n              <button\n                class=\"btn btn-primary min-width-124px m-1\"\n                v-on:click=\"moveNextPage()\"\n                style=\"position: relative\"\n              >\n                <i\n                  v-if=\"nextLoading\"\n                  class=\"fa fa-spinner fa-spin fa-3x\"\n                  style=\"position: absolute; top: 0; left: 33%;\"\n                />\n                {{ $t(\"docsign.next\") }}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"bootstrap-multiselect/dist/css/bootstrap-multiselect.css\";\n\nimport { mapGetters } from \"vuex\";\nimport UserIcon from \"../../components/UserIcon\";\nimport UserSelect from \"../../components/UserSelect\";\nimport {\n  GET_DOCUMENT_REQUEST,\n  GET_BLOD_FROM_URL,\n  ADD_ANNTATION,\n  GET_ANNTATION,\n  EDIT_ANNTATION,\n  DELETE_ANNTATION,\n  ADD_ROTATE_DOCUMENTS,\n  ADD_DELETE_DOCUMENTS\n} from \"../../store/modules/document\";\nimport store from \"../../store/store\";\nimport { GET_DOCS } from \"../../store/actions.type\";\nimport pdf from \"vue-pdf\";\nimport draggable from \"vuedraggable\";\nimport { addParamsToBlob } from \"../../helpers\";\nimport {\n  prepareHandle,\n  generalDefaultButton,\n  initialPrepare,\n  history,\n  unredoButton,\n  userSideBarHandle,\n  addCommentToDocument,\n  rotateFunction,\n  deleteSuccessHandle\n} from \"../../helpers/prepareHandle\";\nimport config from \"../../config/config\";\nimport { EventBus } from \"../../config/event-bus\";\n\nexport default {\n  name: \"Prepare\",\n  components: {\n    pdf,\n    UserIcon,\n    UserSelect,\n    draggable\n  },\n  computed: {\n    ...mapGetters([\"addDocument\", [GET_DOCUMENT_REQUEST], \"getRecipients\"])\n  },\n  data() {\n    return {\n      documentList: [],\n      pages: [],\n      sign_items: [],\n      percent: \"100%\",\n      viewSrc: null,\n      viewPage: 0,\n      currentPage: 0,\n      pageCount: 0,\n      src: null,\n      numPages: undefined,\n      annotations: [],\n      pageLoading: true,\n      nextLoading: false,\n      commentButtonActive: false,\n      recipientsList: []\n    };\n  },\n  mounted() {\n    let vm = this;\n    let backendUrl = `${config.BASE_URL}`;\n    let document_id = vm.$route.query.document_id;\n    vm.pages = [];\n    vm.documentList = [];\n\n    store\n      .dispatch(GET_DOCS, document_id)\n      .then(res => {\n        vm.recipientsList = vm.getRecipients;\n      })\n      .catch(err => {});\n\n    store.dispatch(GET_ANNTATION, document_id).then(res => {\n      if (res.status && res.annotations && res.annotations.length > 0) {\n        vm.annotations = res.annotations;\n        EventBus.$on(\"recipientsList\", recipients => {\n          this.recipientsList = recipients;\n          recipients &&\n            generalDefaultButton(vm.annotations, recipients, this.prepareEvent);\n        });\n      }\n    });\n\n    this.initialFunction();\n  },\n  methods: {\n    initialFunction() {\n      let vm = this;\n      let backendUrl = `${config.BASE_URL}`;\n      let document_id = vm.$route.query.document_id;\n      vm.pages = [];\n      vm.documentList = [];\n\n      store\n        .dispatch(GET_DOCUMENT_REQUEST, { document_id, show_image: 1 })\n        .then(res => {\n          vm.documentList = vm[GET_DOCUMENT_REQUEST];\n          if (\n            vm.documentList &&\n            vm.documentList.data &&\n            vm.documentList.data.length > 0\n          ) {\n            vm.documentList.data.map((v, docKey) => {\n              v.images = v.images &&\n                v.images.length > 0 &&\n                v.images.filter((img, imgKey) => {\n                  let checkPageDelete =\n                    v.document_action.length > 0 &&\n                    v.document_action.find(\n                      ac => ac.page === imgKey + 1 && ac.delete === 1\n                    );\n                  !checkPageDelete && vm.pages.push({\n                    docId: v.id,\n                    pageId: docKey,\n                    pageNum: this.numpage(img),\n                    image: img\n                  });   \n                  return !checkPageDelete;\n                  \n                });\n            });\n            vm.pageLoading = false;\n            initialPrepare(vm.pages);\n            // general drop\n            prepareHandle(\n              vm.pages.map((v, key) => key),\n              this.recipientsList,\n              this.prepareEvent\n            );\n          }\n        // console.log('vm.documentList.data', vm.documentList.data[0])\n        // console.log('vm.pages', vm.pages)\n\n        });\n      vm.$root.$on(\"bv::scrollspy::activate\", vm.onActivate);\n    },\n    deleteHandle(docId, imgUrl) {\n      let numPage = this.numpage(imgUrl);\n      if(numPage) {\n        this.pageLoading = false;\n        let sendData = {\n          document_id: docId,\n          page: numPage,\n          delete: 1\n        };\n        this.$store.dispatch(ADD_DELETE_DOCUMENTS, sendData).then(res => {\n          if (res.status) {\n            this.pageLoading = true;\n            deleteSuccessHandle(docId, numPage);\n            this.initialFunction();\n          }\n        });\n      }\n    },\n    numpage(imgUrl) {\n      let arrayImgUrl = imgUrl.split(\"/\").pop();\n      return parseInt(arrayImgUrl.split(\".\")[0].slice(-1));\n    },\n    checkHasDeletePage(document_action, pageId) {\n      let _result =\n        document_action.length > 0 &&\n        document_action.find(v => v.page === pageId && v.delete === 1);\n      return !!_result;\n    },\n    rotateHandle(location, docId, pageId) {\n      let vm = this;\n\n      rotateFunction(location, docId, pageId, sendData => {\n        vm.$store.dispatch(ADD_ROTATE_DOCUMENTS, sendData);\n      });\n    },\n    checkRotate(data, document) {\n      let getRotate =\n        document &&\n        document.document_action &&\n        document.document_action.length > 0 &&\n        document.document_action.find(v => v.page === data.pageNum + 1);\n      return getRotate && getRotate.rotate;\n    },\n    undo() {\n      let vm = this;\n      let document_id = vm.$route.query.document_id;\n      history.undo(vm.annotations);\n      if (history && history.restore_state && history.restore_state.id) {\n        const annotations_id = history.restore_state.id;\n        unredoButton(annotations_id, \"undo\");\n        vm.$store\n          .dispatch(EDIT_ANNTATION, { id: annotations_id, display: \"none\" })\n          .then(res => {\n            if (res.status && res.annotation_id) {\n              vm.$store.dispatch(GET_ANNTATION, document_id).then(res => {\n                if (\n                  res.status &&\n                  res.annotations &&\n                  res.annotations.length > 0\n                ) {\n                  vm.annotations = res.annotations;\n                }\n              });\n            }\n          });\n      }\n    },\n    redo() {\n      let vm = this;\n      let document_id = vm.$route.query.document_id;\n      history.redo();\n      if (history && history.restore_state && history.restore_state.id) {\n        const annotations_id = history.restore_state.id;\n        unredoButton(annotations_id, \"redo\");\n        vm.$store\n          .dispatch(EDIT_ANNTATION, { id: annotations_id, display: \"block\" })\n          .then(res => {\n            if (res.status && res.annotation_id) {\n              vm.$store.dispatch(GET_ANNTATION, document_id).then(res => {\n                if (\n                  res.status &&\n                  res.annotations &&\n                  res.annotations.length > 0\n                ) {\n                  vm.annotations = res.annotations;\n                }\n              });\n            }\n          });\n      }\n    },\n    commentsHandle() {\n      addCommentToDocument(\n        this.pages.map((v, key) => key),\n        this.recipientsList,\n        this.prepareEvent\n      );\n    },\n    changePercent(e) {\n      this.percent = e;\n      var zoomScale = Number(parseInt(e.replace(\"%\", \"\"))) / 100;\n      for (\n        var i = 0;\n        i < document.getElementsByClassName(\"droppable_content\").length;\n        i++\n      ) {\n        this.setZoom(\n          zoomScale,\n          document.getElementsByClassName(\"droppable_content\")[i]\n        );\n      }\n    },\n    setZoom(zoom, el) {\n      var transformOrigin = [0, 0];\n      el = el || instance.getContainer();\n      var p = [\"webkit\", \"moz\", \"ms\", \"o\"],\n        s = \"scale(\" + zoom + \")\",\n        oString =\n          transformOrigin[0] * 100 + \"% \" + transformOrigin[1] * 100 + \"%\";\n\n      for (var i = 0; i < p.length; i++) {\n        el.style[p[i] + \"Transform\"] = s;\n        el.style[p[i] + \"TransformOrigin\"] = oString;\n      }\n\n      el.style[\"transform\"] = s;\n      el.style[\"transformOrigin\"] = oString;\n      el.style[\"height\"] = \"auto\";\n      el.childNodes[0].style[\"height\"] = \"auto\";\n    },\n    onActivate(target) {\n      // console.log(\"target\", target);\n    },\n    selectPage(data, imgKey) {\n      let scrollId = `doc_id_${data.id}_${imgKey}`;\n      var scrollTo = document.getElementById(scrollId);\n      scrollTo.scrollIntoView();\n    },\n    moveNextPage() {\n      if (!this.checkUserTool()) {\n        this.$awn.alert(\"Add at least 1 tool\", {\n          position: \"bottom-left\",\n          labels: {\n            alert: \"Danger Message\"\n          }\n        });\n        return false;\n      }\n      this.nextLoading = true;\n      this.$router.push(\n        \"/docu-sign/review?document_id=\" + this.$route.query.document_id\n      );\n    },\n    checkUserTool() {\n      return $(`div[id^='droppable_content_'] .user-drag`).length > 0;\n    },\n    moveBackPage() {\n      this.$router.push(\n        \"/docu-sign/add-recipients?document_id=\" + this.$route.query.document_id\n      );\n    },\n    addRecipient() {\n      this.recipients.push({\n        sign_type: \"Need to sign\",\n        com_type: false,\n        name: \"\",\n        email: \"\",\n        set_password: false,\n        password: \"\",\n        confirm_password: \"\"\n      });\n    },\n    removeRecipient(index) {\n      this.recipients.splice(index, 1);\n    },\n    prepareEvent(data, element) {\n      const vm = this,\n        document_id = vm.$route.query.document_id;\n      let sendData = data.send_data;\n      sendData.annotation_id = document_id;\n      data.annotation_id && (sendData.id = data.annotation_id);\n\n      var checkElemnts = $(\".tool-sign:hidden\");\n      vm.$store.dispatch(ADD_ANNTATION, sendData).then(res => {\n        let get_annotation_id = element.data(\"annotation_id\");\n        if (res.status && res.annotation_id && !get_annotation_id) {\n          if (\n            !sendData.id &&\n            history.redo_list &&\n            history.redo_list.length > 0\n          ) {\n            history.redo_list.map((val, key) => {\n              let annotation_id = val.id;\n              vm.$store.dispatch(DELETE_ANNTATION, annotation_id).then(res => {\n                checkElemnts[key].remove();\n              });\n            });\n          }\n          element.attr(\"data-annotation_id\", res.annotation_id);\n          element.addClass(\"tool-sign tool_sign_\" + res.annotation_id);\n        }\n        if (sendData.text && sendData.recipient_arr) {\n          element.popover(\"hide\");\n          element.css(\"opacity\", 0.5);\n        }\n        vm.$store.dispatch(GET_ANNTATION, document_id).then(res2 => {\n          if (res2.status && res2.annotations && res2.annotations.length > 0) {\n            vm.annotations = res2.annotations;\n          }\n        });\n      });\n    }\n  },\n  created() {}\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./Prepare.scss\";\n</style>\n\n"],"sourceRoot":"src/views/document"}]}