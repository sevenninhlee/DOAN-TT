{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/src/store/modules/authentication.js","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/store/modules/authentication.js","mtime":1573548265035},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577}],"contextDependencies":[],"result":["import _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _actions, _mutations;\n\nimport JwtService from \"../../mixins/jwt.service\";\nimport { authentication as API } from \"../../mixins/authentication\";\nimport { AUTH_REQUEST, AUTH_SUCCESS, AUTH_DESTROY, AUTH_ERROR, AUTH_MODAL_BTN, AUTH_SET_FB, AUTH_LOADING } from \"../actions.type\";\nimport { SET_AUTH, SET_USER, PURGE_AUTH, SET_ERROR, SET_MODAL_BTN, SET_FB, SET_LOADING } from \"../mutations.type\";\nvar state = {\n  user: {},\n  token: JwtService.getToken(),\n  fb: null,\n  errors: [],\n  button: null,\n  loading: false\n};\nvar getters = {\n  AUTHENTICATED: function AUTHENTICATED(state) {\n    return !!state.token;\n  },\n  USER: function USER(state) {\n    return state.user;\n  },\n  TOKEN: function TOKEN(state) {\n    return state.token;\n  },\n  FB: function FB(state) {\n    return state.FB;\n  },\n  errors: function errors(state) {\n    return state.errors;\n  },\n  button: function button(state) {\n    return state.button;\n  },\n  loading: function loading(state) {\n    return state.loading;\n  }\n};\nvar actions = (_actions = {}, _defineProperty(_actions, AUTH_REQUEST, function (_ref, token) {\n  var commit = _ref.commit,\n      dispatch = _ref.dispatch;\n  dispatch(AUTH_LOADING, true);\n  JwtService.saveToken(token.access_token);\n  commit(SET_AUTH, token.access_token);\n  return new Promise(function (resolve, reject) {\n    API.methods.user().then(function (response) {\n      dispatch(AUTH_SUCCESS, response.data.user);\n      dispatch(AUTH_LOADING, false);\n      resolve(response);\n    }).catch(function (error) {\n      console.log(error.response);\n      JwtService.destroyToken();\n      dispatch(AUTH_ERROR, error);\n      reject(error);\n    });\n  });\n}), _defineProperty(_actions, AUTH_SUCCESS, function (context, user) {\n  context.commit(SET_USER, user);\n}), _defineProperty(_actions, AUTH_DESTROY, function (context) {\n  JwtService.destroyToken();\n  context.commit(PURGE_AUTH);\n}), _defineProperty(_actions, AUTH_ERROR, function (context, errors) {\n  context.commit(SET_ERROR, errors);\n}), _defineProperty(_actions, AUTH_MODAL_BTN, function (context, button) {\n  context.commit(SET_MODAL_BTN, button);\n}), _defineProperty(_actions, AUTH_SET_FB, function (context, fb) {\n  context.commit(SET_FB, fb);\n}), _defineProperty(_actions, AUTH_LOADING, function (context, loading) {\n  context.commit(SET_LOADING, loading);\n}), _actions);\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_AUTH, function (state, token) {\n  state.token = token;\n  state.errors = [];\n}), _defineProperty(_mutations, SET_USER, function (state, user) {\n  state.user = user;\n}), _defineProperty(_mutations, SET_ERROR, function (state, errors) {\n  state.errors = errors;\n  state.loading = false;\n}), _defineProperty(_mutations, SET_MODAL_BTN, function (state, button) {\n  state.button = button;\n  state.loading = false;\n}), _defineProperty(_mutations, PURGE_AUTH, function (state) {\n  state.user = {};\n  state.token = null;\n  state.fb = null;\n  state.errors = [];\n  state.button = null;\n  state.loading = false;\n}), _defineProperty(_mutations, SET_FB, function (state, fb) {\n  state.FB = fb;\n  state.loading = false;\n}), _defineProperty(_mutations, SET_LOADING, function (state, loading) {\n  state.loading = loading;\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/var/www/html/Jobs/DOAN-TT/client/src/store/modules/authentication.js"],"names":["JwtService","authentication","API","AUTH_REQUEST","AUTH_SUCCESS","AUTH_DESTROY","AUTH_ERROR","AUTH_MODAL_BTN","AUTH_SET_FB","AUTH_LOADING","SET_AUTH","SET_USER","PURGE_AUTH","SET_ERROR","SET_MODAL_BTN","SET_FB","SET_LOADING","state","user","token","getToken","fb","errors","button","loading","getters","AUTHENTICATED","USER","TOKEN","FB","actions","commit","dispatch","saveToken","access_token","Promise","resolve","reject","methods","then","response","data","catch","error","console","log","destroyToken","context","mutations"],"mappings":"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","sourcesContent":["import JwtService from '../../mixins/jwt.service'\nimport { authentication as API } from '../../mixins/authentication'\n\nimport { \n  AUTH_REQUEST,\n  AUTH_SUCCESS, \n  AUTH_DESTROY, \n  AUTH_ERROR, \n  AUTH_MODAL_BTN, \n  AUTH_SET_FB,\n  AUTH_LOADING\n} from '../actions.type'\nimport { \n  SET_AUTH, \n  SET_USER, \n  PURGE_AUTH, \n  SET_ERROR, \n  SET_MODAL_BTN, \n  SET_FB,\n  SET_LOADING\n} from '../mutations.type'\n\nconst state = {\n  user: {},\n  token: JwtService.getToken(),\n  fb: null,\n  errors: [],\n  button: null,\n  loading: false\n}\n\nconst getters = {\n  AUTHENTICATED: state => !!state.token,\n  USER: state => state.user,\n  TOKEN: state => state.token,\n  FB: state => state.FB,\n  errors: state => state.errors,\n  button: state => state.button,\n  loading: state => state.loading\n}\n\nconst actions = {\n  [AUTH_REQUEST]: ({ commit, dispatch }, token) => {\n    dispatch(AUTH_LOADING, true)\n\n    JwtService.saveToken(token.access_token)\n    commit(SET_AUTH, token.access_token)\n\n    return new Promise((resolve, reject) => {\n        API.methods.user()\n        .then(response => {\n          dispatch(AUTH_SUCCESS, response.data.user)\n          \n          dispatch(AUTH_LOADING, false)\n          resolve(response)\n        })\n        .catch(error => {\n          console.log(error.response)\n          JwtService.destroyToken()\n          dispatch(AUTH_ERROR, error)\n          reject(error)\n        })\n    })\n  },\n  [AUTH_SUCCESS](context, user) {\n    context.commit(SET_USER, user)\n  },\n  [AUTH_DESTROY](context) {\n    JwtService.destroyToken()\n    context.commit(PURGE_AUTH)\n  },\n  [AUTH_ERROR](context, errors) {\n    context.commit(SET_ERROR, errors)\n  },\n  [AUTH_MODAL_BTN](context, button) {\n    context.commit(SET_MODAL_BTN, button)\n  },\n  [AUTH_SET_FB](context, fb) {\n    context.commit(SET_FB, fb)\n  },\n  [AUTH_LOADING](context, loading) {\n    context.commit(SET_LOADING, loading)\n  }\n}\n\nconst mutations = {\n  [SET_AUTH](state, token) {\n    state.token = token\n    state.errors = []\n  },\n  [SET_USER](state, user) {\n    state.user = user\n  },\n  [SET_ERROR](state, errors) {\n    state.errors = errors\n    state.loading = false\n  },\n  [SET_MODAL_BTN](state, button) {\n    state.button = button\n    state.loading = false\n  },\n  [PURGE_AUTH](state) {\n    state.user = {}\n    state.token = null\n    state.fb = null\n    state.errors = []\n    state.button = null\n    state.loading = false\n  },\n  [SET_FB](state, fb) {\n    state.FB = fb\n    state.loading = false\n  },\n  [SET_LOADING](state, loading) {\n    state.loading = loading\n  }\n}\n\nexport default {\n  state,\n  getters,\n  mutations,\n  actions\n}"]}]}