{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/src/store/modules/userProfile.js","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/store/modules/userProfile.js","mtime":1573548265051},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577}],"contextDependencies":[],"result":["import _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _actions, _mutations;\n\nimport JwtService from \"../../mixins/jwt.service\";\nimport { post, put, remove, get } from \"../../utils/http\";\nimport { CHANGE_IMAGE_REQUEST, GET_USER_INFOR_REQUEST, USER_UPDATE_PASSAUTH_REQUEST, USER_UPDATE_REQUEST } from \"../actions.type\";\nimport { SET_ERROR, CHANGE_IMAGE_SUCCESS, CHANGE_IMAGE_ERROR, GET_USER_INFOR_SUCCESS, GET_USER_INFOR_ERROR, UPDATE_PASSAUTH_SUCCESS, UPDATE_PROFILE_SUCCESS } from \"../mutations.type\";\nvar state = {\n  userAccount: {},\n  urlAvatar: null\n};\nvar getters = {\n  getUser: function getUser(state) {\n    return state.userAccount;\n  },\n  getAvatarUpload: function getAvatarUpload(state) {\n    return state.urlAvatar;\n  }\n};\nvar actions = (_actions = {}, _defineProperty(_actions, CHANGE_IMAGE_REQUEST, function (_ref, data) {\n  var commit = _ref.commit;\n  return new Promise(function (resolve, reject) {\n    put('clients/update-avatar', data).then(function (resp) {\n      commit(CHANGE_IMAGE_SUCCESS, resp.data);\n      resolve(resp.data);\n    }).catch(function (err) {\n      commit(CHANGE_IMAGE_ERROR, err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, GET_USER_INFOR_REQUEST, function (_ref2) {\n  var commit = _ref2.commit;\n  return new Promise(function (resolve, reject) {\n    get('auth/user').then(function (resp) {\n      commit(GET_USER_INFOR_SUCCESS, resp.data);\n      resolve(resp.data);\n    }).catch(function (err) {\n      commit(GET_USER_INFOR_ERROR, err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, USER_UPDATE_PASSAUTH_REQUEST, function (context, credentials) {\n  return new Promise(function (resolve, reject) {\n    put('clients/update-password', credentials).then(function (response) {\n      context.dispatch(GET_USER_INFOR_REQUEST);\n      context.commit(UPDATE_PASSAUTH_SUCCESS, response.data);\n      resolve(response);\n    }).catch(function (error) {\n      context.commit(SET_ERROR, error);\n      reject(error);\n    });\n  });\n}), _defineProperty(_actions, USER_UPDATE_REQUEST, function (context, credentials) {\n  return new Promise(function (resolve, reject) {\n    put('clients/update-client', credentials).then(function (response) {\n      context.dispatch(GET_USER_INFOR_REQUEST);\n      context.commit(UPDATE_PROFILE_SUCCESS, response.data);\n      resolve(response);\n    }).catch(function (error) {\n      context.commit(SET_ERROR, error);\n      reject(error);\n    });\n  });\n}), _actions);\nvar mutations = (_mutations = {}, _defineProperty(_mutations, UPDATE_PROFILE_SUCCESS, function (state, payload) {\n  state.userAccount = payload.user;\n}), _defineProperty(_mutations, CHANGE_IMAGE_SUCCESS, function (state, payload) {\n  state.urlAvatar = payload.user.avatar;\n}), _defineProperty(_mutations, CHANGE_IMAGE_ERROR, function (state, payload) {\n  state.urlAvatar = null;\n}), _defineProperty(_mutations, GET_USER_INFOR_SUCCESS, function (state, payload) {\n  state.userAccount = payload.user;\n}), _defineProperty(_mutations, GET_USER_INFOR_ERROR, function (state, payload) {\n  return state.userAccount;\n}), _defineProperty(_mutations, UPDATE_PASSAUTH_SUCCESS, function (state, payload) {// Dont know what to do\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/var/www/html/Jobs/DOAN-TT/client/src/store/modules/userProfile.js"],"names":["JwtService","post","put","remove","get","CHANGE_IMAGE_REQUEST","GET_USER_INFOR_REQUEST","USER_UPDATE_PASSAUTH_REQUEST","USER_UPDATE_REQUEST","SET_ERROR","CHANGE_IMAGE_SUCCESS","CHANGE_IMAGE_ERROR","GET_USER_INFOR_SUCCESS","GET_USER_INFOR_ERROR","UPDATE_PASSAUTH_SUCCESS","UPDATE_PROFILE_SUCCESS","state","userAccount","urlAvatar","getters","getUser","getAvatarUpload","actions","data","commit","Promise","resolve","reject","then","resp","catch","err","context","credentials","response","dispatch","error","mutations","payload","user","avatar"],"mappings":";;;;AAAA,OAAOA,UAAP;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,MAApB,EAA4BC,GAA5B;AAEA,SACEC,oBADF,EAEEC,sBAFF,EAGEC,4BAHF,EAIEC,mBAJF;AAOA,SACEC,SADF,EAEEC,oBAFF,EAGEC,kBAHF,EAIEC,sBAJF,EAKEC,oBALF,EAMEC,uBANF,EAOEC,sBAPF;AAUA,IAAMC,KAAK,GAAG;AACZC,EAAAA,WAAW,EAAE,EADD;AAEZC,EAAAA,SAAS,EAAE;AAFC,CAAd;AAKA,IAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAG,iBAAAJ,KAAK,EAAI;AACjB,WAAOA,KAAK,CAACC,WAAb;AACD,GAHa;AAIdI,EAAAA,eAAe,EAAG,yBAAAL,KAAK,EAAI;AACzB,WAAOA,KAAK,CAACE,SAAb;AACD;AANa,CAAhB;AASA,IAAMI,OAAO,6CACVjB,oBADU,EACa,gBAAWkB,IAAX,EAAoB;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;AAC1C,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCzB,IAAAA,GAAG,CAAC,uBAAD,EAA0BqB,IAA1B,CAAH,CACGK,IADH,CACQ,UAAAC,IAAI,EAAI;AACZL,MAAAA,MAAM,CAACd,oBAAD,EAAuBmB,IAAI,CAACN,IAA5B,CAAN;AACAG,MAAAA,OAAO,CAACG,IAAI,CAACN,IAAN,CAAP;AACD,KAJH,EAKGO,KALH,CAKS,UAAAC,GAAG,EAAI;AACZP,MAAAA,MAAM,CAACb,kBAAD,EAAqBoB,GAArB,CAAN;AACAJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD,KARH;AASD,GAVM,CAAP;AAWD,CAbU,6BAcVzB,sBAdU,EAce,iBAAc;AAAA,MAAZkB,MAAY,SAAZA,MAAY;AACtC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCvB,IAAAA,GAAG,CAAC,WAAD,CAAH,CACGwB,IADH,CACQ,UAAAC,IAAI,EAAI;AACZL,MAAAA,MAAM,CAACZ,sBAAD,EAAyBiB,IAAI,CAACN,IAA9B,CAAN;AACAG,MAAAA,OAAO,CAACG,IAAI,CAACN,IAAN,CAAP;AACD,KAJH,EAKGO,KALH,CAKS,UAAAC,GAAG,EAAI;AACZP,MAAAA,MAAM,CAACX,oBAAD,EAAuBkB,GAAvB,CAAN;AACAJ,MAAAA,MAAM,CAACI,GAAD,CAAN;AACD,KARH;AASD,GAVM,CAAP;AAWD,CA1BU,6BA2BVxB,4BA3BU,EA2BqB,UAACyB,OAAD,EAAUC,WAAV,EAA0B;AACxD,SAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCzB,IAAAA,GAAG,CAAC,yBAAD,EAA4B+B,WAA5B,CAAH,CACGL,IADH,CACQ,UAAAM,QAAQ,EAAI;AAChBF,MAAAA,OAAO,CAACG,QAAR,CAAiB7B,sBAAjB;AACA0B,MAAAA,OAAO,CAACR,MAAR,CAAeV,uBAAf,EAAwCoB,QAAQ,CAACX,IAAjD;AACAG,MAAAA,OAAO,CAACQ,QAAD,CAAP;AACD,KALH,EAMGJ,KANH,CAMS,UAAAM,KAAK,EAAI;AACdJ,MAAAA,OAAO,CAACR,MAAR,CAAef,SAAf,EAA0B2B,KAA1B;AACAT,MAAAA,MAAM,CAACS,KAAD,CAAN;AACD,KATH;AAUD,GAXM,CAAP;AAYD,CAxCU,6BAyCV5B,mBAzCU,EAyCY,UAACwB,OAAD,EAAUC,WAAV,EAA0B;AAC/C,SAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCzB,IAAAA,GAAG,CAAC,uBAAD,EAA0B+B,WAA1B,CAAH,CACGL,IADH,CACQ,UAAAM,QAAQ,EAAI;AAChBF,MAAAA,OAAO,CAACG,QAAR,CAAiB7B,sBAAjB;AACA0B,MAAAA,OAAO,CAACR,MAAR,CAAeT,sBAAf,EAAuCmB,QAAQ,CAACX,IAAhD;AACAG,MAAAA,OAAO,CAACQ,QAAD,CAAP;AACD,KALH,EAMGJ,KANH,CAMS,UAAAM,KAAK,EAAI;AACdJ,MAAAA,OAAO,CAACR,MAAR,CAAef,SAAf,EAA0B2B,KAA1B;AACAT,MAAAA,MAAM,CAACS,KAAD,CAAN;AACD,KATH;AAUD,GAXM,CAAP;AAYD,CAtDU,YAAb;AAyDA,IAAMC,SAAS,iDACVtB,sBADU,YACcC,KADd,EACqBsB,OADrB,EAC8B;AACvCtB,EAAAA,KAAK,CAACC,WAAN,GAAoBqB,OAAO,CAACC,IAA5B;AACD,CAHU,+BAIV7B,oBAJU,YAIYM,KAJZ,EAImBsB,OAJnB,EAI4B;AACnCtB,EAAAA,KAAK,CAACE,SAAN,GAAkBoB,OAAO,CAACC,IAAR,CAAaC,MAA/B;AACH,CANU,+BAOV7B,kBAPU,YAOUK,KAPV,EAOiBsB,OAPjB,EAO0B;AACnCtB,EAAAA,KAAK,CAACE,SAAN,GAAkB,IAAlB;AACD,CATU,+BAUVN,sBAVU,YAUcI,KAVd,EAUqBsB,OAVrB,EAU8B;AACvCtB,EAAAA,KAAK,CAACC,WAAN,GAAoBqB,OAAO,CAACC,IAA5B;AACD,CAZU,+BAaV1B,oBAbU,YAaYG,KAbZ,EAamBsB,OAbnB,EAa4B;AACpC,SAAOtB,KAAK,CAACC,WAAb;AACF,CAfU,+BAgBVH,uBAhBU,YAgBeE,KAhBf,EAgBsBsB,OAhBtB,EAgB+B,CACxC;AACD,CAlBU,cAAf;AAqBA,eAAe;AACXtB,EAAAA,KAAK,EAALA,KADW;AAEXG,EAAAA,OAAO,EAAPA,OAFW;AAGXkB,EAAAA,SAAS,EAATA,SAHW;AAIXf,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import JwtService from '../../mixins/jwt.service'\nimport { post, put, remove, get } from '../../utils/http';\n\nimport {\n  CHANGE_IMAGE_REQUEST,\n  GET_USER_INFOR_REQUEST,\n  USER_UPDATE_PASSAUTH_REQUEST,\n  USER_UPDATE_REQUEST\n} from '../actions.type'\n\nimport { \n  SET_ERROR,\n  CHANGE_IMAGE_SUCCESS,\n  CHANGE_IMAGE_ERROR,\n  GET_USER_INFOR_SUCCESS,\n  GET_USER_INFOR_ERROR,\n  UPDATE_PASSAUTH_SUCCESS,\n  UPDATE_PROFILE_SUCCESS\n} from '../mutations.type'\n\nconst state = {\n  userAccount: {},\n  urlAvatar: null\n}\n\nconst getters = {\n  getUser : state => {\n    return state.userAccount;\n  },\n  getAvatarUpload : state => {\n    return state.urlAvatar;\n  }\n}\n\nconst actions = {\n  [CHANGE_IMAGE_REQUEST]: ({commit}, data) => {\n    return new Promise((resolve, reject) => {\n      put('clients/update-avatar', data)\n        .then(resp => {\n          commit(CHANGE_IMAGE_SUCCESS, resp.data);\n          resolve(resp.data)\n        })\n        .catch(err => {\n          commit(CHANGE_IMAGE_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n  [GET_USER_INFOR_REQUEST]: ({commit}) => {\n    return new Promise((resolve, reject) => {\n      get('auth/user')\n        .then(resp => {\n          commit(GET_USER_INFOR_SUCCESS, resp.data);\n          resolve(resp.data)\n        })\n        .catch(err => {\n          commit(GET_USER_INFOR_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n  [USER_UPDATE_PASSAUTH_REQUEST]: (context, credentials) => {\n    return new Promise((resolve, reject) => {\n      put('clients/update-password', credentials)\n        .then(response => {\n          context.dispatch(GET_USER_INFOR_REQUEST)\n          context.commit(UPDATE_PASSAUTH_SUCCESS, response.data)\n          resolve(response)\n        })\n        .catch(error => {\n          context.commit(SET_ERROR, error)\n          reject(error)\n        })\n    })\n  },\n  [USER_UPDATE_REQUEST]: (context, credentials) => {\n    return new Promise((resolve, reject) => {\n      put('clients/update-client', credentials)\n        .then(response => {\n          context.dispatch(GET_USER_INFOR_REQUEST)\n          context.commit(UPDATE_PROFILE_SUCCESS, response.data)\n          resolve(response)\n        })\n        .catch(error => {\n          context.commit(SET_ERROR, error)\n          reject(error)\n        })\n    })\n  }\n}\n\nconst mutations = {\n    [UPDATE_PROFILE_SUCCESS](state, payload) {\n      state.userAccount = payload.user\n    },  \n    [CHANGE_IMAGE_SUCCESS](state, payload) {\n        state.urlAvatar = payload.user.avatar;\n    },\n    [CHANGE_IMAGE_ERROR](state, payload) {\n      state.urlAvatar = null;\n    },\n    [GET_USER_INFOR_SUCCESS](state, payload) {\n      state.userAccount = payload.user;\n    },\n    [GET_USER_INFOR_ERROR](state, payload) {\n       return state.userAccount;\n    },\n    [UPDATE_PASSAUTH_SUCCESS](state, payload) {\n      // Dont know what to do\n    }\n    \n}\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n}"]}]}