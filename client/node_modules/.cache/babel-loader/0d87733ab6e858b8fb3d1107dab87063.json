{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/authentication/SignupConfirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/authentication/SignupConfirm.vue","mtime":1573548269886},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport Confirmed from \"../../components/signup/Confirmed.modal\";\nimport Invalid from \"../../components/signup/Invalid.modal\";\nimport { authentication } from \"../../mixins/authentication\";\nexport default {\n  name: 'SignupConfirm',\n  mixins: [authentication],\n  components: {\n    Confirmed: Confirmed,\n    Invalid: Invalid\n  },\n  data: function data() {\n    return {\n      isLoaded: false,\n      isConfirmed: false,\n      token: ''\n    };\n  },\n  mounted: function mounted() {\n    this.token = this.$route.params.token;\n    this.onConfirm(); // this.onSuccess()\n  },\n  methods: {\n    onConfirm: function onConfirm() {\n      var vm = this;\n      vm.activate({\n        token: vm.token\n      }).then(function (response) {\n        vm.onSuccess();\n      }).catch(function (error) {\n        // alert(error.response.data.errors[0])\n        vm.onInvalidToken();\n      });\n    },\n    onSuccess: function onSuccess() {\n      this.$bvModal.show('modal-confirmed');\n    },\n    onInvalidToken: function onInvalidToken() {\n      this.$bvModal.show('modal-invalidconftoken');\n    }\n  }\n};",{"version":3,"sources":["SignupConfirm.vue"],"names":[],"mappings":";;;;;;;AAQA,OAAA,SAAA;AACA,OAAA,OAAA;AAEA,SAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,MAAA,EAAA,CAAA,cAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,OAAA,EAAA;AAFA,GAHA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,WAAA,EAAA,KAFA;AAGA,MAAA,KAAA,EAAA;AAHA,KAAA;AAKA,GAbA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,KAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA;AACA,SAAA,SAAA,GAFA,CAGA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,MAAA,EAAA,CAAA,QAAA,CAAA;AAAA,QAAA,KAAA,EAAA,EAAA,CAAA;AAAA,OAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,EAAA,CAAA,SAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,KAAA,EAAA;AACA;AACA,QAAA,EAAA,CAAA,cAAA;AACA,OAPA;AAQA,KAXA;AAYA,IAAA,SAZA,uBAYA;AACA,WAAA,QAAA,CAAA,IAAA,CAAA,iBAAA;AACA,KAdA;AAeA,IAAA,cAfA,4BAeA;AACA,WAAA,QAAA,CAAA,IAAA,CAAA,wBAAA;AACA;AAjBA;AAnBA,CAAA","sourcesContent":["<template>\n  <b-container fluid class=\"signup-confirmed\">\n    <confirmed></confirmed>\n    <invalid></invalid>\n  </b-container>\n</template>\n\n<script>\nimport Confirmed from '../../components/signup/Confirmed.modal'\nimport Invalid from '../../components/signup/Invalid.modal'\n\nimport { authentication } from '../../mixins/authentication'\n\nexport default {\n    name: 'SignupConfirm',\n    mixins: [authentication],\n    components: {\n        Confirmed,\n        Invalid,\n    },\n    data() {\n        return {\n            isLoaded: false,\n            isConfirmed: false,\n            token: ''\n        }\n    },\n    mounted() {\n        this.token = this.$route.params.token\n        this.onConfirm()\n        // this.onSuccess()\n    },\n    methods: {\n        onConfirm() {\n            var vm = this\n            vm.activate({token: vm.token})\n                .then(response => {\n                    vm.onSuccess()\n                })\n                .catch(error => {\n                    // alert(error.response.data.errors[0])\n                    vm.onInvalidToken()\n                })\n        },\n        onSuccess() {\n            this.$bvModal.show('modal-confirmed')\n        },\n        onInvalidToken() {\n            this.$bvModal.show('modal-invalidconftoken')\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n// @import \"./authentication.scss\";\n</style>\n"],"sourceRoot":"src/views/authentication"}]}