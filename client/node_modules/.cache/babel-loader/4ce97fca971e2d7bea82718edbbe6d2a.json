{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/src/store/modules/firstDocuSign.js","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/store/modules/firstDocuSign.js","mtime":1573548265045},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577}],"contextDependencies":[],"result":["import _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _actions, _mutations;\n\nimport JwtService from \"../../mixins/jwt.service\";\nimport { post, put, remove, get } from \"../../utils/http\";\nimport { CHECK_CLIENT, RECIPIENTS_ADD, RECIPIENTS_UPDATE, GET_EMAIL_CLIENT, GET_DOCS, RECIPIENTS_REMOVE, GET_FRIENDS_KAKAO_REQUEST } from \"../actions.type\";\nimport { IS_CLIENTED, ERR_CLIENTED, RECIPIENTS_SUCCESS, RECIPIENTS_ERROR, GET_EMAIL_CLIENT_SUCCESS, GET_EMAIL_CLIENT_ERROR, GET_DOCS_SUCCESS, GET_DOCS_ERROR, RECIPIENTS_REMOVE_SUCCESS, RECIPIENTS_REMOVE_ERROR } from \"../mutations.type\";\nvar state = {\n  isClient: false,\n  isRecipients: false,\n  emailClients: [],\n  recipients: [],\n  documents: []\n};\nvar getters = {\n  _isClient: function _isClient(state) {\n    return state.isClient;\n  },\n  getEmailClients: function getEmailClients(state) {\n    return state.emailClients;\n  },\n  getRecipients: function getRecipients(state) {\n    return state.recipients;\n  },\n  getDocuments: function getDocuments(state) {\n    return state.documents;\n  }\n};\nvar actions = (_actions = {}, _defineProperty(_actions, CHECK_CLIENT, function (_ref) {\n  var commit = _ref.commit;\n  return new Promise(function (resolve, reject) {\n    get('clients/get-client').then(function (resp) {\n      commit(IS_CLIENTED, resp.data);\n      resolve(resp.data);\n    }).catch(function (err) {\n      commit(ERR_CLIENTED, err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, RECIPIENTS_ADD, function (_ref2, data) {\n  var commit = _ref2.commit;\n  return new Promise(function (resolve, reject) {\n    post('recipients/add', data).then(function (resp) {\n      console.log(resp);\n      commit(RECIPIENTS_SUCCESS, resp.data);\n      resolve(resp);\n    }).catch(function (err) {\n      console.log(err);\n      commit(RECIPIENTS_ERROR, err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, RECIPIENTS_UPDATE, function (_ref3, data) {\n  var commit = _ref3.commit;\n  return new Promise(function (resolve, reject) {\n    put('recipients/add', data).then(function (resp) {\n      console.log(resp);\n      commit(RECIPIENTS_SUCCESS, resp.data);\n      resolve(resp);\n    }).catch(function (err) {\n      console.log(err);\n      commit(RECIPIENTS_ERROR, err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, GET_EMAIL_CLIENT, function (_ref4) {\n  var commit = _ref4.commit;\n  return new Promise(function (resolve, reject) {\n    get('clients/get-all-email-client').then(function (resp) {\n      commit(GET_EMAIL_CLIENT_SUCCESS, resp.data);\n      resolve(resp);\n    }).catch(function (err) {\n      commit(GET_EMAIL_CLIENT_ERROR, err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, GET_DOCS, function (_ref5, document_id) {\n  var commit = _ref5.commit;\n  return new Promise(function (resolve, reject) {\n    get('document/get-by/document-id?document_id=' + document_id).then(function (resp) {\n      commit(GET_DOCS_SUCCESS, resp.data);\n      resolve(resp);\n    }).catch(function (err) {\n      commit(GET_DOCS_ERROR, err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, RECIPIENTS_REMOVE, function (_ref6, data) {\n  var commit = _ref6.commit,\n      dispatch = _ref6.dispatch;\n  return new Promise(function (resolve, reject) {\n    remove(\"recipients/delete/\" + data, data).then(function (resp) {\n      // resp && commit(RECIPIENTS_REMOVE_SUCCESS, resp.data);\n      resolve(resp);\n    }).catch(function (err) {\n      // commit(RECIPIENTS_REMOVE_ERROR, err)\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, GET_FRIENDS_KAKAO_REQUEST, function (_ref7, data) {\n  var commit = _ref7.commit;\n  return new Promise(function (resolve, reject) {\n    post('recipients/get-kakao-friends', data).then(function (resp) {\n      // commit(GET_DOCS_SUCCESS, resp.data);\n      resolve(resp);\n    }).catch(function (err) {\n      // commit(GET_DOCS_ERROR, err)\n      reject(err);\n    });\n  });\n}), _actions);\nvar mutations = (_mutations = {}, _defineProperty(_mutations, IS_CLIENTED, function (state, payload) {\n  state.isClient = payload.status;\n}), _defineProperty(_mutations, ERR_CLIENTED, function (state, payload) {\n  state.isClient = false;\n}), _defineProperty(_mutations, RECIPIENTS_SUCCESS, function (state, payload) {\n  state.isRecipients = payload.status;\n}), _defineProperty(_mutations, RECIPIENTS_ERROR, function (state, payload) {\n  state.isRecipients = false;\n}), _defineProperty(_mutations, GET_EMAIL_CLIENT_SUCCESS, function (state, payload) {\n  state.emailClients = payload.list_email;\n}), _defineProperty(_mutations, GET_EMAIL_CLIENT_ERROR, function (state, payload) {\n  state.isRecipients = [];\n}), _defineProperty(_mutations, GET_DOCS_SUCCESS, function (state, payload) {\n  var datas = payload.list[0].recipients;\n  var _type_name = \"\";\n  datas.map(function (value, index) {\n    if (value.action === \"sign\") {\n      _type_name = \"Needs to Sign\";\n    } else if (value.action === \"signer\") {\n      _type_name = \"In personal signer\";\n    } else {\n      _type_name = \"Receives a Copy\";\n    }\n\n    Object.assign(datas[index], {\n      com_type: value.email ? true : false,\n      set_password: value.password ? true : false,\n      confirm_password: value.password,\n      sign_type_name: _type_name\n    });\n    delete datas[index].pivot;\n    delete datas[index].updated_at;\n    delete datas[index].created_at;\n  });\n  state.recipients = datas;\n  state.documents = payload.list;\n}), _defineProperty(_mutations, GET_DOCS_ERROR, function (state, payload) {\n  state.recipients = [];\n  state.documents = [];\n}), _defineProperty(_mutations, RECIPIENTS_REMOVE_SUCCESS, function (state, payload) {}), _defineProperty(_mutations, RECIPIENTS_REMOVE_ERROR, function (state, payload) {}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/var/www/html/Jobs/DOAN-TT/client/src/store/modules/firstDocuSign.js"],"names":["JwtService","post","put","remove","get","CHECK_CLIENT","RECIPIENTS_ADD","RECIPIENTS_UPDATE","GET_EMAIL_CLIENT","GET_DOCS","RECIPIENTS_REMOVE","GET_FRIENDS_KAKAO_REQUEST","IS_CLIENTED","ERR_CLIENTED","RECIPIENTS_SUCCESS","RECIPIENTS_ERROR","GET_EMAIL_CLIENT_SUCCESS","GET_EMAIL_CLIENT_ERROR","GET_DOCS_SUCCESS","GET_DOCS_ERROR","RECIPIENTS_REMOVE_SUCCESS","RECIPIENTS_REMOVE_ERROR","state","isClient","isRecipients","emailClients","recipients","documents","getters","_isClient","getEmailClients","getRecipients","getDocuments","actions","commit","Promise","resolve","reject","then","resp","data","catch","err","console","log","document_id","dispatch","mutations","payload","status","list_email","datas","list","_type_name","map","value","index","action","Object","assign","com_type","email","set_password","password","confirm_password","sign_type_name","pivot","updated_at","created_at"],"mappings":"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","sourcesContent":["import JwtService from \"../../mixins/jwt.service\"\nimport { post, put, remove, get } from '../../utils/http';\n\nimport { CHECK_CLIENT, RECIPIENTS_ADD, RECIPIENTS_UPDATE, GET_EMAIL_CLIENT, GET_DOCS, RECIPIENTS_REMOVE, GET_FRIENDS_KAKAO_REQUEST } from '../actions.type'\nimport { IS_CLIENTED,  ERR_CLIENTED, RECIPIENTS_SUCCESS, RECIPIENTS_ERROR,GET_EMAIL_CLIENT_SUCCESS, GET_EMAIL_CLIENT_ERROR, GET_DOCS_SUCCESS, GET_DOCS_ERROR, RECIPIENTS_REMOVE_SUCCESS, RECIPIENTS_REMOVE_ERROR} from '../mutations.type'\n\nconst state = {\n    isClient: false,\n    isRecipients: false,\n    emailClients: [],\n    recipients: [],\n    documents: [],\n}\n\nconst getters = {\n    _isClient(state)\n    {\n        return state.isClient\n    },\n    getEmailClients: state => state.emailClients,\n    getRecipients: state => state.recipients,\n    getDocuments: state => state.documents,\n    \n}\n\nconst actions = {\n  [CHECK_CLIENT]: ({ commit }) => {\n    return new Promise((resolve, reject) => {\n      get('clients/get-client')\n        .then(resp => {\n          commit(IS_CLIENTED, resp.data);\n          resolve(resp.data)\n        })\n        .catch(err => {\n          commit(ERR_CLIENTED, err)\n          reject(err)\n        })\n    })\n  },\n  [RECIPIENTS_ADD]: ({ commit }, data) => {\n    return new Promise((resolve, reject) => {\n      post('recipients/add', data)\n        .then(resp => {\n          console.log(resp)\n          commit(RECIPIENTS_SUCCESS, resp.data);\n          resolve(resp)\n        })\n        .catch(err => {\n          console.log(err)\n          commit(RECIPIENTS_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n  [RECIPIENTS_UPDATE]: ({ commit }, data) => {\n    return new Promise((resolve, reject) => {\n      put('recipients/add', data)\n        .then(resp => {\n          console.log(resp)\n          commit(RECIPIENTS_SUCCESS, resp.data);\n          resolve(resp)\n        })\n        .catch(err => {\n          console.log(err)\n          commit(RECIPIENTS_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n  [GET_EMAIL_CLIENT]: ({ commit }) => {\n    return new Promise((resolve, reject) => {\n      get('clients/get-all-email-client')\n        .then(resp => {\n          commit(GET_EMAIL_CLIENT_SUCCESS, resp.data);\n          resolve(resp)\n        })\n        .catch(err => {\n          commit(GET_EMAIL_CLIENT_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n  [GET_DOCS]: ({ commit }, document_id) => {\n    return new Promise((resolve, reject) => {\n      get('document/get-by/document-id?document_id='+document_id)\n        .then(resp => {\n          commit(GET_DOCS_SUCCESS, resp.data);\n          resolve(resp)\n        })\n        .catch(err => {\n          commit(GET_DOCS_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n  [RECIPIENTS_REMOVE]: ({ commit, dispatch }, data) => {\n    return new Promise((resolve, reject) => {\n      remove(\"recipients/delete/\"+data, data)\n        .then(resp => {\n          // resp && commit(RECIPIENTS_REMOVE_SUCCESS, resp.data);\n          resolve(resp);\n        })\n        .catch(err => {\n          // commit(RECIPIENTS_REMOVE_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n  [GET_FRIENDS_KAKAO_REQUEST]: ({ commit }, data) => {\n    return new Promise((resolve, reject) => {\n      post('recipients/get-kakao-friends', data)\n        .then(resp => {\n          // commit(GET_DOCS_SUCCESS, resp.data);\n          resolve(resp)\n        })\n        .catch(err => {\n          // commit(GET_DOCS_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n}\n\nconst mutations = {\n    [IS_CLIENTED](state, payload) {\n        state.isClient = payload.status\n    },\n    [ERR_CLIENTED](state, payload) {\n        state.isClient = false\n    },\n    [RECIPIENTS_SUCCESS](state, payload) {\n        state.isRecipients = payload.status\n    },\n    [RECIPIENTS_ERROR](state, payload) {\n        state.isRecipients = false\n    },\n    [GET_EMAIL_CLIENT_SUCCESS](state, payload) {\n        state.emailClients = payload.list_email\n    },\n    [GET_EMAIL_CLIENT_ERROR](state, payload) {\n        state.isRecipients = []\n    },\n    [GET_DOCS_SUCCESS](state, payload) {\n        var datas = payload.list[0].recipients\n        var _type_name = \"\";\n\n        datas.map( (value, index) => {\n          if( value.action === \"sign\" ){\n            _type_name = \"Needs to Sign\"\n          }else if(value.action === \"signer\"){\n            _type_name =  \"In personal signer\"\n          }else {\n            _type_name =  \"Receives a Copy\"\n          }\n\n          Object.assign(datas[index], {\n            com_type: value.email ? true : false,\n            set_password: value.password ? true : false,\n            confirm_password: value.password,\n            sign_type_name: _type_name\n          });\n          delete datas[index].pivot;\n          delete datas[index].updated_at;\n          delete datas[index].created_at;\n        })\n        state.recipients = datas;\n        state.documents = payload.list;\n    },\n    [GET_DOCS_ERROR](state, payload) {\n        state.recipients = []\n        state.documents = []\n    },\n    [RECIPIENTS_REMOVE_SUCCESS](state, payload) {\n\n    },\n    [RECIPIENTS_REMOVE_ERROR](state, payload) {\n\n    },\n}\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n}"]}]}