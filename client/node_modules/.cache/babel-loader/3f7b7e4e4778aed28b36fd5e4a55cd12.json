{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/payment/DocumentList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/payment/DocumentList.vue","mtime":1573548269952},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.search\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserIcon from \"../../components/UserIcon\";\nimport UserSelect from \"../../components/UserSelect\";\nimport { VueContext } from 'vue-context';\nimport store from \"../../store/store\";\nimport { mapGetters } from \"vuex\";\nimport { GET_LIST_DOCUMENTS_REQUEST, REMOVE_DOCUMENT_DETAIL_REQUEST } from \"../../store/modules/document\";\nexport default {\n  name: \"DocumentList\",\n  components: {\n    UserIcon: UserIcon,\n    UserSelect: UserSelect,\n    VueContext: VueContext\n  },\n  data: function data() {\n    return {\n      header_checkbox: false,\n      indeterminate: false,\n      selected_items: [],\n      selected_id_items: [],\n      items_per_page: 10,\n      pages: [10, 25, 50, 100],\n      tag_name: \"\",\n      selected_template: null,\n      tags: [\"Inquiry\", \"Report\", \"Tag #3\", \"Tag #4\", \"Tag #5\", \"Tag 6\", \"Report\", \"Tag #3\", \"Tag #4\"],\n      proposed_tag: [\"Proposed tag\", \"Example proposed tag\", \"Proposed tag\"],\n      doc_list: [],\n      doc_list_search: [],\n      currentPage: 1,\n      totalPage: null,\n      period: \"Date\",\n      progress_status: \"Status\",\n      actions: [{\n        setted: false,\n        fileName: \"Continuous Improvement.pdf\"\n      }],\n      search: ''\n    };\n  },\n  created: function created() {\n    this.getPostData();\n  },\n  mounted: function mounted() {},\n  filters: {\n    date: function date(_date) {\n      return moment(_date).format('DD.MM.YYYY');\n    },\n    time: function time(date) {\n      return moment(date).format('h:mm a');\n    },\n    moment: function (_moment) {\n      function moment(_x) {\n        return _moment.apply(this, arguments);\n      }\n\n      moment.toString = function () {\n        return _moment.toString();\n      };\n\n      return moment;\n    }(function (date) {\n      return moment(date).format('MMMM Do YYYY, h:mm:ss a');\n    })\n  },\n  computed: _objectSpread({}, mapGetters(['getListDocs'])),\n  methods: {\n    filterDocuments: function filterDocuments() {\n      // this.filteredList()\n      this.getPostData();\n      this.totalPage = this.doc_list.length;\n    },\n    filteredList: function filteredList() {\n      var vm = this;\n      var doc_list_search = this.doc_list_search;\n\n      if (this.search !== '') {\n        this.doc_list = doc_list_search.filter(function (item) {\n          return item.title.toLowerCase().indexOf(vm.search.toLowerCase()) > -1;\n        });\n      } else {\n        this.doc_list = this.doc_list_search;\n      }\n    },\n    getPostData: function getPostData() {\n      var _this = this;\n\n      store.dispatch(GET_LIST_DOCUMENTS_REQUEST, {\n        per_page: this.items_per_page,\n        page: this.currentPage,\n        date: this.period,\n        status: this.progress_status,\n        search: this.search\n      }).then(function (res) {\n        _this.doc_list = _this.convertListDocs(_this.getListDocs);\n        _this.doc_list_search = _this.convertListDocs(_this.getListDocs);\n      }).catch(function (err) {\n        console.log('err---------', err);\n      });\n    },\n    convertListDocs: function convertListDocs(list) {\n      var _this2 = this;\n\n      this.totalPage = list.total;\n      var data = {};\n      var list_docs = list.data.map(function (value, key) {\n        _this2.convertDescription(value.recipients);\n\n        return _objectSpread({}, data, {\n          id: value.document_id,\n          selected: false,\n          title: value.name,\n          status: value.status,\n          description: _this2.convertDescription(value.recipients),\n          recipients: _this2.convertRecipients(value.recipients),\n          date: value.updated_at\n        });\n      });\n      return list_docs.sort(function (a, b) {\n        return new Date(b.date) - new Date(a.date);\n      }); // this.doc_list = list_docs.sort(function (a, b) {\n      //   return new Date(b.date) - new Date(a.date);\n      // });\n    },\n    convertRecipients: function convertRecipients(list) {\n      var data = {};\n      var list_docs = list.map(function (value, key) {\n        return _objectSpread({}, data, {\n          name: value.name,\n          status: value.status == 0 ? 'Waiting to sign' : 'Completed',\n          action: value.action,\n          avatar: value.user && value.user.avatar ? value.user.avatar : 'img/avatars/default.png',\n          date: value.updated_at\n        });\n      });\n      return list_docs;\n    },\n    convertDescription: function convertDescription(list) {\n      var name = [];\n      list.map(function (value, key) {\n        name.push(value.name);\n      });\n      return name.join(', ');\n    },\n    filterDocs: function filterDocs(list, value) {\n      var data = list.filter(function (v) {\n        return v.document_id === value;\n      });\n    },\n    removeDuplicates: function removeDuplicates(originalArray, prop) {\n      var newArray = [];\n      var lookupObject = {};\n\n      for (var i in originalArray) {\n        lookupObject[originalArray[i][prop]] = originalArray[i];\n      }\n\n      for (i in lookupObject) {\n        newArray.push(lookupObject[i]);\n      }\n\n      return newArray;\n    },\n    getStyle: function getStyle(status) {\n      if (status == 'completed') {\n        return \"status completed\";\n      } else if (status == 'waiting') {\n        return \"status waiting\";\n      } else if (status == 'Rejected') {\n        return \"status rejected\";\n      } else if (status == 'Voided') {\n        return \"status voided\";\n      }\n\n      return \"status completed\";\n    },\n    getStyleRecipients: function getStyleRecipients(status) {\n      if (status == 'Completed') {\n        return \"status completed\";\n      } else if (status == 'Waiting to sign') {\n        return \"status waiting\";\n      }\n\n      return \"status completed\";\n    },\n    getStatusRecipients: function getStatusRecipients(status) {\n      if (status == 'sign') {\n        return \"Needs to Sign\";\n      } else if (status == 'signer') {\n        return \"In personal signer\";\n      } else if (status == 'copy') {\n        return \"Receives a Copy\";\n      }\n    },\n    shareTemplate: function shareTemplate() {},\n    openShareModal: function openShareModal(item) {\n      this.selected_template = item;\n      this.$refs['share-modal'].show();\n    },\n    clickHeaderCheckbox: function clickHeaderCheckbox($event) {\n      var _this3 = this;\n\n      this.selected_items = [];\n      this.selected_id_items = [];\n      this.doc_list.forEach(function (item, index) {\n        item.selected = $event;\n\n        if ($event) {\n          _this3.selected_items.push(index);\n\n          _this3.selected_id_items.push(item.id);\n        }\n      });\n    },\n    clickCheckBox: function clickCheckBox($event, index, id) {\n      var pos = this.selected_items.indexOf(index);\n\n      if ($event) {\n        if (pos < 0) {\n          this.selected_items.push(index);\n          this.selected_id_items.push(id);\n        }\n      } else {\n        if (pos >= 0) {\n          this.selected_items.splice(pos, 1);\n          this.selected_id_items.splice(pos, 1);\n        }\n      }\n\n      if (this.selected_items.length > 0) {\n        if (this.selected_items.length == this.doc_list.length) {\n          this.header_checkbox = true;\n          this.indeterminate = false;\n        } else {\n          this.indeterminate = true;\n        }\n      } else {\n        this.indeterminate = false;\n        this.header_checkbox = false;\n      }\n    },\n    onClick: function onClick(event, data) {\n      console.log(data);\n    },\n    getFileType: function getFileType(fileName) {\n      return \"img/icons/\" + fileName.split(\".\").pop() + \".svg\";\n    },\n    changePeriod: function changePeriod(e) {\n      this.period = e;\n      this.getPostData();\n    },\n    changeProgressStatus: function changeProgressStatus(e) {\n      this.progress_status = e;\n      this.getPostData();\n    },\n    deleteDocs: function deleteDocs() {\n      var _this4 = this;\n\n      store.dispatch(REMOVE_DOCUMENT_DETAIL_REQUEST, {\n        document_id: this.selected_id_items\n      }).then(function (res) {\n        res && res.status && _this4.getPostData();\n        _this4.selected_items = [];\n        _this4.header_checkbox = false;\n        _this4.indeterminate = false;\n      }).catch(function (err) {\n        console.log('err---------', err);\n      });\n    }\n  }\n};",{"version":3,"sources":["DocumentList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app flex-row\">\n    <div class=\"w-100 document-list\">\n      <div class=\"action-header\">\n        <h1>{{ $t('payment.document.title') }}</h1>\n        <div class=\"action-search-field\">\n          <UserSelect\n            v-bind:value=\"progress_status\"\n            v-bind:items=\"['Status', 'All', 'Completed', 'Waiting', 'Declined', 'Voided']\"\n            @changeValue=\"changeProgressStatus\"\n            class=\"mb-0 mx-1 mobile-style\"\n          />\n          <UserSelect\n            v-bind:value=\"period\"\n            v-bind:items=\"['Date', 'Last 24 Hours', 'Last Week', 'Last 30 Days', 'Last 6 Months', 'Custom']\"\n            @changeValue=\"changePeriod\"\n            class=\"mb-0 mx-1 mobile-style\"\n          />\n          <b-input-group class=\"min-width-378px ml-1\">\n            <b-form-input \n            placeholder=\"Type here to search...\"\n            name=\"search\"\n            v-model=\"search\"\n            @input=\"filterDocuments\"\n            ></b-form-input>\n            <b-input-group-prepend class=\"mr-0\">\n              <b-input-group-text class=\"h-auto\">\n                <i class=\"fa fa-search\"></i>\n              </b-input-group-text>\n            </b-input-group-prepend>\n          </b-input-group>\n        </div>\n      </div>\n      <hr class=\"mb-4\" />\n      <div class=\"actions-table\">\n        <div class=\"table-header\">\n          <div class=\"d-flex align-items-center\">\n            <b-form-checkbox v-on:change=\"clickHeaderCheckbox($event)\" v-model=\"header_checkbox\" :indeterminate.sync=\"indeterminate\"></b-form-checkbox>\n            <template v-if=\"selected_items.length>0\">\n              <span>{{selected_items.length}} {{ $t('payment.document.table.selected') }}</span>\n              <b-button variant=\"outline-primary\" class=\"mx-3\" @click=\"deleteDocs\">{{ $t('payment.document.table.delete') }}</b-button>\n            </template>\n            <div class=\"col-basic-info comments d-mobile-none\">{{ $t('payment.document.table.document') }}</div>\n          </div>\n          <div class=\"d-flex align-items-center d-mobile-none\">\n            <div class=\"col-status comments\">{{ $t('payment.document.table.status') }}</div>\n            <div class=\"col-last-change comments\">{{ $t('payment.document.table.change') }}</div>\n            <div class=\"col-action comments\">{{ $t('payment.document.table.action') }}</div>\n          </div>\n        </div>\n        <div class=\"table-body\">\n          <div v-if=\"doc_list.length == 0\" class=\"table-row content-card\">\n            <p style=\"text-align: center;padding: 15px;font-size: 16px;\"> Data not found </p>\n          </div>\n          <div v-else class=\"table-row content-card\" v-for=\"(item, index) in doc_list\" :key=\"index\" @contextmenu.prevent=\"$refs.menu.open($event, {item: item})\">\n            <div class=\"row-content\">\n              <div class=\"d-flex align-items-center\" v-bind:style=\"item.status == 'Voided'?{opacity: 0.4}:null\">\n                <b-form-checkbox v-on:change=\"clickCheckBox($event, index, item.id)\" v-model=\"item.selected\"></b-form-checkbox>\n                <div class=\"col-basic-info\">\n                  <!-- <img :src=\"getFileType(item.title)\" class=\"doc-icon\" /> -->\n                  <div class=\"ml-3\">\n                    <div class=\"doc-name\">{{item.title}}</div>\n                    <div class=\"senders comments\">\n                      {{item.description}}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"d-flex align-items-center\">\n                <div class=\"col-status\">\n                  <div :class=\"getStyle(item.status)\">{{item.status}}</div>\n                </div>\n                <div class=\"col-last-change comments\">\n                  <div class=\"date\">{{ item.date | dateParse('YYYY-MM-DD HH:mm:ss') | dateFormat('DD.MM.YYYY') }}</div>\n                  <div class=\"comments\">{{ item.date | dateParse('YYYY-MM-DD HH:mm:ss') | dateFormat('HH:mm:ss a') }}</div>\n                </div>\n                <div class=\"col-action comments collapsed-header\" v-b-toggle=\"'collapse'+index.toString()\">\n                  <span class=\"collapsed-icon\"><i class=\"fa fa-caret-down \" ></i></span>\n                </div>\n              </div>\n            </div>\n            <b-collapse :id=\"'collapse'+index.toString()\" class=\"row-body\">\n              <div class=\"wrap-content\" v-for=\"(recip, index) in item.recipients\" :key=\"index\">\n                <div class=\"row-detail add-margin-left\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"col-basic-info remove-margin-left\">\n                      <img :src=\"recip.avatar\" style=\"width: 33px; height: 33px; border-radius: 50%\" />\n                      <div class=\"ml-3\">\n                        <div class=\"user-name\">{{recip.name}}</div>\n                        <div class=\"comments\">Sign status: {{getStatusRecipients(recip.action)}}</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"col-status\">\n                      <div :class=\"getStyleRecipients(recip.status)\">{{recip.status}}</div>\n                    </div>\n                    <div class=\"col-last-change\">\n                      <div class=\"date\">{{ recip.date | dateParse('YYYY-MM-DD HH:mm:ss') | dateFormat('DD.MM.YYYY') }}</div>\n                      <div class=\"comments\">{{ recip.date | dateParse('YYYY-MM-DD HH:mm:ss') | dateFormat('HH:mm:ss a') }}</div>\n                    </div>\n                    <div class=\"col-action comments\"></div>\n                  </div>\n                </div>\n              </div>\n            </b-collapse>\n          </div>\n          \n        </div>\n      </div>\n      <div class=\"d-flex justify-content-between align-items-center flex-wrap\">\n        <div class=\"d-flex justify-content-between align-items-center flex-wrap\">\n          <span class=\"comments mr-3\">Per page</span>\n          <div>\n            <span class=\"mr-3 clickable-icon\" v-for=\"(item, index) in pages\" :key=\"index\" \n              v-bind:class=\"item == items_per_page?'selected':'comments'\"\n              v-on:click =\"items_per_page = item\"\n            >\n              {{item}}\n            </span>\n          </div>\n        </div>\n\n        <b-pagination align=\"right\" :total-rows=\"totalPage\" v-model=\"currentPage\" :per-page=\"items_per_page\" @input=\"getPostData(currentPage)\"></b-pagination>\n      </div>\n    </div>\n    <b-modal id=\"share-modal\" ref=\"share-modal\"\n       hide-footer centered size=\"lg\">\n      <div class=\"share-modal\" v-if=\"selected_template\">\n        <div class=\"title\">Do you want to share the XXX template with other users?</div>\n        <b-form-group>\n          <b-input-group>\n            <b-input-group-prepend>\n              <b-input-group-text>\n                <!-- <i class=\"fa fa-lock\"></i> -->\n                <UserIcon icon=\"file_name.svg\" class=\"mr-2\"/>\n              </b-input-group-text>\n            </b-input-group-prepend>\n            <b-form-input\n              type=\"text\"\n              placeholder=\"Input file name\"\n              v-model=\"selected_template.fileName\"\n            ></b-form-input>\n          </b-input-group>\n        </b-form-group>\n        <div class=\"doc-container mb-2\">\n          <div class=\"doc-tag\" v-for=\"(item, index) in tags\" :key=\"index\">\n            {{item}} <i class=\"fa fa-close ml-1 clickable-icon\" v-on:click=\"tags.splice(index,1);\"/>\n          </div>\n        </div>\n        \n        <b-form-group>\n          <b-input-group>\n            <b-input-group-prepend>\n              <b-input-group-text>\n                <i class=\"fa fa-tag\"/>\n              </b-input-group-text>\n            </b-input-group-prepend>\n            <b-form-input\n              type=\"text\"\n              placeholder=\"Input Tag name and click 'Enter'\"\n              v-model=\"tag_name\"\n              v-on:keyup.enter=\"tags.push(tag_name); tag_name='';\"\n            ></b-form-input>\n          </b-input-group>\n        </b-form-group>\n        <div class=\"d-flex flex-wrap mb-4\">\n          <div class=\"proposed-tag\" v-for=\"(item, index) in proposed_tag\" :key=\"index\">\n            {{item}}\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <button type=\"submit\" class=\"btn btn-primary\" v-on:click=\"shareTemplate()\">Share this template</button>\n        </div>\n      </div>\n    </b-modal>\n    <vue-context ref=\"menu\" class=\"context-menu\">\n      <template slot-scope=\"child\">\n        <li><a href=\"#\" @click.prevent=\"onClick($event, child.data)\"><i class=\"fa fa-pencil mr-2 clickable-icon\"/>Sign</a></li>\n        <li><a href=\"#\" @click.prevent=\"onClick($event, child.data)\"><i class=\"fa fa-copy mr-2 clickable-icon\"/>Create a copy</a></li>\n        <li><a href=\"#\" @click.prevent=\"openShareModal(child.data)\"> <i class=\"fa fa-download mr-2 clickable-icon\"/>Save as template</a></li>\n        <li><a href=\"#\" @click.prevent=\"onClick($event, child.data)\"><i class=\"fa fa-clock-o mr-2 clickable-icon\"/>History</a></li>\n        <li><a href=\"#\" @click.prevent=\"onClick($event, child.data)\"><i class=\"fa fa-file-excel-o mr-2 clickable-icon\"/>Export as CSV</a></li>\n        <li><a href=\"#\" @click.prevent=\"onClick($event, child.data)\"><i class=\"fa fa-trash mr-2 clickable-icon\"/>Delete</a></li>\n      </template>\n    </vue-context>\n  </div>\n</template>\n\n<script>\nimport UserIcon from \"../../components/UserIcon\";\nimport UserSelect from \"../../components/UserSelect\";\nimport { VueContext } from 'vue-context';\nimport store from '../../store/store'\nimport { mapGetters } from \"vuex\";\nimport {\n  GET_LIST_DOCUMENTS_REQUEST,\n  REMOVE_DOCUMENT_DETAIL_REQUEST\n} from \"../../store/modules/document\";\n\nexport default {\n  name: \"DocumentList\",\n  components: {\n    UserIcon,\n    UserSelect,\n    VueContext\n  },\n  data() {\n    return {\n      header_checkbox: false,\n      indeterminate: false,\n      selected_items: [],\n      selected_id_items: [],\n      items_per_page: 10,\n      pages: [10, 25, 50, 100],\n      tag_name: \"\",\n      selected_template: null,\n      tags: [\"Inquiry\", \"Report\", \"Tag #3\", \"Tag #4\", \"Tag #5\", \"Tag 6\", \"Report\", \"Tag #3\", \"Tag #4\"],\n      proposed_tag: [\"Proposed tag\", \"Example proposed tag\", \"Proposed tag\"],\n      doc_list: [],\n      doc_list_search: [],\n      currentPage: 1,\n      totalPage: null,\n      period: \"Date\",\n      progress_status: \"Status\",\n      actions: [\n        {\n          setted: false,\n          fileName: \"Continuous Improvement.pdf\"\n        }\n      ],\n      search: ''\n    };\n  },\n  created(){\n    this.getPostData()\n  },\n  mounted() {\n  },\n  filters: {\n    date: function (date) {\n      return moment(date).format('DD.MM.YYYY');\n    },\n    time: function (date) {\n      return moment(date).format('h:mm a');\n    },\n    moment: function (date) {\n      return moment(date).format('MMMM Do YYYY, h:mm:ss a');\n    }\n  },\n  computed: {\n    ...mapGetters(['getListDocs'])\n  },\n  methods: {\n    filterDocuments() {\n      // this.filteredList()\n      this.getPostData()\n      this.totalPage = this.doc_list.length\n    },\n    filteredList() {\n      let vm = this;\n      let doc_list_search =  this.doc_list_search\n      if(this.search !== ''){\n        this.doc_list = doc_list_search.filter(item => item.title.toLowerCase().indexOf(vm.search.toLowerCase()) > -1)\n      }else{\n        this.doc_list = this.doc_list_search\n      }\n    },\n    getPostData() {\n      store.dispatch(GET_LIST_DOCUMENTS_REQUEST, {per_page: this.items_per_page, page: this.currentPage, date: this.period, status: this.progress_status, search: this.search})\n      .then( res => {\n        this.doc_list = this.convertListDocs(this.getListDocs);\n        this.doc_list_search = this.convertListDocs(this.getListDocs);\n      })\n      .catch( err => {\n        console.log('err---------', err)\n      });\n    },\n    convertListDocs(list){\n      this.totalPage = list.total;\n      let data = {};\n      const list_docs = list.data.map((value, key) => {\n        this.convertDescription(value.recipients)\n        return {...data, id: value.document_id, selected: false, title: value.name, status: value.status, description: this.convertDescription(value.recipients), recipients: this.convertRecipients(value.recipients), date: value.updated_at}\n      })\n      return list_docs.sort(function (a, b) {\n        return new Date(b.date) - new Date(a.date);\n      });\n      // this.doc_list = list_docs.sort(function (a, b) {\n      //   return new Date(b.date) - new Date(a.date);\n      // });\n    },\n    convertRecipients(list){\n      let data = {};\n      const list_docs = list.map((value, key) => {\n        return {...data, name: value.name, status: value.status == 0 ? 'Waiting to sign' : 'Completed', action: value.action, avatar: value.user && value.user.avatar ? value.user.avatar : 'img/avatars/default.png', date: value.updated_at}\n      })\n      return list_docs;\n    },\n    convertDescription(list){\n      const name = []; \n      list.map((value, key) => {\n        name.push(value.name);\n      })\n      return name.join(', ');\n    },\n    filterDocs(list, value)\n    {\n      const data = list.filter( v => {\n        return v.document_id === value;\n      })\n    },\n    removeDuplicates(originalArray, prop) {\n      var newArray = [];\n      var lookupObject  = {};\n\n      for(var i in originalArray) {\n        lookupObject[originalArray[i][prop]] = originalArray[i];\n      }\n\n      for(i in lookupObject) {\n         newArray.push(lookupObject[i]);\n      }\n      return newArray;\n    },\n    getStyle(status){\n      if(status == 'completed') {\n        return \"status completed\"\n      } else if(status == 'waiting') {\n        return \"status waiting\"\n      } else if(status == 'Rejected') {\n        return \"status rejected\"\n      } else if(status == 'Voided') {\n        return \"status voided\"\n      } \n      return \"status completed\";\n    },\n    getStyleRecipients(status){\n      if(status == 'Completed') {\n        return \"status completed\"\n      } else if(status == 'Waiting to sign') {\n        return \"status waiting\"\n      }\n      return \"status completed\";\n    },\n    getStatusRecipients(status){\n      if(status == 'sign') {\n        return \"Needs to Sign\"\n      } else if(status == 'signer') {\n        return \"In personal signer\"\n      } else if(status == 'copy') {\n        return \"Receives a Copy\"\n      }\n    },\n    shareTemplate() {\n\n    },\n    openShareModal(item) {\n      this.selected_template = item;\n      this.$refs['share-modal'].show();\n    },\n    clickHeaderCheckbox($event) {\n      this.selected_items = [];\n      this.selected_id_items = [];\n      this.doc_list.forEach((item, index) => {\n        item.selected = $event;\n        if($event) {\n          this.selected_items.push(index);\n          this.selected_id_items.push(item.id);\n        } \n      });\n    },\n    clickCheckBox($event, index, id) {\n      const pos = this.selected_items.indexOf(index);\n      if($event) {\n        if(pos<0) {\n          this.selected_items.push(index);\n          this.selected_id_items.push(id);\n        } \n      } else {\n        if(pos>=0){\n          this.selected_items.splice(pos, 1);\n          this.selected_id_items.splice(pos, 1);\n        }\n      }\n      if(this.selected_items.length>0) {\n        \n        if(this.selected_items.length == this.doc_list.length){\n          this.header_checkbox = true;\n          this.indeterminate = false;\n        } else {\n          this.indeterminate = true;\n        }\n      } else {\n        this.indeterminate = false;\n        this.header_checkbox = false;\n      }\n    },\n    onClick(event, data) {\n      console.log(data);\n    },\n    getFileType(fileName) {\n      return \"img/icons/\" + fileName.split(\".\").pop() + \".svg\";\n    },\n    changePeriod(e) {\n      this.period = e;\n      this.getPostData();\n    },\n    changeProgressStatus(e) {\n      this.progress_status = e;\n      this.getPostData();\n    },\n    deleteDocs() {\n      store.dispatch(REMOVE_DOCUMENT_DETAIL_REQUEST, {document_id: this.selected_id_items})\n      .then( res => {\n        res && res.status && this.getPostData();\n        this.selected_items = [];\n        this.header_checkbox = false;\n        this.indeterminate = false;\n        \n      })\n      .catch( err => {\n        console.log('err---------', err)\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./DocumentList.scss\";\n</style>\n\n"],"sourceRoot":"src/views/payment"}]}