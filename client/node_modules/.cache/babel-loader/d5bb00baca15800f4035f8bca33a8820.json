{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/src/store/modules/signation.js","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/store/modules/signation.js","mtime":1573548265049},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find\";\n\nvar _actions, _mutations;\n\nimport JwtService from \"../../mixins/jwt.service\";\nimport { signation } from \"../../mixins/signation\";\nimport { SIGNATURE_CREATE, SIGNATURE_UPLOAD, SIGNATURE_GET, SIGNATURE_UPDATE, SIGNATURE_SOFTDELETE, SIGNATURE_DESTROY } from \"../actions.type\";\nimport { SET_SIGNATURE, UPDATE_SIGNATURE, SOFTDELETE_SIGNATURE, DESTROY_SIGNATURE } from \"../mutations.type\";\nvar state = {\n  signatures: []\n};\nvar getters = {\n  SIGNATURES: function SIGNATURES(state) {\n    return state.signatures;\n  },\n  getDefaultSignInitial: function getDefaultSignInitial(state) {\n    return state.signatures.find(function (sign) {\n      return sign.default === 1;\n    });\n  }\n};\nvar actions = (_actions = {}, _defineProperty(_actions, SIGNATURE_CREATE, function (context, signature) {\n  context.commit(UPDATE_SIGNATURE, signature);\n}), _defineProperty(_actions, SIGNATURE_UPLOAD, function (context, signature) {\n  context.commit(UPDATE_SIGNATURE, signature);\n}), _defineProperty(_actions, SIGNATURE_GET, function (context, signatures) {\n  context.commit(SET_SIGNATURE, signatures);\n}), _defineProperty(_actions, SIGNATURE_UPDATE, function (context, signature) {\n  context.commit(SET_SIGNATURE, signature);\n}), _defineProperty(_actions, SIGNATURE_SOFTDELETE, function (context, id) {\n  context.commit(SOFTDELETE_SIGNATURE, id);\n}), _defineProperty(_actions, SIGNATURE_DESTROY, function (context, id) {\n  context.commit(DESTROY_SIGNATURE, id);\n}), _actions);\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_SIGNATURE, function (state, payload) {\n  state.signatures = payload;\n}), _defineProperty(_mutations, UPDATE_SIGNATURE, function (state, payload) {\n  state.signatures.push(payload);\n}), _defineProperty(_mutations, SOFTDELETE_SIGNATURE, function (state, id) {\n  var index = state.signatures.findIndex(function (signature) {\n    return signature.id == id;\n  });\n  state.signatures.splice(index, 1);\n}), _defineProperty(_mutations, DESTROY_SIGNATURE, function (state, id) {// state.stamps = id\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/var/www/html/Jobs/DOAN-TT/client/src/store/modules/signation.js"],"names":["JwtService","signation","SIGNATURE_CREATE","SIGNATURE_UPLOAD","SIGNATURE_GET","SIGNATURE_UPDATE","SIGNATURE_SOFTDELETE","SIGNATURE_DESTROY","SET_SIGNATURE","UPDATE_SIGNATURE","SOFTDELETE_SIGNATURE","DESTROY_SIGNATURE","state","signatures","getters","SIGNATURES","getDefaultSignInitial","find","sign","default","actions","context","signature","commit","id","mutations","payload","push","index","findIndex","splice"],"mappings":";;;;;;AAAA,OAAOA,UAAP;AACA,SAASC,SAAT;AAEA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,gBAJF,EAKEC,oBALF,EAMEC,iBANF;AASA,SACEC,aADF,EAEEC,gBAFF,EAGEC,oBAHF,EAIEC,iBAJF;AAOA,IAAMC,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE;AADA,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,oBAAAH,KAAK;AAAA,WAAIA,KAAK,CAACC,UAAV;AAAA,GADH;AAEdG,EAAAA,qBAAqB,EAAE,+BAAAJ,KAAK,EAAI;AAC9B,WAAOA,KAAK,CAACC,UAAN,CAAiBI,IAAjB,CAAsB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,OAAL,KAAiB,CAArB;AAAA,KAA1B,CAAP;AACD;AAJa,CAAhB;AAOA,IAAMC,OAAO,6CACVlB,gBADU,EACS,UAACmB,OAAD,EAAUC,SAAV,EAAwB;AAC1CD,EAAAA,OAAO,CAACE,MAAR,CAAed,gBAAf,EAAiCa,SAAjC;AACD,CAHU,6BAKVnB,gBALU,EAKS,UAACkB,OAAD,EAAUC,SAAV,EAAwB;AAC1CD,EAAAA,OAAO,CAACE,MAAR,CAAed,gBAAf,EAAiCa,SAAjC;AACD,CAPU,6BASVlB,aATU,EASM,UAACiB,OAAD,EAAUR,UAAV,EAAyB;AACxCQ,EAAAA,OAAO,CAACE,MAAR,CAAef,aAAf,EAA8BK,UAA9B;AACD,CAXU,6BAaVR,gBAbU,EAaS,UAACgB,OAAD,EAAUC,SAAV,EAAwB;AAC1CD,EAAAA,OAAO,CAACE,MAAR,CAAef,aAAf,EAA8Bc,SAA9B;AACD,CAfU,6BAiBVhB,oBAjBU,EAiBa,UAACe,OAAD,EAAUG,EAAV,EAAiB;AACvCH,EAAAA,OAAO,CAACE,MAAR,CAAeb,oBAAf,EAAqCc,EAArC;AACD,CAnBU,6BAqBVjB,iBArBU,EAqBU,UAACc,OAAD,EAAUG,EAAV,EAAiB;AACpCH,EAAAA,OAAO,CAACE,MAAR,CAAeZ,iBAAf,EAAkCa,EAAlC;AACD,CAvBU,YAAb;AA0BA,IAAMC,SAAS,iDACZjB,aADY,YACGI,KADH,EACUc,OADV,EACmB;AAC9Bd,EAAAA,KAAK,CAACC,UAAN,GAAmBa,OAAnB;AACD,CAHY,+BAKZjB,gBALY,YAKMG,KALN,EAKac,OALb,EAKsB;AACjCd,EAAAA,KAAK,CAACC,UAAN,CAAiBc,IAAjB,CAAsBD,OAAtB;AACD,CAPY,+BAUZhB,oBAVY,YAUUE,KAVV,EAUiBY,EAVjB,EAUqB;AAChC,MAAII,KAAK,GAAGhB,KAAK,CAACC,UAAN,CAAiBgB,SAAjB,CAA2B,UAAAP,SAAS;AAAA,WAAIA,SAAS,CAACE,EAAV,IAAgBA,EAApB;AAAA,GAApC,CAAZ;AACAZ,EAAAA,KAAK,CAACC,UAAN,CAAiBiB,MAAjB,CAAwBF,KAAxB,EAA+B,CAA/B;AACD,CAbY,+BAgBZjB,iBAhBY,YAgBOC,KAhBP,EAgBcY,EAhBd,EAgBkB,CAC7B;AACD,CAlBY,cAAf;AAqBA,eAAe;AACbZ,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,OAAO,EAAPA,OAFa;AAGbM,EAAAA,OAAO,EAAPA,OAHa;AAIbK,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import JwtService from '../../mixins/jwt.service'\nimport { signation } from '../../mixins/signation'\n\nimport {\n  SIGNATURE_CREATE,\n  SIGNATURE_UPLOAD,\n  SIGNATURE_GET,\n  SIGNATURE_UPDATE,\n  SIGNATURE_SOFTDELETE,\n  SIGNATURE_DESTROY\n} from '../actions.type'\n\nimport {\n  SET_SIGNATURE,\n  UPDATE_SIGNATURE,\n  SOFTDELETE_SIGNATURE,\n  DESTROY_SIGNATURE\n} from '../mutations.type'\n\nconst state = {\n  signatures: []\n}\n\nconst getters = {\n  SIGNATURES: state => state.signatures,\n  getDefaultSignInitial: state => {\n    return state.signatures.find(sign => sign.default === 1)\n  }\n}\n\nconst actions = {\n  [SIGNATURE_CREATE]: (context, signature) => {\n    context.commit(UPDATE_SIGNATURE, signature)\n  },\n\n  [SIGNATURE_UPLOAD]: (context, signature) => {\n    context.commit(UPDATE_SIGNATURE, signature)\n  },\n\n  [SIGNATURE_GET]: (context, signatures) => {\n    context.commit(SET_SIGNATURE, signatures)\n  },\n  \n  [SIGNATURE_UPDATE]: (context, signature) => {    \n    context.commit(SET_SIGNATURE, signature)\n  },\n\n  [SIGNATURE_SOFTDELETE]: (context, id) => {\n    context.commit(SOFTDELETE_SIGNATURE, id)\n  }, \n\n  [SIGNATURE_DESTROY]: (context, id) => {\n    context.commit(DESTROY_SIGNATURE, id)\n  }\n}\n\nconst mutations = {\n  [SET_SIGNATURE](state, payload) {\n    state.signatures = payload\n  },\n\n  [UPDATE_SIGNATURE](state, payload) {\n    state.signatures.push(payload)\n  },\n\n  /** NOT WORKING YET (SOFIAN) */\n  [SOFTDELETE_SIGNATURE](state, id) {\n    let index = state.signatures.findIndex(signature => signature.id == id)\n    state.signatures.splice(index, 1)\n  },\n\n  /** NOT WORKING YET (SOFIAN) */\n  [DESTROY_SIGNATURE](state, id) {\n    // state.stamps = id\n  }\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}"]}]}