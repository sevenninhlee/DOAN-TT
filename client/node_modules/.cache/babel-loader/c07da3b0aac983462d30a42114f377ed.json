{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/src/utils/svgstyle.js","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/utils/svgstyle.js","mtime":1573548269869},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577}],"contextDependencies":[],"result":["var fonts = {\n  en: ['delafield', 'badhead', 'banthers', 'connoisseurs', 'cutepunk', 'elrotex', 'greatvibes', 'klsweetpineapple', 'mighttype', 'popsregular', 'somethingwild'],\n  kr: ['kimnamyun', 'eunyoung', 'goyang', 'flowerroad', 'inklipquid', 'otenjoy', 'dovemayo', 'sdmisaeng', 'hsgyoul', 'jeju'],\n  jp: ['asobi', 'crayon', 'riipop', 'riit', 'sjitsp', 'geneilate', 'geneiantique']\n};\nvar svgstyles = {\n  methods: {\n    fontface: function fontface() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var external = function external() {\n          return _this.componentLoader();\n        };\n\n        external().then(function (_ref) {\n          var fontname = _ref.fontname;\n          resolve(fontname.face());\n        }).catch(function (error) {\n          reject(\"Error: \".concat(error));\n        });\n      });\n    }\n  },\n  computed: {\n    /** Dynamic Loader */\n    componentLoader: function componentLoader() {\n      var file, folder;\n\n      if (this.getLangShort == 'gb') {\n        folder = 'en';\n        file = \"en-\".concat(fonts.en[this.getSelectedIndex]);\n      } else if (this.getLangShort == 'kr') {\n        folder = 'kr';\n        file = \"kr-\".concat(fonts.kr[this.getSelectedIndex]);\n      } else {\n        folder = 'jp';\n        file = \"jp-\".concat(fonts.jp[this.getSelectedIndex]);\n      }\n\n      return function () {\n        return import(\"./\".concat(folder, \"/\").concat(file, \".js\"));\n      };\n    },\n    getSelectedIndex: function getSelectedIndex() {\n      return this.config_val.navtab_selected;\n    },\n    getLangShort: function getLangShort() {\n      return this.config_val.lang_short;\n    }\n  }\n};\nexport { svgstyles };",{"version":3,"sources":["/var/www/html/Jobs/DOAN-TT/client/src/utils/svgstyle.js"],"names":["fonts","en","kr","jp","svgstyles","methods","fontface","Promise","resolve","reject","external","componentLoader","then","fontname","face","catch","error","computed","file","folder","getLangShort","getSelectedIndex","config_val","navtab_selected","lang_short"],"mappings":"AAAA,IAAMA,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE,CAAC,WAAD,EAAc,SAAd,EAAyB,UAAzB,EAAqC,cAArC,EAAqD,UAArD,EAAiE,SAAjE,EAA4E,YAA5E,EAA0F,kBAA1F,EAA8G,WAA9G,EAA2H,aAA3H,EAA0I,eAA1I,CADQ;AAEZC,EAAAA,EAAE,EAAE,CAAC,WAAD,EAAc,UAAd,EAA0B,QAA1B,EAAoC,YAApC,EAAkD,YAAlD,EAAgE,SAAhE,EAA2E,UAA3E,EAAuF,WAAvF,EAAoG,SAApG,EAA+G,MAA/G,CAFQ;AAGZC,EAAAA,EAAE,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,MAA9B,EAAsC,QAAtC,EAAgD,WAAhD,EAA6D,cAA7D;AAHQ,CAAd;AAMA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,oBAAW;AAAA;;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,iBAAM,KAAI,CAACC,eAAL,EAAN;AAAA,SAAjB;;AAEAD,QAAAA,QAAQ,GAAGE,IAAX,CAAgB,gBAAgB;AAAA,cAAdC,QAAc,QAAdA,QAAc;AAC9BL,UAAAA,OAAO,CAACK,QAAQ,CAACC,IAAT,EAAD,CAAP;AACD,SAFD,EAGCC,KAHD,CAGO,UAAAC,KAAK,EAAI;AACdP,UAAAA,MAAM,kBAAWO,KAAX,EAAN;AACD,SALD;AAMD,OATM,CAAP;AAUD;AAZM,GADO;AAehBC,EAAAA,QAAQ,EAAE;AACR;AACAN,IAAAA,eAFQ,6BAEW;AACjB,UAAIO,IAAJ,EAAUC,MAAV;;AACA,UAAI,KAAKC,YAAL,IAAqB,IAAzB,EAA+B;AAC7BD,QAAAA,MAAM,GAAG,IAAT;AACAD,QAAAA,IAAI,gBAASlB,KAAK,CAACC,EAAN,CAAS,KAAKoB,gBAAd,CAAT,CAAJ;AACD,OAHD,MAIK,IAAI,KAAKD,YAAL,IAAqB,IAAzB,EAA+B;AAClCD,QAAAA,MAAM,GAAG,IAAT;AACAD,QAAAA,IAAI,gBAASlB,KAAK,CAACE,EAAN,CAAS,KAAKmB,gBAAd,CAAT,CAAJ;AACD,OAHI,MAIA;AACHF,QAAAA,MAAM,GAAG,IAAT;AACAD,QAAAA,IAAI,gBAASlB,KAAK,CAACG,EAAN,CAAS,KAAKkB,gBAAd,CAAT,CAAJ;AACD;;AACD,aAAO;AAAA,eAAM,mBAAYF,MAAZ,cAAsBD,IAAtB,SAAN;AAAA,OAAP;AACD,KAjBO;AAkBRG,IAAAA,gBAlBQ,8BAkBY;AAClB,aAAO,KAAKC,UAAL,CAAgBC,eAAvB;AACD,KApBO;AAqBRH,IAAAA,YArBQ,0BAqBQ;AACd,aAAO,KAAKE,UAAL,CAAgBE,UAAvB;AACD;AAvBO;AAfM,CAAlB;AA0CA,SAASpB,SAAT","sourcesContent":["const fonts = {\n  en: ['delafield', 'badhead', 'banthers', 'connoisseurs', 'cutepunk', 'elrotex', 'greatvibes', 'klsweetpineapple', 'mighttype', 'popsregular', 'somethingwild'],\n  kr: ['kimnamyun', 'eunyoung', 'goyang', 'flowerroad', 'inklipquid', 'otenjoy', 'dovemayo', 'sdmisaeng', 'hsgyoul', 'jeju'],\n  jp: ['asobi', 'crayon', 'riipop', 'riit', 'sjitsp', 'geneilate', 'geneiantique']\n}\n\nconst svgstyles = {\n  methods: {\n    fontface: function() {\n      return new Promise((resolve, reject) => {\n        const external = () => this.componentLoader()\n        \n        external().then(({fontname}) => {\n          resolve(fontname.face())\n        })\n        .catch(error => {\n          reject(`Error: ${error}`)\n        })\n      })\n    }\n  },\n  computed: {\n    /** Dynamic Loader */\n    componentLoader () {\n      let file, folder\n      if (this.getLangShort == 'gb') {\n        folder = 'en'\n        file = `en-${fonts.en[this.getSelectedIndex]}`\n      }\n      else if (this.getLangShort == 'kr') {\n        folder = 'kr'\n        file = `kr-${fonts.kr[this.getSelectedIndex]}`\n      }\n      else {\n        folder = 'jp'\n        file = `jp-${fonts.jp[this.getSelectedIndex]}`\n      }\n      return () => import(`./${folder}/${file}.js`)\n    },\n    getSelectedIndex () {\n      return this.config_val.navtab_selected\n    },\n    getLangShort () {\n      return this.config_val.lang_short\n    }\n  }\n}\n\nexport { svgstyles };"]}]}