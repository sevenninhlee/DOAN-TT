{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/signaturestamp/SignatureInitial.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/signaturestamp/SignatureInitial.vue","mtime":1573548269980},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.string.fontsize\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport store from \"../../store/store\";\nimport { mapGetters, mapState } from 'vuex';\nimport { getOutSide } from \"../../utils/http\";\nimport JwtService from \"../../mixins/jwt.service\";\nimport { signation } from \"../../mixins/signation\";\nimport { svgstyles } from \"../../utils/svgstyle\";\nimport { SIGNATURE_CREATE, SIGNATURE_UPLOAD, SIGNATURE_GET, SIGNATURE_UPDATE, SIGNATURE_SOFTDELETE, SIGNATURE_DESTROY, AUTH_LOADING } from \"../../store/actions.type\";\nimport UserSelect from \"../../components/UserSelect\";\nimport DrawingBoard from \"../../components/DrawingBoard\";\nimport ImageUpload from \"../../components/common/ImageUpload\";\nexport default {\n  name: 'SignatureInitial',\n  components: {\n    UserSelect: UserSelect,\n    DrawingBoard: DrawingBoard,\n    ImageUpload: ImageUpload,\n    GenerateSvg: function GenerateSvg() {\n      return import(\"../../components/common/GenerateSvg\");\n    }\n  },\n  mixins: [signation, svgstyles],\n  data: function data() {\n    return {\n      user_selected_sign: 0,\n      user_sign: \"\",\n      form_data: {\n        signature_type: 'Choose',\n        initial: '',\n        signature_text: '',\n        font_face: '',\n        font_size: '',\n        language: 'English',\n        uploaded_url: ''\n      },\n      s_data: {\n        signature_type: 'Choose',\n        initial: '',\n        signature_text: '',\n        font_face: '',\n        font_size: '',\n        language: 'English',\n        uploaded_url: '',\n        initial_uploaded_url: ''\n      },\n      generate_data: {\n        signature_type: 'Choose',\n        initial: '',\n        text: '',\n        font_face: '',\n        font_size: '',\n        language: 'English',\n        uploaded_url: ''\n      },\n      generate_img: {\n        signature: '',\n        initial: ''\n      },\n      drawing_data: {\n        signature: {\n          name: 'signature',\n          drawing: '',\n          drawable: false\n        },\n        initial: {\n          name: 'initial',\n          drawing: '',\n          drawable: false\n        }\n      },\n      signature_file: [],\n      initial_file: [],\n      uploadSignComponent: [],\n      uploadInitialComponent: [],\n      validator: {},\n      config_val: {\n        navtab_index: 'Choose',\n        navtab_selected: '0',\n        lang_short: 'gb',\n        generated_show: false,\n        languages: {\n          /** English */\n          English: [\"Mrs Saint Delafield\", \"Badhead Typeface\", \"Banthers\", \"Connoisseurs\", \"Cutepunk_Regular\", \"Elrotex Basic\", \"GreatVibes-Regular\", \"KLSweetPineappleRegular\", \"Mightype Script\", \"pops_08_REGULAR\", \"somethingwild-Regular\"],\n\n          /** Korean */\n          Korean: [\"KimNamyun\", \"KCC-eunyoung\", \"Goyang\", \"SangSangFlowerRoad\", \"InkLipquid\", \"OTEnjoystoriesBA\", \"Dovemayo-Medium\", \"SDMiSaeng\", \"HSGyoulnoonkot\", \"Jeju Hallasan\"],\n\n          /** Japanese */\n          Japanese: [\"AsobiMemogaki-Regular-1-01\", \"crayon_1-1\", \"RiiPopkkR\", \"RiiT_F\", \"sjis_sp_setofont\", \"GenEiLateGoN_v2\", \"GenEiAntiquePv5-M\"]\n        },\n        fontsize: {\n          // English\n          English: [\"26\", \"29\", \"19\", \"29\", \"29\", \"14\", \"21\", \"29\", \"19\", \"18\", \"29\"],\n          // Korean\n          Korean: [\"27\", \"23\", \"21\", \"26\", \"23\", \"23\", \"16\", \"24\", \"17\", \"16\"],\n          // Korean: [\"27\", \"35\", \"22\", \"38\", \"32\", \"36\", \"21\", \"34\", \"19\", \"21\"],\n          // Japanese\n          Japanese: [\"24\", \"23\", \"21\", \"26\", \"23\", \"23\", \"20\"]\n        }\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['USER', 'SIGNATURES', 'loading', 'errors'])),\n  mounted: function mounted() {\n    store.dispatch(AUTH_LOADING, false);\n    var vm = this;\n    vm.getSignatures().then(function (response) {\n      store.dispatch(SIGNATURE_GET, response.data.data);\n    }).catch(function (errors) {\n      console.log(errors.response);\n    });\n    vm.form_data.signature_text = vm.USER.name;\n    vm.form_data.initial = vm.USER.first_name.substring(0, 1) + vm.USER.last_name.substring(0, 1);\n  },\n  methods: {\n    /** Create Signature */\n    onCreateSignInitial: function onCreateSignInitial() {\n      var _this = this;\n\n      var vm = this;\n      store.dispatch(AUTH_LOADING, true);\n      vm.fontface().then(function (response) {\n        /** Signature */\n        // append style in svg\n        var defs = vm.$refs[\"generatedSign\"][vm.config_val.navtab_selected].$refs[\"childSignSvg\"].children[\"2\"],\n            styles = document.createElementNS(\"http://www.w3.org/2000/svg\", \"style\"),\n            node = document.createTextNode(response);\n        defs.appendChild(styles);\n        styles.appendChild(node);\n        var svgNode = vm.$refs[\"generatedSign\"][vm.config_val.navtab_selected].$refs.childSignSvg,\n            sSign = new XMLSerializer().serializeToString(svgNode);\n\n        var pngBaseSign = _this.svgToPng(sSign, 812, 412, 0);\n        /** Initial */\n        // append style in svg\n\n\n        var defsIni = vm.$refs[\"generatedInitial\"][vm.config_val.navtab_selected].$refs[\"childSignSvg\"].children[\"2\"],\n            stylesIni = document.createElementNS(\"http://www.w3.org/2000/svg\", \"style\"),\n            nodeIni = document.createTextNode(response);\n        defsIni.appendChild(stylesIni);\n        stylesIni.appendChild(nodeIni);\n        var svgNodeIni = vm.$refs[\"generatedInitial\"][vm.config_val.navtab_selected].$refs.childSignSvg,\n            sInit = new XMLSerializer().serializeToString(svgNodeIni);\n\n        var pngBaseInit = _this.svgToPng(sInit, 412, 412, 0);\n\n        pngBaseSign.then(function (resultSign) {\n          pngBaseInit.then(function (resultInit) {\n            vm.s_data = {\n              signature_type: vm.config_val.navtab_index,\n              initial: vm.form_data.initial,\n              signature_text: vm.form_data.signature_text,\n              font_face: vm.config_val.languages[vm.form_data.language][vm.config_val.navtab_selected],\n              font_size: vm.config_val.fontsize[vm.form_data.language][vm.config_val.navtab_selected],\n              language: vm.form_data.language,\n              uploaded_url: resultSign,\n              initial_uploaded_url: resultInit\n            };\n            vm.createSignature(vm.s_data).then(function (response) {\n              store.dispatch(SIGNATURE_CREATE, response.data.data).then(function () {\n                vm.$toast.success({\n                  title: \"Signature and Initial Created\",\n                  message: \"User's signature and initial have created!\"\n                });\n                vm.$refs[\"create-signature-modal\"].hide();\n                store.dispatch(AUTH_LOADING, false);\n              });\n            });\n          });\n        });\n      }).catch(function (errors) {\n        store.dispatch(AUTH_LOADING, false);\n        console.log(errors);\n      });\n    },\n\n    /** Draw Signature & Initial */\n    onDrawSignInitial: function onDrawSignInitial() {\n      var vm = this;\n      var s_image = {\n        sign_image: vm.getDataURLSign(),\n        initial_image: vm.getDataURLInitial()\n      };\n      vm.uploadFiles(s_image);\n    },\n\n    /** Upload Signature & Initial */\n    toggleSignUpload: function toggleSignUpload(e) {\n      var _this2 = this;\n\n      if (!e) return;\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        return _this2.uploadSignatureComponent = e.target.result;\n      };\n\n      reader.readAsDataURL(e);\n    },\n    toggleInitialUpload: function toggleInitialUpload(e) {\n      var _this3 = this;\n\n      if (!e) return;\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        return _this3.uploadInitialComponent = e.target.result;\n      };\n\n      reader.readAsDataURL(e);\n    },\n    onUploadSignInitial: function onUploadSignInitial() {\n      var vm = this;\n      var s_image = {\n        sign_image: vm.uploadSignatureComponent,\n        initial_image: vm.uploadInitialComponent\n      };\n      vm.uploadFiles(s_image);\n    },\n    uploadFiles: function uploadFiles(s_image) {\n      var vm = this;\n      store.dispatch(AUTH_LOADING, true);\n      vm.uploadSignature(s_image).then(function (response) {\n        store.dispatch(SIGNATURE_UPLOAD, response.data.data).then(function () {\n          vm.$toast.success({\n            title: \"Signature and Initial Uploaded\",\n            message: \"User's signature and initial have uploaded!\"\n          });\n          vm.$refs[\"create-signature-modal\"].hide();\n          store.dispatch(AUTH_LOADING, false);\n          vm.drawing_data.signature.drawable = false;\n          vm.drawing_data.initial.drawable = false;\n        });\n      }).catch(function (errors) {\n        store.dispatch(AUTH_LOADING, false);\n        console.log(errors);\n      });\n    },\n\n    /** Show Signature Data */\n    onShowSignInitial: function onShowSignInitial(id) {},\n\n    /** Default Signature & Initial */\n    onDefaultSignInitial: function onDefaultSignInitial(id) {\n      // In progress\n      var vm = this;\n      store.dispatch(AUTH_LOADING, true);\n      vm.defaultSignature(id).then(function (response) {\n        store.dispatch(SIGNATURE_UPDATE, response.data.data).then(function () {\n          vm.$toast.success({\n            title: \"Signature and Initial Default\",\n            message: \"User's singature and initial have set to default!\"\n          });\n          store.dispatch(AUTH_LOADING, false);\n        });\n      }).catch(function (errors) {\n        store.dispatch(AUTH_LOADING, false);\n        console.log(errors);\n      });\n    },\n\n    /** Delete Signature */\n    onDeleteSignInitial: function onDeleteSignInitial(id) {\n      var vm = this;\n      store.dispatch(AUTH_LOADING, true);\n\n      if (confirm(\"Do you really want to delete?\")) {\n        vm.softDeleteSignature(id).then(function (response) {\n          store.dispatch(SIGNATURE_SOFTDELETE, id).then(function () {\n            vm.$toast.warn({\n              title: \"Signature and Initial Deleted\",\n              message: \"User's signature and initial have deleted!\"\n            });\n            store.dispatch(AUTH_LOADING, false);\n          });\n        }).catch(function (errors) {\n          store.dispatch(AUTH_LOADING, false);\n          console.log(errors);\n        });\n      }\n    },\n\n    /** Download Image */\n    onDownloadSignInitial: function onDownloadSignInitial(url) {\n      var vm = this,\n          imageURL = url,\n          canvas = document.createElement(\"canvas\"),\n          downloadedImg = new Image();\n      downloadedImg = new Image();\n      downloadedImg.crossOrigin = \"Anonymous\";\n\n      downloadedImg.onload = function () {\n        var context = canvas.getContext(\"2d\");\n        canvas.width = downloadedImg.width;\n        canvas.height = downloadedImg.height;\n        context.drawImage(downloadedImg, 0, 0);\n\n        try {\n          var dataURL = canvas.toDataURL(\"image/png\");\n          vm.downloadURI(dataURL, 'signature.png');\n        } catch (err) {\n          console.log(\"Error: \" + err);\n        }\n      };\n\n      downloadedImg.src = imageURL;\n    },\n    downloadURI: function downloadURI(uri, name) {\n      var link = document.createElement('a');\n      link.download = name;\n      link.href = uri;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n\n    /** Utils */\n\n    /**\n    * converts an svg string to base64 png using the domUrl\n    * @param {string} svgText the svgtext\n    * @param {number} [margin=0] the width of the border - the image size will be height+margin by width+margin\n    * @param {string} [fill] optionally backgrund canvas fill\n    * @return {Promise} a promise to the bas64 png image\n    */\n    svgToPng: function svgToPng(svgText, setWidth, setHeight, margin, fill) {\n      // convert an svg text to png using the browser\n      return new Promise(function (resolve, reject) {\n        try {\n          // can use the domUrl function from the browser\n          var domUrl = window.URL || window.webkitURL || window;\n\n          if (!domUrl) {\n            throw new Error(\"(browser doesnt support this)\");\n          } // figure out the height and width from svg text\n\n\n          var match = svgText.match(/height=\\\"(\\d+)/m);\n          var height = match && match[1] ? parseInt(match[1], 10) : 412;\n          var match = svgText.match(/width=\\\"(\\d+)/m);\n          var width = match && match[1] ? parseInt(match[1], 10) : 412;\n          margin = margin || 0;\n          width = parseInt(setWidth);\n          height = parseInt(setHeight); // it needs a namespace\n\n          if (!svgText.match(/xmlns=\\\"/mi)) {\n            svgText = svgText.replace('<svg ', '<svg xmlns=\"http://www.w3.org/2000/svg\" ');\n          } // create a canvas element to pass through\n\n\n          var canvas = document.createElement(\"canvas\");\n          canvas.width = width + margin * 2;\n          canvas.height = height + margin * 2;\n          var ctx = canvas.getContext(\"2d\"); // make a blob from the svg\n\n          var svg = new Blob([svgText], {\n            type: \"image/svg+xml;charset=utf-8\"\n          }); // create a dom object for that image\n\n          var url = domUrl.createObjectURL(svg); // create a new image to hold it the converted type\n\n          var img = new Image(); // when the image is loaded we can get it as base64 url\n\n          img.onload = function () {\n            // draw it to the canvas\n            ctx.drawImage(this, margin, margin); // if it needs some styling, we need a new canvas\n\n            if (fill) {\n              var styled = document.createElement(\"canvas\");\n              styled.width = canvas.width;\n              styled.height = canvas.height;\n              var styledCtx = styled.getContext(\"2d\");\n              styledCtx.save();\n              styledCtx.fillStyle = fill;\n              styledCtx.fillRect(0, 0, canvas.width, canvas.height);\n              styledCtx.strokeRect(0, 0, canvas.width, canvas.height);\n              styledCtx.restore();\n              styledCtx.drawImage(canvas, 0, 0);\n              canvas = styled;\n            } // we don't need the original any more\n\n\n            domUrl.revokeObjectURL(url); // now we can resolve the promise, passing the base64 url\n\n            resolve(canvas.toDataURL());\n          }; // load the image\n\n\n          img.src = url;\n        } catch (err) {\n          reject('failed to convert svg to png ' + err);\n        }\n      });\n    },\n    onSelectSignature: function onSelectSignature(index) {\n      this.config_val.navtab_selected = index;\n    },\n    getDataURLSign: function getDataURLSign() {\n      return this.$refs[\"drawboard-sign\"].getDataURL();\n    },\n    getDataURLInitial: function getDataURLInitial() {\n      return this.$refs[\"drawboard-initial\"].getDataURL();\n    },\n    getContainerWidth: function getContainerWidth(cn) {\n      return parseInt(this.$refs[cn].clientWidth) - 50;\n    },\n    getContainerHeight: function getContainerHeight(cn) {\n      return parseInt(this.$refs[cn].clientHeight) - 75;\n    },\n    onSyncLanguage: function onSyncLanguage(e) {\n      this.form_data.language = e;\n      this.config_val.lang_short = this.form_data.language == 'English' ? 'gb' : this.form_data.language == 'Korean' ? 'kr' : 'jp';\n    },\n    showSignInitialModal: function showSignInitialModal() {\n      if (!this.form_data.signature_text) {\n        this.form_data.signature_text = this.USER.name;\n        this.form_data.initial = this.USER.first_name.substring(0, 1) + this.USER.last_name.substring(0, 1);\n      }\n\n      this.$refs[\"create-signature-modal\"].show();\n    },\n    hideSignInitialModal: function hideSignInitialModal() {\n      this.clearSForm();\n      this.$refs[\"create-signature-modal\"].hide();\n    },\n    onChangeName: function onChangeName() {\n      var matches = this.form_data.signature_text.match(/\\b(\\w)/g); // ['J','S','O','N']\n\n      this.form_data.initial = matches ? matches.join('') : ''; // JSON\n    },\n    clearSForm: function clearSForm() {\n      Object.assign(this.$data, this.$options.data.apply(this));\n    },\n    // Timeout Delay\n    onDelay: function onDelay(fn, ms) {\n      var timer = 0;\n      return function () {\n        clearTimeout(timer);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        timer = setTimeout(fn.bind.apply(fn, [this].concat(args)), ms || 0);\n      };\n    }\n  }\n};",{"version":3,"sources":["SignatureInitial.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsWA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,KAAA;AACA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AACA,SAAA,UAAA;AACA,OAAA,UAAA;AACA,SAAA,SAAA;AACA,SAAA,SAAA;AACA,SACA,gBADA,EAEA,gBAFA,EAGA,aAHA,EAIA,gBAJA,EAKA,oBALA,EAMA,iBANA,EAOA,YAPA;AASA,OAAA,UAAA;AACA,OAAA,YAAA;AACA,OAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,IAAA,YAAA,EAAA,YAFA;AAGA,IAAA,WAAA,EAAA,WAHA;AAIA,IAAA,WAAA,EAAA;AAAA,aAAA,6CAAA;AAAA;AAJA,GAFA;AAQA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,SAAA,CARA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,kBAAA,EAAA,CADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA;AACA,QAAA,cAAA,EAAA,QADA;AAEA,QAAA,OAAA,EAAA,EAFA;AAGA,QAAA,cAAA,EAAA,EAHA;AAIA,QAAA,SAAA,EAAA,EAJA;AAKA,QAAA,SAAA,EAAA,EALA;AAMA,QAAA,QAAA,EAAA,SANA;AAOA,QAAA,YAAA,EAAA;AAPA,OAHA;AAYA,MAAA,MAAA,EAAA;AACA,QAAA,cAAA,EAAA,QADA;AAEA,QAAA,OAAA,EAAA,EAFA;AAGA,QAAA,cAAA,EAAA,EAHA;AAIA,QAAA,SAAA,EAAA,EAJA;AAKA,QAAA,SAAA,EAAA,EALA;AAMA,QAAA,QAAA,EAAA,SANA;AAOA,QAAA,YAAA,EAAA,EAPA;AAQA,QAAA,oBAAA,EAAA;AARA,OAZA;AAsBA,MAAA,aAAA,EAAA;AACA,QAAA,cAAA,EAAA,QADA;AAEA,QAAA,OAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA,EAHA;AAIA,QAAA,SAAA,EAAA,EAJA;AAKA,QAAA,SAAA,EAAA,EALA;AAMA,QAAA,QAAA,EAAA,SANA;AAOA,QAAA,YAAA,EAAA;AAPA,OAtBA;AA+BA,MAAA,YAAA,EAAA;AACA,QAAA,SAAA,EAAA,EADA;AAEA,QAAA,OAAA,EAAA;AAFA,OA/BA;AAoCA,MAAA,YAAA,EAAA;AACA,QAAA,SAAA,EAAA;AACA,UAAA,IAAA,EAAA,WADA;AAEA,UAAA,OAAA,EAAA,EAFA;AAGA,UAAA,QAAA,EAAA;AAHA,SADA;AAMA,QAAA,OAAA,EAAA;AACA,UAAA,IAAA,EAAA,SADA;AAEA,UAAA,OAAA,EAAA,EAFA;AAGA,UAAA,QAAA,EAAA;AAHA;AANA,OApCA;AAiDA,MAAA,cAAA,EAAA,EAjDA;AAkDA,MAAA,YAAA,EAAA,EAlDA;AAmDA,MAAA,mBAAA,EAAA,EAnDA;AAoDA,MAAA,sBAAA,EAAA,EApDA;AAsDA,MAAA,SAAA,EAAA,EAtDA;AAyDA,MAAA,UAAA,EAAA;AACA,QAAA,YAAA,EAAA,QADA;AAEA,QAAA,eAAA,EAAA,GAFA;AAGA,QAAA,UAAA,EAAA,IAHA;AAIA,QAAA,cAAA,EAAA,KAJA;AAKA,QAAA,SAAA,EAAA;AACA;AACA,UAAA,OAAA,EAAA,CAAA,qBAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,eAAA,EAAA,oBAAA,EAAA,yBAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,uBAAA,CAFA;;AAGA;AACA,UAAA,MAAA,EAAA,CAAA,WAAA,EAAA,cAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,eAAA,CAJA;;AAKA;AACA,UAAA,QAAA,EAAA,CAAA,4BAAA,EAAA,YAAA,EAAA,WAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,iBAAA,EAAA,mBAAA;AANA,SALA;AAaA,QAAA,QAAA,EAAA;AACA;AACA,UAAA,OAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAFA;AAGA;AACA,UAAA,MAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAJA;AAKA;AACA;AACA,UAAA,QAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA;AAPA;AAbA;AAzDA,KAAA;AAiFA,GA3FA;AA4FA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,MAAA,EAAA,YAAA,EAAA,SAAA,EAAA,QAAA,CAAA,CADA,CA5FA;AA+FA,EAAA,OA/FA,qBA+FA;AACA,IAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AACA,QAAA,EAAA,GAAA,IAAA;AAEA,IAAA,EAAA,CAAA,aAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,aAAA,EAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,KAHA,EAIA,KAJA,CAIA,UAAA,MAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,QAAA;AACA,KANA;AAQA,IAAA,EAAA,CAAA,SAAA,CAAA,cAAA,GAAA,EAAA,CAAA,IAAA,CAAA,IAAA;AACA,IAAA,EAAA,CAAA,SAAA,CAAA,OAAA,GAAA,EAAA,CAAA,IAAA,CAAA,UAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,GA7GA;AA8GA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,mBAAA,EAAA,+BAAA;AAAA;;AACA,UAAA,EAAA,GAAA,IAAA;AAEA,MAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,IAAA;AAEA,MAAA,EAAA,CAAA,QAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA;AACA;AACA,YAAA,IAAA,GAAA,EAAA,CAAA,KAAA,CAAA,eAAA,EAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,KAAA,CAAA,cAAA,EAAA,QAAA,CAAA,GAAA,CAAA;AAAA,YACA,MAAA,GAAA,QAAA,CAAA,eAAA,CAAA,4BAAA,EAAA,OAAA,CADA;AAAA,YAEA,IAAA,GAAA,QAAA,CAAA,cAAA,CAAA,QAAA,CAFA;AAGA,QAAA,IAAA,CAAA,WAAA,CAAA,MAAA;AACA,QAAA,MAAA,CAAA,WAAA,CAAA,IAAA;AAEA,YAAA,OAAA,GAAA,EAAA,CAAA,KAAA,CAAA,eAAA,EAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,KAAA,CAAA,YAAA;AAAA,YACA,KAAA,GAAA,IAAA,aAAA,GAAA,iBAAA,CAAA,OAAA,CADA;;AAGA,YAAA,WAAA,GAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAAA,CAAA;AAEA;AACA;;;AACA,YAAA,OAAA,GAAA,EAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,KAAA,CAAA,cAAA,EAAA,QAAA,CAAA,GAAA,CAAA;AAAA,YACA,SAAA,GAAA,QAAA,CAAA,eAAA,CAAA,4BAAA,EAAA,OAAA,CADA;AAAA,YAEA,OAAA,GAAA,QAAA,CAAA,cAAA,CAAA,QAAA,CAFA;AAGA,QAAA,OAAA,CAAA,WAAA,CAAA,SAAA;AACA,QAAA,SAAA,CAAA,WAAA,CAAA,OAAA;AAEA,YAAA,UAAA,GAAA,EAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,EAAA,CAAA,UAAA,CAAA,eAAA,EAAA,KAAA,CAAA,YAAA;AAAA,YACA,KAAA,GAAA,IAAA,aAAA,GAAA,iBAAA,CAAA,UAAA,CADA;;AAGA,YAAA,WAAA,GAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAAA,CAAA;;AAEA,QAAA,WAAA,CAAA,IAAA,CAAA,UAAA,UAAA,EAAA;AACA,UAAA,WAAA,CAAA,IAAA,CAAA,UAAA,UAAA,EAAA;AACA,YAAA,EAAA,CAAA,MAAA,GAAA;AACA,cAAA,cAAA,EAAA,EAAA,CAAA,UAAA,CAAA,YADA;AAEA,cAAA,OAAA,EAAA,EAAA,CAAA,SAAA,CAAA,OAFA;AAGA,cAAA,cAAA,EAAA,EAAA,CAAA,SAAA,CAAA,cAHA;AAIA,cAAA,SAAA,EAAA,EAAA,CAAA,UAAA,CAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,QAAA,EAAA,EAAA,CAAA,UAAA,CAAA,eAAA,CAJA;AAKA,cAAA,SAAA,EAAA,EAAA,CAAA,UAAA,CAAA,QAAA,CAAA,EAAA,CAAA,SAAA,CAAA,QAAA,EAAA,EAAA,CAAA,UAAA,CAAA,eAAA,CALA;AAMA,cAAA,QAAA,EAAA,EAAA,CAAA,SAAA,CAAA,QANA;AAOA,cAAA,YAAA,EAAA,UAPA;AAQA,cAAA,oBAAA,EAAA;AARA,aAAA;AAWA,YAAA,EAAA,CAAA,eAAA,CAAA,EAAA,CAAA,MAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,cAAA,KAAA,CAAA,QAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EACA,IADA,CACA,YAAA;AACA,gBAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AACA,kBAAA,KAAA,EAAA,+BADA;AAEA,kBAAA,OAAA,EAAA;AAFA,iBAAA;AAKA,gBAAA,EAAA,CAAA,KAAA,CAAA,wBAAA,EAAA,IAAA;AACA,gBAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AACA,eATA;AAUA,aAZA;AAaA,WAzBA;AA0BA,SA3BA;AA4BA,OAxDA,EAyDA,KAzDA,CAyDA,UAAA,MAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,OA5DA;AA6DA,KApEA;;AAsEA;AACA,IAAA,iBAAA,EAAA,6BAAA;AACA,UAAA,EAAA,GAAA,IAAA;AAEA,UAAA,OAAA,GAAA;AACA,QAAA,UAAA,EAAA,EAAA,CAAA,cAAA,EADA;AAEA,QAAA,aAAA,EAAA,EAAA,CAAA,iBAAA;AAFA,OAAA;AAIA,MAAA,EAAA,CAAA,WAAA,CAAA,OAAA;AACA,KA/EA;;AAiFA;AACA,IAAA,gBAAA,EAAA,0BAAA,CAAA,EAAA;AAAA;;AACA,UAAA,CAAA,CAAA,EAAA;AAEA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,wBAAA,GAAA,CAAA,CAAA,MAAA,CAAA,MAAA;AAAA,OAAA;;AACA,MAAA,MAAA,CAAA,aAAA,CAAA,CAAA;AACA,KAxFA;AAyFA,IAAA,mBAAA,EAAA,6BAAA,CAAA,EAAA;AAAA;;AACA,UAAA,CAAA,CAAA,EAAA;AAEA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AACA,MAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,sBAAA,GAAA,CAAA,CAAA,MAAA,CAAA,MAAA;AAAA,OAAA;;AACA,MAAA,MAAA,CAAA,aAAA,CAAA,CAAA;AACA,KA/FA;AAgGA,IAAA,mBAAA,EAAA,+BAAA;AACA,UAAA,EAAA,GAAA,IAAA;AAEA,UAAA,OAAA,GAAA;AACA,QAAA,UAAA,EAAA,EAAA,CAAA,wBADA;AAEA,QAAA,aAAA,EAAA,EAAA,CAAA;AAFA,OAAA;AAKA,MAAA,EAAA,CAAA,WAAA,CAAA,OAAA;AACA,KAzGA;AA0GA,IAAA,WAAA,EAAA,qBAAA,OAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA;AAEA,MAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,IAAA;AAEA,MAAA,EAAA,CAAA,eAAA,CAAA,OAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EACA,IADA,CACA,YAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AACA,YAAA,KAAA,EAAA,gCADA;AAEA,YAAA,OAAA,EAAA;AAFA,WAAA;AAKA,UAAA,EAAA,CAAA,KAAA,CAAA,wBAAA,EAAA,IAAA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AAEA,UAAA,EAAA,CAAA,YAAA,CAAA,SAAA,CAAA,QAAA,GAAA,KAAA;AACA,UAAA,EAAA,CAAA,YAAA,CAAA,OAAA,CAAA,QAAA,GAAA,KAAA;AACA,SAZA;AAaA,OAfA,EAgBA,KAhBA,CAgBA,UAAA,MAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,OAnBA;AAoBA,KAnIA;;AAqIA;AACA,IAAA,iBAAA,EAAA,2BAAA,EAAA,EAAA,CAAA,CAtIA;;AAwIA;AACA,IAAA,oBAAA,EAAA,8BAAA,EAAA,EAAA;AAAA;AACA,UAAA,EAAA,GAAA,IAAA;AAEA,MAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,IAAA;AAEA,MAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EACA,IADA,CACA,YAAA;AACA,UAAA,EAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AACA,YAAA,KAAA,EAAA,+BADA;AAEA,YAAA,OAAA,EAAA;AAFA,WAAA;AAKA,UAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AACA,SARA;AASA,OAXA,EAYA,KAZA,CAYA,UAAA,MAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,OAfA;AAiBA,KA/JA;;AAiKA;AACA,IAAA,mBAAA,EAAA,6BAAA,EAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA;AAEA,MAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,IAAA;;AAEA,UAAA,OAAA,CAAA,+BAAA,CAAA,EAAA;AAEA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,oBAAA,EAAA,EAAA,EACA,IADA,CACA,YAAA;AACA,YAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,cAAA,KAAA,EAAA,+BADA;AAEA,cAAA,OAAA,EAAA;AAFA,aAAA;AAKA,YAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AACA,WARA;AASA,SAXA,EAYA,KAZA,CAYA,UAAA,MAAA,EAAA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,YAAA,EAAA,KAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,SAfA;AAgBA;AACA,KA1LA;;AA4LA;AACA,IAAA,qBAAA,EAAA,+BAAA,GAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA;AAAA,UACA,QAAA,GAAA,GADA;AAAA,UAEA,MAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAFA;AAAA,UAGA,aAAA,GAAA,IAAA,KAAA,EAHA;AAKA,MAAA,aAAA,GAAA,IAAA,KAAA,EAAA;AACA,MAAA,aAAA,CAAA,WAAA,GAAA,WAAA;;AACA,MAAA,aAAA,CAAA,MAAA,GAAA,YAAA;AACA,YAAA,OAAA,GAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AAEA,QAAA,MAAA,CAAA,KAAA,GAAA,aAAA,CAAA,KAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,aAAA,CAAA,MAAA;AAEA,QAAA,OAAA,CAAA,SAAA,CAAA,aAAA,EAAA,CAAA,EAAA,CAAA;;AAEA,YAAA;AACA,cAAA,OAAA,GAAA,MAAA,CAAA,SAAA,CAAA,WAAA,CAAA;AACA,UAAA,EAAA,CAAA,WAAA,CAAA,OAAA,EAAA,eAAA;AACA,SAHA,CAIA,OAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,YAAA,GAAA;AACA;AACA,OAfA;;AAgBA,MAAA,aAAA,CAAA,GAAA,GAAA,QAAA;AACA,KAtNA;AAuNA,IAAA,WAAA,EAAA,qBAAA,GAAA,EAAA,IAAA,EAAA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,MAAA,IAAA,CAAA,QAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,IAAA,GAAA,GAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA;AACA,MAAA,IAAA,CAAA,KAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA;AACA,KA9NA;;AAoOA;;AACA;;;;;;;AAOA,IAAA,QAAA,EAAA,kBAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,IAAA,EAAA;AACA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,YAAA;AACA;AACA,cAAA,MAAA,GAAA,MAAA,CAAA,GAAA,IAAA,MAAA,CAAA,SAAA,IAAA,MAAA;;AACA,cAAA,CAAA,MAAA,EAAA;AACA,kBAAA,IAAA,KAAA,CAAA,+BAAA,CAAA;AACA,WALA,CAOA;;;AACA,cAAA,KAAA,GAAA,OAAA,CAAA,KAAA,CAAA,iBAAA,CAAA;AACA,cAAA,MAAA,GAAA,KAAA,IAAA,KAAA,CAAA,CAAA,CAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,GAAA,GAAA;AACA,cAAA,KAAA,GAAA,OAAA,CAAA,KAAA,CAAA,gBAAA,CAAA;AACA,cAAA,KAAA,GAAA,KAAA,IAAA,KAAA,CAAA,CAAA,CAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,GAAA,GAAA;AACA,UAAA,MAAA,GAAA,MAAA,IAAA,CAAA;AAEA,UAAA,KAAA,GAAA,QAAA,CAAA,QAAA,CAAA;AACA,UAAA,MAAA,GAAA,QAAA,CAAA,SAAA,CAAA,CAfA,CAiBA;;AACA,cAAA,CAAA,OAAA,CAAA,KAAA,CAAA,YAAA,CAAA,EAAA;AACA,YAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA,OAAA,EAAA,0CAAA,CAAA;AACA,WApBA,CAsBA;;;AACA,cAAA,MAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,UAAA,MAAA,CAAA,KAAA,GAAA,KAAA,GAAA,MAAA,GAAA,CAAA;AACA,UAAA,MAAA,CAAA,MAAA,GAAA,MAAA,GAAA,MAAA,GAAA,CAAA;AACA,cAAA,GAAA,GAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CA1BA,CA4BA;;AACA,cAAA,GAAA,GAAA,IAAA,IAAA,CAAA,CAAA,OAAA,CAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WAAA,CAAA,CA7BA,CAiCA;;AACA,cAAA,GAAA,GAAA,MAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAlCA,CAoCA;;AACA,cAAA,GAAA,GAAA,IAAA,KAAA,EAAA,CArCA,CAuCA;;AACA,UAAA,GAAA,CAAA,MAAA,GAAA,YAAA;AACA;AACA,YAAA,GAAA,CAAA,SAAA,CAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EAFA,CAIA;;AACA,gBAAA,IAAA,EAAA;AACA,kBAAA,MAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,cAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,KAAA;AACA,cAAA,MAAA,CAAA,MAAA,GAAA,MAAA,CAAA,MAAA;AACA,kBAAA,SAAA,GAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA,cAAA,SAAA,CAAA,IAAA;AACA,cAAA,SAAA,CAAA,SAAA,GAAA,IAAA;AACA,cAAA,SAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA;AACA,cAAA,SAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA;AACA,cAAA,SAAA,CAAA,OAAA;AACA,cAAA,SAAA,CAAA,SAAA,CAAA,MAAA,EAAA,CAAA,EAAA,CAAA;AACA,cAAA,MAAA,GAAA,MAAA;AACA,aAjBA,CAkBA;;;AACA,YAAA,MAAA,CAAA,eAAA,CAAA,GAAA,EAnBA,CAoBA;;AACA,YAAA,OAAA,CAAA,MAAA,CAAA,SAAA,EAAA,CAAA;AACA,WAtBA,CAxCA,CAgEA;;;AACA,UAAA,GAAA,CAAA,GAAA,GAAA,GAAA;AAEA,SAnEA,CAmEA,OAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,kCAAA,GAAA,CAAA;AACA;AACA,OAvEA,CAAA;AAwEA,KAtTA;AAuTA,IAAA,iBAAA,EAAA,2BAAA,KAAA,EAAA;AACA,WAAA,UAAA,CAAA,eAAA,GAAA,KAAA;AACA,KAzTA;AA0TA,IAAA,cAAA,EAAA,0BAAA;AACA,aAAA,KAAA,KAAA,CAAA,gBAAA,EAAA,UAAA,EAAA;AACA,KA5TA;AA6TA,IAAA,iBAAA,EAAA,6BAAA;AACA,aAAA,KAAA,KAAA,CAAA,mBAAA,EAAA,UAAA,EAAA;AACA,KA/TA;AAgUA,IAAA,iBAAA,EAAA,2BAAA,EAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,KAAA,CAAA,EAAA,EAAA,WAAA,CAAA,GAAA,EAAA;AACA,KAlUA;AAmUA,IAAA,kBAAA,EAAA,4BAAA,EAAA,EAAA;AACA,aAAA,QAAA,CAAA,KAAA,KAAA,CAAA,EAAA,EAAA,YAAA,CAAA,GAAA,EAAA;AACA,KArUA;AAsUA,IAAA,cAAA,EAAA,wBAAA,CAAA,EAAA;AACA,WAAA,SAAA,CAAA,QAAA,GAAA,CAAA;AAEA,WAAA,UAAA,CAAA,UAAA,GAAA,KAAA,SAAA,CAAA,QAAA,IAAA,SAAA,GAAA,IAAA,GAAA,KAAA,SAAA,CAAA,QAAA,IAAA,QAAA,GAAA,IAAA,GAAA,IAAA;AACA,KA1UA;AA2UA,IAAA,oBAAA,EAAA,gCAAA;AACA,UAAA,CAAA,KAAA,SAAA,CAAA,cAAA,EAAA;AACA,aAAA,SAAA,CAAA,cAAA,GAAA,KAAA,IAAA,CAAA,IAAA;AACA,aAAA,SAAA,CAAA,OAAA,GAAA,KAAA,IAAA,CAAA,UAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,IAAA,KAAA,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA;;AAEA,WAAA,KAAA,CAAA,wBAAA,EAAA,IAAA;AACA,KAlVA;AAmVA,IAAA,oBAAA,EAAA,gCAAA;AACA,WAAA,UAAA;AACA,WAAA,KAAA,CAAA,wBAAA,EAAA,IAAA;AACA,KAtVA;AAuVA,IAAA,YAvVA,0BAuVA;AACA,UAAA,OAAA,GAAA,KAAA,SAAA,CAAA,cAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CADA,CACA;;AACA,WAAA,SAAA,CAAA,OAAA,GAAA,OAAA,GAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAFA,CAEA;AACA,KA1VA;AA2VA,IAAA,UA3VA,wBA2VA;AACA,MAAA,MAAA,CAAA,MAAA,CAAA,KAAA,KAAA,EAAA,KAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AACA,KA7VA;AA8VA;AACA,IAAA,OA/VA,mBA+VA,EA/VA,EA+VA,EA/VA,EA+VA;AACA,UAAA,KAAA,GAAA,CAAA;AACA,aAAA,YAAA;AACA,QAAA,YAAA,CAAA,KAAA,CAAA;;AADA,0CAAA,IAAA;AAAA,UAAA,IAAA;AAAA;;AAEA,QAAA,KAAA,GAAA,UAAA,CAAA,EAAA,CAAA,IAAA,OAAA,EAAA,GAAA,IAAA,SAAA,IAAA,EAAA,EAAA,EAAA,IAAA,CAAA,CAAA;AACA,OAHA;AAIA;AArWA;AA9GA,CAAA","sourcesContent":["<template>\n  <div>\n    <!-- HEADER -->\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"content-card\">\n          <div class=\"content\">\n            <div class=\"d-flex align-items-center\">\n              <img src=\"img/icons/contract.svg\" />\n              <div class=\"ml-3\">\n                <div class=\"header\">{{ $t(\"signature.headerSign\") }}</div>\n                <div class=\"comments\">{{ $t('signature.commentSign') }}</div>\n              </div>\n            </div>\n            <b-button variant=\"primary\" v-on:click=\"showSignInitialModal\">{{ $t('signature.button.addSign') }}</b-button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- END HEADER -->\n\n    <!-- LISTING SIGN INITIAL -->\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"content-card sign-signature px-md-3 px-2\" v-for=\"signinitial in SIGNATURES\" :key=\"signinitial.id\">\n          \n            <div class=\"row\">\n              <div class=\"col-sm-8 text-center\">\n                <img :src=\"signinitial.uploaded_url\" alt=\"Uploaded Signature\" style=\"height: 100px; width: auto; max-width: 280px\" />\n              </div>\n              <div class=\"col-sm-4 text-center\">\n                <img :src=\"signinitial.initial_uploaded_url\" alt=\"Uploaded Initial\" style=\"height: 100px; width: auto; max-width: 280px\" />\n              </div>\n              <div class=\"col-12\">\n                <div class=\"actions\">\n                  <div class=\"action clickable-icon\" v-on:click=\"onDefaultSignInitial(signinitial.id)\">\n                    <i class=\"fa fa-pencil pr-2\"></i> {{ $t('signature.button.setdefault') }}\n                  </div>\n                  <div class=\"action clickable-icon\" v-on:click=\"onDownloadSignInitial(signinitial.uploaded_url)\">\n                    <i class=\"fa fa-download pr-2\"></i> {{ $t('signature.button.download') }}\n                  </div>\n                  <div class=\"action clickable-icon\" v-on:click=\"onDeleteSignInitial(signinitial.id)\">\n                    <i class=\"fa fa-trash pr-2\"></i> {{ $t('signature.button.delete') }}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n        </div>\n      </div>\n    </div>\n    <!-- END LISTING SIGN INITIAL -->\n\n    <!-- MODAL -->\n    <b-modal \n      id=\"create-signature-modal\" \n      ref=\"create-signature-modal\" \n      hide-footer size=\"xl\" \n      :no-close-on-backdrop=\"true\" \n      :no-close-on-esc=\"true\"\n      :hide-header-close=\"true\">\n      <div class=\"create-signature-modal\">\n        <div class=\"title\">\n          {{ $t('signature.modal.titleSign') }}\n        </div>\n        <!-- Tab Menu -->\n        <div class=\"row mb-md-4 mb-2\">\n          <div class=\"col-4 pr-0 pr-md-3\">\n            <b-button\n              class=\"stamp-tab-nav\"\n              :variant=\"config_val.navtab_index == 'Choose' ? 'primary' : 'outline-primary'\"\n              v-on:click=\"() => {\n                config_val.navtab_index = 'Choose'\n                drawing_data.signature.drawable=false\n                drawing_data.initial.drawable=false\n              }\" \n              block\n            >\n              {{ $t('signature.modal.tab.choose') }}\n            </b-button>\n          </div>\n          <div class=\"col-4 px-2 px-md-3\">\n            <b-button\n              class=\"stamp-tab-nav\"\n              :variant=\"config_val.navtab_index == 'Draw' ? 'primary' : 'outline-primary'\"\n              v-on:click=\"() => {\n                config_val.navtab_index = 'Draw'\n                drawing_data.signature.drawable=false\n                drawing_data.initial.drawable=false\n              }\" \n              block\n            >\n              {{ $t('signature.modal.tab.draw') }}\n            </b-button>\n          </div>\n          <div class=\"col-4 pl-0 pl-md-3\">\n            <b-button\n              class=\"stamp-tab-nav\"\n              :variant=\"config_val.navtab_index == 'Upload' ? 'primary' : 'outline-primary'\"\n              v-on:click=\"() => {\n                config_val.navtab_index = 'Upload'\n                drawing_data.signature.drawable=false\n                drawing_data.initial.drawable=false\n              }\" \n              block\n            >\n              {{ $t('signature.modal.tab.upload') }}\n            </b-button>\n          </div>\n        </div>\n        <!-- End Tab Menu -->\n\n        <!-- Create Form -->\n        <div>\n          <!-- Generate Signature & Initial -->\n          <div class=\"row mb-4\" v-if=\"config_val.navtab_index == 'Choose'\">\n            <div class=\"col px-sm-3 px-1\">\n              <hr />\n              <div class=\"row mb-1\">\n                <!-- Select Language -->\n                <div class=\"col-lg-2 col-12 pr-lg-1\">\n                  <UserSelect\n                    v-bind:value=\"form_data.language\"\n                    v-bind:items=\"['English', 'Korean', 'Japanese']\"\n                    v-model=\"form_data.language\"\n                    @changeValue=\"onSyncLanguage\"\n                  />\n                </div>\n                <!-- Input Name -->\n                <div class=\"col-lg-7 col-md-8 col-12 px-lg-1 pr-md-1\">\n                  <div class=\"form-group\">\n                    <input\n                      type=\"text\"\n                      :class=\"{\n                        'form-control': true,\n                        'input-invalid': false,\n                        'input-valid': true\n                      }\"\n                      id=\"signature_text\"\n                      name=\"signature_text\"\n                      v-model=\"form_data.signature_text\"\n                      :placeholder=\"$t('signature.modal.placeholderFullname')\"\n                      :maxlength=\"25\"\n                      @changeValue=\"form_data.signature_text = $event\"\n                      v-on:keyup=\"onChangeName\"\n                    />\n                    <p v-if=\"form_data.signature_text >= 25\" class=\"validation-error text-left pl-2\">\n                      <!-- Validation Response Error -->\n                    </p>\n                  </div>\n                </div>\n                <!-- Input Initial -->\n                <div class=\"col-lg-3 col-md-4 col-12 pl-md-1 \">\n                  <div class=\"form-group\">\n                    <input\n                      type=\"text\"\n                      :class=\"{\n                        'form-control': true,\n                        'input-invalid': false,\n                        'input-valid': true\n                      }\"\n                      id=\"initial\"\n                      name=\"initial\"\n                      v-model=\"form_data.initial\"\n                      :placeholder=\"$t('signature.modal.placeholderInitials')\"\n                      :maxlength=\"4\"\n                      @changeValue=\"form_data.initial = $event\"\n                    />\n                    <p  v-if=\"form_data.initial >= 25\" class=\"validation-error text-left pl-2\">\n                      <!-- Validation Response Error -->\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Generated Signature & Initial -->\n              <div class=\"signatures\" style=\"overflow-x: hidden\">\n                <div v-for=\"(item, index) in config_val.languages[form_data.language]\"\n                  v-bind:key=\"index\"\n                  :class=\"{\n                    'sign-result': true,\n                    'checked': index == config_val.navtab_selected\n                  }\"\n                  v-on:click=\"onSelectSignature(index)\"\n                >\n                  <div class=\"row\">\n                    <div class=\"col-sm-8 col-12 m-auto\">\n                      <div class=\"d-flex flex-column justify-content-between px-md-2\" style=\"width: inherit;\">\n                        <div class=\"signed-by\">{{ $t('signature.modal.signby') }}</div>\n                        <div class=\"signature-text\">\n                          <GenerateSvg \n                            ref=\"generatedSign\" \n                            :paramsData=\"{\n                              idData: index,\n                              type: 'Signature',\n                              text: form_data.signature_text,\n                              fontFace: item,\n                              lang: form_data.language == 'English' ? 'gb' : form_data.language == 'Korean' ? 'kr' : 'jp'\n                            }\" \n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-sm-1 col-12 m-auto\">\n                      <div class=\"right-border\"></div>\n                    </div>\n                    <div class=\"col-sm-3 col-12 m-auto\">\n                      <div class=\"signature-text pt-md-2\">\n                        <GenerateSvg \n                          ref=\"generatedInitial\"\n                          :paramsData=\"{\n                            idData: index,\n                            type: 'Initial',\n                            text: form_data.initial,\n                            fontFace: item,\n                            lang: form_data.language == 'English' ? 'gb' : form_data.language == 'Korean' ? 'kr' : 'jp'\n                          }\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"check-box\" v-if=\"config_val.navtab_selected == index\">\n                    <img src=\"img/icons/check-2.svg\" />\n                  </div>\n                </div>\n              </div>\n              <!-- End Generated Signature & Initial -->\n            </div>\n          </div>\n\n          <!-- Draw Signature & Initial -->\n          <div v-else-if=\"config_val.navtab_index == 'Draw'\" class=\"row mb-4\">\n            <div class=\"col-lg-8 col-12 pr-lg-1 mb-3 mb-lg-0\">\n              <div ref=\"container-for-signature\" class=\"content-dash draw-signature\">\n                <div\n                  class=\"draw-placeholder clickable-icon\"\n                  v-if=\"!drawing_data.signature.drawable\"\n                  v-on:click=\"drawing_data.signature.drawable=true\"\n                >\n                  <img src=\"img/icons/pencil-draw.svg\" />\n                  <div class=\"mt-3\">{{ $t('signature.modal.drawSign') }}</div>\n                </div>\n                <div class=\"canvas-container\">\n                  <drawing-board\n                    id=\"drawboard-sign\"\n                    v-if=\"drawing_data.signature.drawable\" \n                    v-bind:key=\"drawing_data.signature.index\" \n                    :paramData=\"drawing_data.signature\"\n                    :drawSize=\"{\n                      width: getContainerWidth('container-for-signature'),\n                      height: getContainerHeight('container-for-signature'),\n                    }\"\n                    ref=\"drawboard-sign\"\n                    class=\"draw-pan\" \n                  />\n                </div>\n                <div v-if=\"drawing_data.signature.drawable\">\n                  <b-button variant=\"link\" v-on:click=\"drawing_data.signature.drawable=false\">\n                    <i class=\"fa fa-undo\" /> {{ $t('signature.button.reset') }}\n                  </b-button>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"col-lg col pl-lg-1 pb-2\">\n              <div ref=\"container-for-initial\" class=\"content-dash draw-initials\">\n                <div\n                  class=\"draw-placeholder clickable-icon\"\n                  v-if=\"!drawing_data.initial.drawable\"\n                  v-on:click=\"drawing_data.initial.drawable=true\"\n                >\n                  <img src=\"img/icons/pencil-draw.svg\" />\n                  <div class=\"mt-3\">{{ $t('signature.modal.drawInitials') }}</div>\n                </div>\n                <div class=\"canvas-container\">\n                  <drawing-board \n                    id=\"drawboard-ini\"\n                    v-if=\"drawing_data.initial.drawable\" \n                    v-bind:key=\"drawing_data.initial.index\" \n                    :paramData=\"drawing_data.initial\"\n                    :drawSize=\"{\n                      width: getContainerWidth('container-for-initial'),\n                      height: getContainerHeight('container-for-initial'),\n                    }\"\n                    ref=\"drawboard-initial\"\n                    class=\"draw-pan\" \n                  />\n                </div>\n                <div v-if=\"drawing_data.initial.drawable\">\n                  <b-button variant=\"link\" v-on:click=\"drawing_data.initial.drawable=false\">\n                    <i class=\"fa fa-undo\" /> {{ $t('signature.button.reset') }}\n                  </b-button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Upload Stamp -->\n          <div v-else class=\"row mb-4\">\n            <div class=\"col-lg-8 col-12 pr-lg-1 mb-3 mb-lg-0\">\n              <ImageUpload \n                v-bind:files=\"signature_file\" \n                v-bind:config_file=\"({\n                  img: 'img/icons/upload.svg',\n                  text: $t('signature.modal.uploadSign')\n                })\"\n                v-on:toggle=\"toggleSignUpload($event)\" \n              />\n            </div>\n            <div class=\"col-lg col pl-lg-1 pb-2\">\n              <ImageUpload \n                v-bind:files=\"initial_file\" \n                v-bind:config_file=\"({\n                  img: 'img/icons/upload.svg',\n                  text: $t('signature.modal.uploadInitials')\n                })\" \n                v-on:toggle=\"toggleInitialUpload($event)\"\n              />\n            </div>\n          </div>\n          <hr />\n\n          <div class=\"footer\">\n            <div class=\"summary\">\n              {{ $t('signature.modal.tncSign') }}\n            </div>\n            <div class=\"buttons\">\n              <b-button variant=\"link\" v-on:click=\"hideSignInitialModal\">\n                <span>\n                  <i class=\"fa fa-close\"></i> {{ $t('signature.button.cancel') }}\n                </span>\n              </b-button>\n\n              <div v-if=\"config_val.navtab_index == 'Choose'\">\n                <b-button v-if=\"user_sign\" variant=\"primary\" v-on:click=\"onUpdateSignInitial\">Update</b-button>\n                <b-button v-else variant=\"primary\" v-on:click=\"onCreateSignInitial\">{{ $t('signature.button.create') }}</b-button>\n              </div>\n              <div v-else-if=\"config_val.navtab_index == 'Draw'\">\n                <b-button variant=\"primary\" v-on:click=\"onDrawSignInitial\">{{ $t('signature.button.create') }}</b-button>\n              </div>\n              <div v-else>\n                <b-button variant=\"primary\" v-on:click=\"onUploadSignInitial\">{{ $t('signature.button.create') }}</b-button>\n              </div>\n\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n    </b-modal>\n    <!-- END MODAL -->\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport store from '../../store/store'\nimport { mapGetters, mapState } from 'vuex'\nimport { getOutSide } from '../../utils/http'\nimport JwtService from '../../mixins/jwt.service'\nimport { signation } from '../../mixins/signation'\nimport { svgstyles } from '../../utils/svgstyle'\nimport { \n  SIGNATURE_CREATE, \n  SIGNATURE_UPLOAD,\n  SIGNATURE_GET, \n  SIGNATURE_UPDATE, \n  SIGNATURE_SOFTDELETE, \n  SIGNATURE_DESTROY, \n  AUTH_LOADING \n} from '../../store/actions.type'\nimport UserSelect from '../../components/UserSelect'\nimport DrawingBoard from '../../components/DrawingBoard'\nimport ImageUpload from '../../components/common/ImageUpload'\n\nexport default {\n  name: 'SignatureInitial',\n  components: {\n    UserSelect, \n    DrawingBoard, \n    ImageUpload,\n    GenerateSvg: () => import('../../components/common/GenerateSvg')\n  },\n  mixins: [signation, svgstyles],\n  data() {\n    return {\n      user_selected_sign: 0,\n      user_sign: \"\",\n      form_data: {\n        signature_type: 'Choose',\n        initial: '',\n        signature_text: '',\n        font_face: '',\n        font_size: '',\n        language: 'English',\n        uploaded_url: ''\n      },\n      s_data: {\n        signature_type: 'Choose',\n        initial: '',\n        signature_text: '',\n        font_face: '',\n        font_size: '',\n        language: 'English',\n        uploaded_url: '',\n        initial_uploaded_url: ''\n      },\n      generate_data: {\n        signature_type: 'Choose',\n        initial: '',\n        text: '',\n        font_face: '',\n        font_size: '',\n        language: 'English',\n        uploaded_url: ''\n      },\n      generate_img: {\n        signature: '',\n        initial: ''\n      },\n\n      drawing_data: {\n        signature: {\n          name: 'signature',\n          drawing: '',\n          drawable: false\n        },\n        initial: {\n          name: 'initial',\n          drawing: '',\n          drawable: false\n        }\n      },\n\n      signature_file: [],\n      initial_file: [],\n      uploadSignComponent: [],\n      uploadInitialComponent: [],\n\n      validator: {\n        \n      },\n      config_val: {\n        navtab_index: 'Choose',\n        navtab_selected: '0',\n        lang_short: 'gb',\n        generated_show: false,\n        languages: {\n          /** English */\n          English: [\"Mrs Saint Delafield\", \"Badhead Typeface\", \"Banthers\", \"Connoisseurs\", \"Cutepunk_Regular\", \"Elrotex Basic\", \"GreatVibes-Regular\", \"KLSweetPineappleRegular\", \"Mightype Script\", \"pops_08_REGULAR\", \"somethingwild-Regular\"],\n          /** Korean */\n          Korean: [\"KimNamyun\", \"KCC-eunyoung\", \"Goyang\", \"SangSangFlowerRoad\", \"InkLipquid\", \"OTEnjoystoriesBA\", \"Dovemayo-Medium\", \"SDMiSaeng\", \"HSGyoulnoonkot\", \"Jeju Hallasan\"],\n          /** Japanese */\n          Japanese: [\"AsobiMemogaki-Regular-1-01\", \"crayon_1-1\", \"RiiPopkkR\", \"RiiT_F\", \"sjis_sp_setofont\", \"GenEiLateGoN_v2\", \"GenEiAntiquePv5-M\"]\n        },\n        fontsize: {\n          // English\n          English: [\"26\", \"29\", \"19\", \"29\", \"29\", \"14\", \"21\", \"29\", \"19\", \"18\", \"29\"],\n          // Korean\n          Korean: [\"27\", \"23\", \"21\", \"26\", \"23\", \"23\", \"16\", \"24\", \"17\", \"16\"],\n          // Korean: [\"27\", \"35\", \"22\", \"38\", \"32\", \"36\", \"21\", \"34\", \"19\", \"21\"],\n          // Japanese\n          Japanese: [\"24\", \"23\", \"21\", \"26\", \"23\", \"23\", \"20\"]\n        },\n      }\n    }\n  },\n  computed: {\n    ...mapGetters(['USER', 'SIGNATURES', 'loading', 'errors'])\n  },\n  mounted() {\n    store.dispatch(AUTH_LOADING, false)\n    var vm = this\n\n    vm.getSignatures()\n      .then(response => {\n        store.dispatch(SIGNATURE_GET, response.data.data)\n      })\n      .catch(errors => {\n        console.log(errors.response)\n      });\n\n    vm.form_data.signature_text = vm.USER.name\n    vm.form_data.initial = vm.USER.first_name.substring(0,1) + vm.USER.last_name.substring(0,1)\n  },\n  methods: {\n    /** Create Signature */\n    onCreateSignInitial: function () {\n      var vm = this\n\n      store.dispatch(AUTH_LOADING, true)\n\n      vm.fontface()\n        .then(response => {\n          /** Signature */\n          // append style in svg\n          let defs = vm.$refs[\"generatedSign\"][vm.config_val.navtab_selected].$refs[\"childSignSvg\"].children[\"2\"],\n              styles = document.createElementNS(\"http://www.w3.org/2000/svg\", \"style\"),\n              node = document.createTextNode(response);              \n          defs.appendChild(styles);\n          styles.appendChild(node);\n\n          let svgNode = vm.$refs[\"generatedSign\"][vm.config_val.navtab_selected].$refs.childSignSvg,\n              sSign = new XMLSerializer().serializeToString(svgNode);\n\n          let pngBaseSign = this.svgToPng(sSign, 812, 412, 0)\n          \n          /** Initial */\n          // append style in svg\n          let defsIni = vm.$refs[\"generatedInitial\"][vm.config_val.navtab_selected].$refs[\"childSignSvg\"].children[\"2\"],\n              stylesIni = document.createElementNS(\"http://www.w3.org/2000/svg\", \"style\"),\n              nodeIni = document.createTextNode(response);              \n          defsIni.appendChild(stylesIni);\n          stylesIni.appendChild(nodeIni);\n\n          let svgNodeIni = vm.$refs[\"generatedInitial\"][vm.config_val.navtab_selected].$refs.childSignSvg,\n              sInit = new XMLSerializer().serializeToString(svgNodeIni);\n\n          let pngBaseInit = this.svgToPng(sInit, 412, 412, 0)\n\n          pngBaseSign.then(resultSign => {\n            pngBaseInit.then(resultInit => {\n              vm.s_data = {\n                signature_type: vm.config_val.navtab_index,\n                initial: vm.form_data.initial,\n                signature_text: vm.form_data.signature_text,\n                font_face: vm.config_val.languages[vm.form_data.language][vm.config_val.navtab_selected],\n                font_size: vm.config_val.fontsize[vm.form_data.language][vm.config_val.navtab_selected],\n                language: vm.form_data.language,\n                uploaded_url: resultSign,\n                initial_uploaded_url: resultInit\n              }\n\n              vm.createSignature(vm.s_data)\n                .then(response => {\n                  store.dispatch(SIGNATURE_CREATE, response.data.data)\n                    .then(() => {\n                      vm.$toast.success({\n                        title: \"Signature and Initial Created\",\n                        message: \"User's signature and initial have created!\"\n                      })\n                \n                      vm.$refs[\"create-signature-modal\"].hide()\n                      store.dispatch(AUTH_LOADING, false)               \n                    })\n                })\n              })\n          })        \n      })\n      .catch(errors => {\n        store.dispatch(AUTH_LOADING, false)\n        console.log(errors)\n      })   \n    },\n\n    /** Draw Signature & Initial */\n    onDrawSignInitial: function () {\n      var vm = this\n\n      let s_image = {\n        sign_image: vm.getDataURLSign(),\n        initial_image: vm.getDataURLInitial()\n      }\n      vm.uploadFiles(s_image)\n    },\n\n    /** Upload Signature & Initial */\n    toggleSignUpload: function (e) {\n      if (!e) return\n\n      let reader = new FileReader();\n      reader.onload = e => this.uploadSignatureComponent = e.target.result\n      reader.readAsDataURL(e)\n    },\n    toggleInitialUpload: function (e) {\n      if (!e) return\n\n      let reader = new FileReader();\n      reader.onload = e => this.uploadInitialComponent = e.target.result\n      reader.readAsDataURL(e)\n    },\n    onUploadSignInitial: function () {\n      var vm = this\n\n      let s_image = {\n        sign_image: vm.uploadSignatureComponent,\n        initial_image: vm.uploadInitialComponent\n      }\n\n      vm.uploadFiles(s_image)\n    },    \n    uploadFiles: function (s_image) {\n      var vm = this\n\n      store.dispatch(AUTH_LOADING, true)\n\n      vm.uploadSignature(s_image)\n        .then(response => {\n          store.dispatch(SIGNATURE_UPLOAD, response.data.data)\n            .then(() => {\n              vm.$toast.success({\n                title: \"Signature and Initial Uploaded\",\n                message: \"User's signature and initial have uploaded!\"\n              });\n\n              vm.$refs[\"create-signature-modal\"].hide();\n              store.dispatch(AUTH_LOADING, false)\n\n              vm.drawing_data.signature.drawable=false\n              vm.drawing_data.initial.drawable=false\n            })\n        })\n        .catch(errors => {\n          store.dispatch(AUTH_LOADING, false)\n          console.log(errors)\n        });\n    },\n    \n    /** Show Signature Data */\n    onShowSignInitial: function (id) { },\n\n    /** Default Signature & Initial */\n    onDefaultSignInitial: function (id) { // In progress\n      var vm = this\n\n      store.dispatch(AUTH_LOADING, true)\n\n      vm.defaultSignature(id)\n        .then(response => {\n          store.dispatch(SIGNATURE_UPDATE, response.data.data)\n            .then(() => {\n              vm.$toast.success({\n                title: \"Signature and Initial Default\",\n                message: \"User's singature and initial have set to default!\"\n              })\n\n              store.dispatch(AUTH_LOADING, false)\n            })\n        })\n        .catch(errors => {\n          store.dispatch(AUTH_LOADING, false)\n          console.log(errors)\n        })\n      \n    },\n\n    /** Delete Signature */\n    onDeleteSignInitial: function (id) {\n      var vm = this\n\n      store.dispatch(AUTH_LOADING, true)\n\n      if(confirm(\"Do you really want to delete?\")) {\n\n        vm.softDeleteSignature(id)\n          .then(response => {\n            store.dispatch(SIGNATURE_SOFTDELETE, id)\n              .then(() => {\n                vm.$toast.warn({\n                  title: \"Signature and Initial Deleted\",\n                  message: \"User's signature and initial have deleted!\"\n                })\n\n                store.dispatch(AUTH_LOADING, false)\n              })\n          })\n          .catch(errors => {\n            store.dispatch(AUTH_LOADING, false)\n            console.log(errors)\n          })\n      }\n    },\n\n    /** Download Image */\n    onDownloadSignInitial: function (url) {\n      let vm = this,\n          imageURL = url, \n          canvas = document.createElement(\"canvas\"),\n          downloadedImg = new Image\n \n      downloadedImg = new Image;\n      downloadedImg.crossOrigin = \"Anonymous\";\n      downloadedImg.onload = function () {\n        let context = canvas.getContext(\"2d\");\n\n        canvas.width = downloadedImg.width;\n        canvas.height = downloadedImg.height;\n      \n        context.drawImage(downloadedImg, 0, 0);\n      \n        try {\n          let dataURL = canvas.toDataURL(\"image/png\")\n          vm.downloadURI(dataURL, 'signature.png')\n        }\n        catch(err) {\n          console.log(\"Error: \" + err);\n        }  \n      }\n      downloadedImg.src = imageURL;\n    },\n    downloadURI: function (uri, name) {\n      var link = document.createElement('a');\n      link.download = name;\n      link.href = uri;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    },\n\n\n\n\n\n    /** Utils */    \n    /**\n    * converts an svg string to base64 png using the domUrl\n    * @param {string} svgText the svgtext\n    * @param {number} [margin=0] the width of the border - the image size will be height+margin by width+margin\n    * @param {string} [fill] optionally backgrund canvas fill\n    * @return {Promise} a promise to the bas64 png image\n    */\n    svgToPng: function (svgText, setWidth, setHeight, margin, fill) {\n      // convert an svg text to png using the browser\n      return new Promise(function(resolve, reject) {\n        try {\n          // can use the domUrl function from the browser\n          var domUrl = window.URL || window.webkitURL || window;\n          if (!domUrl) {\n            throw new Error(\"(browser doesnt support this)\")\n          }\n          \n          // figure out the height and width from svg text\n          var match = svgText.match(/height=\\\"(\\d+)/m);\n          var height = match && match[1] ? parseInt(match[1],10) : 412;\n          var match = svgText.match(/width=\\\"(\\d+)/m);\n          var width = match && match[1] ? parseInt(match[1],10) : 412;\n          margin = margin || 0;\n\n          width = parseInt(setWidth);\n          height = parseInt(setHeight);\n          \n          // it needs a namespace\n          if (!svgText.match(/xmlns=\\\"/mi)){\n            svgText = svgText.replace ('<svg ','<svg xmlns=\"http://www.w3.org/2000/svg\" ') ;  \n          }\n          \n          // create a canvas element to pass through\n          var canvas = document.createElement(\"canvas\");\n          canvas.width = width+margin*2;\n          canvas.height = height+margin*2;\n          var ctx = canvas.getContext(\"2d\");        \n          \n          // make a blob from the svg\n          var svg = new Blob([svgText], {\n            type: \"image/svg+xml;charset=utf-8\"\n          });\n          \n          // create a dom object for that image\n          var url = domUrl.createObjectURL(svg);\n          \n          // create a new image to hold it the converted type\n          var img = new Image;\n          \n          // when the image is loaded we can get it as base64 url\n          img.onload = function() {\n            // draw it to the canvas\n            ctx.drawImage(this, margin, margin);\n            \n            // if it needs some styling, we need a new canvas\n            if (fill) {\n              var styled = document.createElement(\"canvas\");\n              styled.width = canvas.width;\n              styled.height = canvas.height;\n              var styledCtx = styled.getContext(\"2d\");\n              styledCtx.save();\n              styledCtx.fillStyle = fill;   \n              styledCtx.fillRect(0,0,canvas.width,canvas.height);\n              styledCtx.strokeRect(0,0,canvas.width,canvas.height);\n              styledCtx.restore();\n              styledCtx.drawImage (canvas, 0,0);\n              canvas = styled;\n            }\n            // we don't need the original any more\n            domUrl.revokeObjectURL(url);\n            // now we can resolve the promise, passing the base64 url\n            resolve(canvas.toDataURL());\n          };\n          \n          // load the image\n          img.src = url;\n          \n        } catch (err) {\n          reject('failed to convert svg to png ' + err);\n        }\n      })\n    },\n    onSelectSignature: function (index) {\n      this.config_val.navtab_selected = index\n    },\n    getDataURLSign: function () {\n      return this.$refs[\"drawboard-sign\"].getDataURL()\n    },\n    getDataURLInitial: function() {\n      return this.$refs[\"drawboard-initial\"].getDataURL()\n    },\n    getContainerWidth: function (cn) {\n      return parseInt(this.$refs[cn].clientWidth) - 50;\n    },\n    getContainerHeight: function (cn) {\n      return parseInt(this.$refs[cn].clientHeight) - 75;\n    },\n    onSyncLanguage: function(e) {\n      this.form_data.language = e\n\n      this.config_val.lang_short = this.form_data.language == 'English' ? 'gb' : this.form_data.language == 'Korean' ? 'kr' : 'jp'\n    },\n    showSignInitialModal: function () {\n      if (!this.form_data.signature_text) {\n        this.form_data.signature_text = this.USER.name\n        this.form_data.initial = this.USER.first_name.substring(0,1) + this.USER.last_name.substring(0,1)\n      }\n\n      this.$refs[\"create-signature-modal\"].show();\n    },\n    hideSignInitialModal: function () {\n      this.clearSForm()\n      this.$refs[\"create-signature-modal\"].hide();\n    },\n    onChangeName() {\n      var matches = this.form_data.signature_text.match(/\\b(\\w)/g); // ['J','S','O','N']\n      this.form_data.initial = matches ? matches.join('') : ''; // JSON\n    },\n    clearSForm() {\n      Object.assign(this.$data, this.$options.data.apply(this))\n    },\n    // Timeout Delay\n    onDelay (fn, ms) {\n      let timer = 0\n      return function(...args) {\n        clearTimeout(timer)\n        timer = setTimeout(fn.bind(this, ...args), ms || 0)\n      }\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/views/signaturestamp"}]}