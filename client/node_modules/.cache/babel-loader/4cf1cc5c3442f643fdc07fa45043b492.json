{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/authentication/Signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/authentication/Signup.vue","mtime":1573548269885},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Carousel, Slide } from 'vue-carousel';\nimport AuthHeader from \"./AuthHeader\";\nimport Confirm from \"../../components/signup/Confirm.modal\";\nimport Error from \"../../components/common/Error.modal\";\nimport facebookLogin from 'facebook-login-vuejs';\nimport GoogleLogin from 'vue-google-login';\nimport KakaoLogin from 'vue-kakao-login';\nimport { authentication } from \"../../mixins/authentication\";\nimport { AUTH_REQUEST, AUTH_SUCCESS, AUTH_ERROR, AUTH_MODAL_BTN, AUTH_SET_FB } from \"../../store/actions.type\";\nimport axios from 'axios';\nimport CustomLoader from \"../../components/common/CustomLoader\";\nimport { mapGetters } from 'vuex';\nexport default {\n  name: \"Signup\",\n  mixins: [authentication],\n  components: {\n    AuthHeader: AuthHeader,\n    Confirm: Confirm,\n    Error: Error,\n    'custom-loader': CustomLoader,\n    Carousel: Carousel,\n    Slide: Slide,\n    facebookLogin: facebookLogin,\n    GoogleLogin: GoogleLogin,\n    KakaoLogin: KakaoLogin\n  },\n  data: function data() {\n    return {\n      form: {\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        password_confirmation: '',\n        provider_name: ''\n      },\n      sform: {\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        password_confirmation: '',\n        provider_name: ''\n      },\n      validator: {\n        first_name: {\n          valid: true,\n          focus: false,\n          blured: false,\n          text: 'Please input a valid First Name',\n          error: false,\n          last: ''\n        },\n        last_name: {\n          valid: true,\n          focus: false,\n          blured: false,\n          text: 'Please input a valid Last Name',\n          error: false,\n          last: ''\n        },\n        email: {\n          valid: true,\n          focus: false,\n          blured: false,\n          text: 'Please input a valid Email',\n          error: false,\n          last: ''\n        },\n        password: {\n          valid: true,\n          focus: false,\n          blured: false,\n          text: ''\n        },\n        password_confirmation: {\n          valid: true,\n          focus: false,\n          blured: false,\n          text: 'Password does not match'\n        }\n      },\n      isShowPassword: false,\n      isShowPasswordConfirm: false,\n      pageLoading: false,\n      nosidebar: true,\n\n      /** URL Integration */\n      client_url: process.env.VUE_APP_URL,\n      server_url: process.env.VUE_APP_SERVER_URL,\n\n      /** Facebook OAuth */\n      FB: undefined,\n      fbAppId: process.env.VUE_APP_FB_APP_ID,\n      isFBSuccess: false,\n      isFBConnected: false,\n      fbkey: 0,\n\n      /** Google OAuth2 */\n      googleLoginParams: {\n        client_id: process.env.VUE_APP_GOOGLE_CLIENT_ID\n      },\n\n      /** Line OAuth2 */\n      lineLoginParams: {\n        client_id: process.env.VUE_APP_LINE_CLIENT_ID\n      },\n\n      /** Kakao OAuth */\n      kakaoLoginParams: {\n        api_key: process.env.VUE_APP_KAKAO_API_KEY\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['loading'])),\n  mounted: function mounted() {\n    this.FB = this.$store.getters.FB;\n\n    if (this.$route.params.email != undefined) {\n      this.onLLoginDone(this.$route.params.email);\n    }\n  },\n  methods: {\n    onSignup: function onSignup() {\n      var vm = this;\n      vm.form.provider_name = '';\n\n      if (!vm.validate()) {\n        return;\n      }\n\n      vm.pageLoading = true;\n      localStorage.setItem('signup-form', JSON.stringify(vm.form));\n      vm.signup(vm.form).then(function (response) {\n        vm.onSuccess();\n        vm.pageLoading = false;\n      }).catch(function (error) {\n        vm.pageLoading = false;\n\n        if (error.response.status == 422) {\n          var errors = error.response.data.errors;\n\n          if (errors.email.length > 0) {\n            vm.validator.email.error = true;\n            vm.validator.email.text = errors.email[0];\n            vm.validator.email.last = vm.form.email;\n          }\n        } else {\n          vm.$store.dispatch(AUTH_ERROR, [\"Failed to sign up.\"]);\n          vm.$bvModal.show('modal-error');\n        }\n      });\n    },\n    onSuccess: function onSuccess() {\n      this.$bvModal.show('modal-confirm');\n    },\n    onFailed: function onFailed() {},\n    onShowPassword: function onShowPassword() {\n      if (this.isShowPassword) {\n        this.isShowPassword = false;\n      } else {\n        this.isShowPassword = true;\n      }\n    },\n    onShowPasswordConfirm: function onShowPasswordConfirm() {\n      if (this.isShowPasswordConfirm) {\n        this.isShowPasswordConfirm = false;\n      } else {\n        this.isShowPasswordConfirm = true;\n      }\n    },\n    validate: function validate() {\n      var vm = this;\n      vm.validator.first_name.blured = true;\n      vm.validator.last_name.blured = true;\n      vm.validator.email.blured = true;\n      vm.validator.password.blured = true;\n      vm.validator.password_confirmation.blured = true;\n\n      if (vm.validName(vm.form.first_name) && vm.validName(vm.form.last_name) && vm.validEmail(vm.form.email) && vm.validPassword(vm.form.password) && vm.matchPassword(vm.form.password, vm.form.password_confirmation)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    validName: function validName(name) {\n      // TEMP WORKING ON LATER (SOFIAN)\n      var vm = this;\n      return true;\n    },\n    validEmail: function validEmail(email) {\n      var vm = this;\n\n      if (email == vm.validator.email.last) {\n        return;\n      }\n\n      vm.validator.email.error = false;\n      vm.validator.email.last = '';\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      vm.validator.email.valid = re.test(email);\n      var isValid = re.test(email);\n\n      if (isValid) {\n        return true;\n      } else {\n        vm.validator.email.valid = false;\n        vm.validator.email.text = 'Please input a valid Email';\n        return false;\n      }\n    },\n    validPassword: function validPassword(password) {\n      var vm = this;\n\n      if (password.length < 6 || password.length > 12) {\n        vm.validator.password.valid = false;\n        vm.validator.password.text = 'Password must be 6 ~ 12 length characters';\n        return false;\n      } else if (!/[a-z]/.test(password)) {\n        vm.validator.password.valid = false;\n        vm.validator.password.text = 'Password must contain at least 1 lower case letter';\n        return false;\n      } else if (!/[A-Z]/.test(password)) {\n        vm.validator.password.valid = false;\n        vm.validator.password.text = 'Password must contain at least 1 capital letter';\n        return false;\n      } else if (!/[0-9]/.test(password)) {\n        vm.validator.password.valid = false;\n        vm.validator.password.text = 'Password must contain at least 1 number';\n        return false;\n      } else if (!/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/.test(password)) {\n        vm.validator.password.valid = false;\n        vm.validator.password.text = 'Password must contain at least 1 special character';\n        return false;\n      }\n\n      return true;\n    },\n    matchPassword: function matchPassword(password, password_confirmation) {\n      var vm = this;\n\n      if (password_confirmation.length < 6 || password_confirmation.length > 12) {\n        vm.validator.password_confirmation.valid = false;\n        vm.validator.password_confirmation.text = 'Password must be 6 ~ 12 length characters';\n        return false;\n      } else if (!/[a-z]/.test(password_confirmation)) {\n        vm.validator.password_confirmation.valid = false;\n        vm.validator.password_confirmation.text = 'Password must contain at least 1 lower case letter';\n        return false;\n      } else if (!/[A-Z]/.test(password_confirmation)) {\n        vm.validator.password_confirmation.valid = false;\n        vm.validator.password_confirmation.text = 'Password must contain at least 1 capital letter';\n        return false;\n      } else if (!/[0-9]/.test(password_confirmation)) {\n        vm.validator.password_confirmation.valid = false;\n        vm.validator.password_confirmation.text = 'Password must contain at least 1 number';\n        return false;\n      } else if (!/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/.test(password_confirmation)) {\n        vm.validator.password_confirmation.valid = false;\n        vm.validator.password_confirmation.text = 'Password must contain at least 1 special character';\n        return false;\n      } else if (password !== password_confirmation) {\n        vm.validator.password_confirmation.valid = false;\n        vm.validator.password_confirmation.text = \"Password doesn't match\";\n        return false;\n      }\n\n      return true;\n    },\n    // Facebook related module\n    getFBUserData: function getFBUserData() {\n      var vm = this;\n\n      if (!vm.isFBConnected || vm.FB == null) {\n        return;\n      }\n\n      vm.FB.api('/me', 'GET', {\n        fields: 'id, name, first_name, last_name, email'\n      }, function (user) {\n        // vm.personalID = user.id\n        // vm.name = user.name\n        vm.sform.email = user.email;\n        vm.sform.password = 'fbCSpwd1!';\n        vm.sform.password_confirmation = 'fbCSpwd1!';\n        vm.sform.provider_name = 'facebook';\n        vm.sform.first_name = user.first_name || 'New';\n        vm.sform.last_name = user.last_name || 'User';\n\n        if (vm.isFBSuccess && vm.isFBConnected) {\n          vm.signupWithSocial();\n        }\n      });\n    },\n    onFBSdkLoaded: function onFBSdkLoaded(payload) {\n      this.isFBConnected = payload.isFBConnected;\n      this.FB = payload.FB;\n      this.$store.dispatch(AUTH_SET_FB, payload.FB);\n\n      if (this.isFBConnected) {\n        this.getFBUserData();\n      }\n    },\n    onFBLogin: function onFBLogin() {\n      this.isFBConnected = true;\n      this.isFBSuccess = true;\n      this.getFBUserData();\n    },\n    onFBLogout: function onFBLogout() {\n      this.isFBConnected = false;\n    },\n    // Google login\n    onGLoginSuccess: function onGLoginSuccess(gUser) {\n      var vm = this;\n      var profile = gUser.getBasicProfile();\n      vm.sform.email = profile.getEmail();\n      vm.sform.password = 'gCSpwd2@';\n      vm.sform.password_confirmation = 'gCSpwd2@';\n      vm.sform.provider_name = 'google';\n      vm.sform.first_name = profile.getGivenName();\n      vm.sform.last_name = profile.getFamilyName();\n      vm.signupWithSocial();\n    },\n    onGLoginFailure: function onGLoginFailure(error) {\n      console.log(error);\n    },\n    // Line login\n    onLLoginDone: function onLLoginDone(email) {\n      var vm = this;\n      vm.sform.email = email;\n      vm.sform.password = 'lCSpwd2@';\n      vm.sform.password_confirmation = 'lCSpwd2@';\n      vm.sform.provider_name = 'line';\n      vm.sform.first_name = 'New';\n      vm.sform.last_name = 'User';\n      vm.signupWithSocial();\n    },\n    onKakaoLoginSuccess: function onKakaoLoginSuccess(data) {\n      var vm = this;\n      axios.post(vm.server_url + '/api/auth/kprofile', {\n        'token_type': data.token_type,\n        'access_token': data.access_token\n      }, {\n        header: null\n      }).then(function (response) {\n        vm.sform.email = response.data.kakao_account.email;\n        vm.sform.password = 'KCSpwd2@';\n        vm.sform.password_confirmation = 'KCSpwd2@';\n        vm.sform.provider_name = 'kakao';\n        vm.sform.first_name = response.data.properties.nickname || ' ';\n        vm.sform.last_name = ' ';\n        vm.signupWithSocial();\n      });\n    },\n    onKakaoLoginFailure: function onKakaoLoginFailure(error) {\n      console.log(error);\n    },\n    signupWithSocial: function signupWithSocial() {\n      var vm = this;\n      vm.pageLoading = true;\n      localStorage.setItem('signup-form', JSON.stringify(vm.sform));\n      vm.signup(vm.sform).then(function (response) {\n        vm.pageLoading = false;\n        vm.loginAfterSocialSignup();\n      }).catch(function (error) {\n        vm.pageLoading = false;\n\n        if (error.response.status == 422) {\n          vm.clearSForm();\n          var errors = error.response.data.errors;\n\n          if (errors.email.length > 0) {\n            vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.email);\n            vm.$store.dispatch(AUTH_MODAL_BTN, 'login');\n            vm.$bvModal.show('modal-error');\n          }\n        } else {\n          vm.$store.dispatch(AUTH_ERROR, [\"Failed to sign up using your social account.\"]);\n          vm.$bvModal.show('modal-error');\n        }\n      });\n    },\n    loginAfterSocialSignup: function loginAfterSocialSignup() {\n      var vm = this;\n      vm.isLoginFailed = false;\n      vm.pageLoading = true;\n      vm.login(vm.sform).then(function (response) {\n        vm.$store.dispatch(AUTH_REQUEST, response.data);\n        vm.clearSForm();\n        vm.toHome();\n        vm.pageLoading = false;\n      }).catch(function (error) {\n        vm.clearSForm();\n        vm.isLoginFailed = true;\n        vm.pageLoading = false;\n        vm.$store.dispatch(AUTH_ERROR, [\"Failed to log in using your social account.\"]);\n        vm.$bvModal.show('modal-error');\n      });\n    },\n    toLogin: function toLogin() {\n      this.$router.push({\n        name: 'Login'\n      });\n    },\n    toHome: function toHome() {\n      this.$router.push({\n        name: 'LandingPage'\n      });\n    },\n    clearSForm: function clearSForm() {\n      var vm = this;\n      vm.sform.provider_name = '';\n      vm.sform.first_name = '';\n      vm.sform.last_name = '';\n      vm.sform.email = '';\n      vm.sform.password = '';\n      vm.sform.password_confirmation = '';\n    }\n  }\n};",{"version":3,"sources":["Signup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-container fluid class=\"signup auth-page\">\n    \n\n    <custom-loader :own-loading=\"pageLoading\" :no-sidebar=\"nosidebar\"></custom-loader>\n    <confirm></confirm>\n    <error></error>\n\n    <b-row>\n      <b-col xl=\"5\" lg=\"6\" md=\"12\" sm=\"12\" xs=\"12\" class=\"signup-left\">\n\n        <b-row class=\"header\">\n          <b-col xl=\"7\" offset-xl=\"3\" lg=\"8\" offset-lg=\"2\" md=\"8\" offset-md=\"2\" class=\"wrapper\">\n\n            <AuthHeader />\n\n          </b-col>\n        </b-row>\n\n        <b-row class=\"auth-form\">\n          <b-col xl=\"7\" offset-xl=\"3\" lg=\"8\" offset-lg=\"2\" md=\"8\" offset-md=\"2\" class=\"wrapper\">\n            <b-form @submit.prevent=\"onSignup\">\n              <b-row class=\"no-gutters\">\n              <h3 class=\"form-title w-100\">{{ $t(\"auth.signup\") }}</h3>\n              <span class=\"form-subtitle text-gray w-100\">{{ $t(\"auth.signupsubtitle\") }}&nbsp;<b-link href=\"javascript:;\" @click=\"toLogin\" class=\"text-coffee-light link\">{{ $t(\"auth.signupsubtitle2\") }}</b-link></span>\n\n              <b-form-group id=\"grpFName\"\n                            :class=\"{\n                              'form-group-withicon': true,\n                              'col-md-6 col-12 pr-md-1 pr-auto': true,\n                              'form-group-focus': validator.first_name.focus && !validator.first_name.error && (!validator.first_name.blured || validName(form.first_name)),\n                              'form-group-invalid': validator.first_name.blured && (!validName(form.first_name) || validator.first_name.error),\n                              'form-group-valid': validator.first_name.blured && (validName(form.first_name) && !validator.first_name.error)\n                            }\">\n                <b-form-input id=\"first_name\"\n                            :class=\"{\n                              'form-control-coffee': true,\n                              'input-invalid': validator.first_name.blured && (!validName(form.first_name) || validator.first_name.error),\n                              'input-valid': validator.first_name.blured && (validName(form.first_name) && !validator.first_name.error)\n                            }\"\n                            @blur=\"validator.first_name.blured = true, validator.first_name.focus = false\"\n                            @focus =\"validator.first_name.focus = true\"\n                            type=\"text\"\n                            v-model=\"form.first_name\"\n                            :placeholder=\"$t('auth.input.firstname')\">\n                </b-form-input>\n                <font-awesome-icon icon=\"user\" />\n                <p class=\"validation-error\" v-if=\"validator.first_name.blured && (!validName(form.first_name) || validator.first_name.error)\">{{ validator.first_name.text }}</p>\n              </b-form-group>\n\n              <b-form-group id=\"grpLName\"\n                            :class=\"{\n                              'form-group-withicon': true,\n                              'col-md-6 col-12 pl-md-1 pl-auto': true,\n                              'form-group-focus': validator.last_name.focus && !validator.last_name.error && (!validator.last_name.blured || validName(form.last_name)),\n                              'form-group-invalid': validator.last_name.blured && (!validName(form.last_name) || validator.last_name.error),\n                              'form-group-valid': validator.last_name.blured && (validName(form.last_name) && !validator.last_name.error)\n                            }\">\n                <b-form-input id=\"last_name\"\n                            :class=\"{\n                              'form-control-coffee': true,\n                              'input-invalid': validator.last_name.blured && (!validName(form.last_name) || validator.last_name.error),\n                              'input-valid': validator.last_name.blured && (validName(form.last_name) && !validator.last_name.error)\n                            }\"\n                            @blur=\"validator.last_name.blured = true, validator.last_name.focus = false\"\n                            @focus =\"validator.last_name.focus = true\"\n                            type=\"text\"\n                            v-model=\"form.last_name\"\n                            :placeholder=\"$t('auth.input.lastname')\">\n                </b-form-input>\n                <font-awesome-icon icon=\"user\" />\n                <p class=\"validation-error\" v-if=\"validator.last_name.blured && (!validName(form.last_name) || validator.last_name.error)\">{{ validator.last_name.text }}</p>\n              </b-form-group>\n\n              <b-form-group id=\"grpEmail\"\n                            :class=\"{\n                              'form-group-withicon': true,\n                              'col-12': true,\n                              'form-group-focus': validator.email.focus && !validator.email.error && (!validator.email.blured || validEmail(form.email)),\n                              'form-group-invalid': validator.email.blured && (!validEmail(form.email) || validator.email.error),\n                              'form-group-valid': validator.email.blured && (validEmail(form.email) && !validator.email.error)\n                            }\">\n                <b-form-input id=\"email\"\n                            :class=\"{\n                              'form-control-coffee': true,\n                              'input-invalid': validator.email.blured && (!validEmail(form.email) || validator.email.error),\n                              'input-valid': validator.email.blured && (validEmail(form.email) && !validator.email.error)\n                            }\"\n                            @blur=\"validator.email.blured = true, validator.email.focus = false\"\n                            @focus =\"validator.email.focus = true\"\n                            type=\"email\"\n                            v-model=\"form.email\"\n                            :placeholder=\"$t('auth.input.email')\"> \n                </b-form-input>\n                <font-awesome-icon icon=\"envelope-open\" />\n                <p class=\"validation-error\" v-if=\"validator.email.blured && (!validEmail(form.email) || validator.email.error)\">{{ validator.email.text }}</p>\n              </b-form-group>\n              <b-form-group id=\"grpPassword\"\n                            :class=\"{\n                              'form-group-withicon': true,\n                              'col-12': true,\n                              'form-group-focus': validator.password.focus && (!validator.password.blured || validPassword(form.password)),\n                              'form-group-password': true,\n                              'form-group-invalid': validator.password.blured && !validPassword(form.password),\n                              'form-group-valid': validator.password.blured && validPassword(form.password)\n                            }\">\n                <b-form-input id=\"password\"\n                              :class=\"{\n                                'form-control-coffee': true,\n                                'password': true,\n                                'input-valid': validator.password.blured && (validPassword(form.password)),\n                                'input-invalid': !validPassword(form.password) && validator.password.blured\n                              }\"\n                              @blur=\"validator.password.blured = true, validator.password.focus = false\"\n                              @focus=\"validator.password.focus = true\"\n                              :type=\"isShowPassword?'text':'password'\"\n                              v-model=\"form.password\"\n                              :placeholder=\"$t('auth.input.password')\">\n                </b-form-input>\n                <div class=\"eye\" href=\"javascript:;\" @click=\"onShowPassword\"><font-awesome-icon icon=\"eye-slash\" v-if=\"isShowPassword\" /><font-awesome-icon icon=\"eye\" v-else /></div>\n                <font-awesome-icon icon=\"lock\" />\n                <p class=\"validation-error\" v-if=\"!validPassword(form.password) && validator.password.blured\">{{ validator.password.text }}</p>\n              </b-form-group>\n              <b-form-group id=\"grpPasswordConfirmation\"\n                            :class=\"{\n                              'form-group-withicon': true,\n                              'col-12': true,\n                              'form-group-focus': validator.password_confirmation.focus && (!validator.password_confirmation.blured || matchPassword(form.password, form.password_confirmation)),\n                              'form-group-password': true,\n                              'form-group-valid': validator.password_confirmation.blured && matchPassword(form.password, form.password_confirmation),\n                              'form-group-invalid': !matchPassword(form.password, form.password_confirmation) && validator.password_confirmation.blured\n                            }\">\n                <b-form-input id=\"password_confirmation\"\n                              :class=\"{\n                                'form-control-coffee': true,\n                                'password': true,\n                                'input-valid': validator.password_confirmation.blured && (matchPassword(form.password, form.password_confirmation)),\n                                'input-invalid': !matchPassword(form.password, form.password_confirmation) && validator.password_confirmation.blured\n                              }\"\n                              @blur=\"validator.password_confirmation.blured = true, validator.password_confirmation.focus = false\"\n                              @focus=\"validator.password_confirmation.focus = true\"\n                              :type=\"isShowPasswordConfirm?'text':'password'\"\n                              v-model=\"form.password_confirmation\"\n                              :placeholder=\"$t('auth.input.confirmpass')\">\n                </b-form-input>\n                <div class=\"eye\" href=\"javascript:;\" @click=\"onShowPasswordConfirm\"><font-awesome-icon icon=\"eye-slash\" v-if=\"isShowPasswordConfirm\" /><font-awesome-icon icon=\"eye\" v-else /></div>\n                <font-awesome-icon icon=\"lock\" />\n                <p class=\"validation-error\" v-if=\"!matchPassword(form.password, form.password_confirmation) && validator.password_confirmation.blured\">{{ validator.password_confirmation.text }}</p>\n              </b-form-group>\n              <input type=\"submit\" class=\"btn btn-block btn-md btn-coffee\" :value=\"$t('auth.button.signup')\"/>\n              </b-row>\n            </b-form>\n            <span class=\"text-gray\" style=\"display: block; margin-top: 20px;\">{{ $t(\"auth.tnc\") }} <a href=\"javascript:;\" class=\"text-coffee-light link\">{{ $t(\"auth.tnc2\") }}</a> {{ $t(\"auth.tnc3\") }} <a href=\"javascript:;\" class=\"text-coffee-light link\">{{ $t(\"auth.tnc4\") }}</a></span>\n            <div class=\"signup-withsocial\">\n              <p class=\"text-gray\">{{ $t(\"auth.socupcomment\") }}</p>\n              <div class=\"social-links\">\n                <facebook-login \n                  :appId=\"fbAppId\" \n                  class=\"button btn-facebook\" \n                  @login=\"onFBLogin\" \n                  @logout=\"onFBLogout\" \n                  @sdk-loaded=\"onFBSdkLoaded\" \n                  :key=\"fbkey\">\n                </facebook-login>\n                <GoogleLogin \n                  class=\"button btn-google\" \n                  :params=\"googleLoginParams\" \n                  :onSuccess=\"onGLoginSuccess\" \n                  :onFailure=\"onGLoginFailure\">\n                </GoogleLogin>\n                <b-link :href=\"`https://access.line.me/oauth2/v2.1/authorize?response_type=code&client_id=${lineLoginParams.client_id}&redirect_uri=${server_url}/api/auth/lineauth&state=signup12&scope=openid%20profile%20email`\"><img src=\"/img/social/line.png\"/></b-link>\n                <KakaoLogin :api-key=\"kakaoLoginParams.api_key\" :on-success=\"onKakaoLoginSuccess\" :on-failure=\"onKakaoLoginFailure\" />\n              </div>\n\n              <!-- <div class=\"social-links\">\n                <facebook-login appId=\"2349951131937784\" class=\"button btn-facebook\" @login=\"onFBLogin\" @logout=\"onFBLogout\" @sdk-loaded=\"onFBSdkLoaded\"></facebook-login>\n                <GoogleLogin class=\"button btn-google\" :params=\"googleLoginParams\" :onSuccess=\"onGLoginSuccess\" :onFailure=\"onGLoginFailure\"></GoogleLogin>\n                <b-link href=\"https://access.line.me/oauth2/v2.1/authorize?response_type=code&client_id=1592490922&redirect_uri=https://www.coffeesign.io/api/auth/lineauth&state=signup12&scope=openid%20email\"><img src=\"/img/social/line.png\"/></b-link>\n                <KakaoLogin api-key=\"b2f99b39dd3b4d340a7c0ef10260c2e4\" :on-success=\"onKakaoLoginSuccess\" :on-failure=\"onKakaoLoginFailure\" />\n              </div> -->\n\n            </div>\n          </b-col>\n        </b-row>\n\n      </b-col>\n\n      <b-col xl=\"7\" lg=\"6\" class=\"signup-right pb-5\">\n        <h1>{{ $t(\"auth.carousel.title\") }}</h1>\n        <p>{{ $t(\"auth.carousel.subtitle\") }}</p>\n        <p>{{ $t(\"auth.carousel.subtitle2\") }}</p>\n\n        <div class=\"carousel-container\">\n          <carousel :per-page=\"1\" :autoplay=\"true\" :mouse-drag=\"true\" mouse-drag.boolean=\"false\"\n                    :navigationEnabled=\"false\"\n                    :paginationEnabled=\"true\"\n                    :loop=\"false\"\n                    :interval=\"8000\"\n                    showControls\n                    :paginationColor=\"'rgba(255, 255, 255, 0.3)'\"\n                    :paginationActiveColor=\"'rgba(255, 255, 255, 1)'\"\n                    :paginationSize=\"7\"\n                    :paginationPadding=\"3\"\n                    >\n            <slide class=\"pos-rel\">\n              <a target=\"_blank\">\n                <img src=\"/img/carousel/slide01.png\" class=\"img-responsive\"/>\n              </a>\n            </slide>\n            <slide class=\"pos-rel\">\n              <a target=\"_blank\">\n                <img src=\"/img/carousel/slide01.png\" class=\"img-responsive\"/>\n              </a>\n            </slide>\n            <slide class=\"pos-rel\">\n              <a target=\"_blank\">\n                <img src=\"/img/carousel/slide01.png\" class=\"img-responsive\"/>\n              </a>\n            </slide>\n            <slide class=\"pos-rel\">\n              <a target=\"_blank\">\n                <img src=\"/img/carousel/slide01.png\" class=\"img-responsive\"/>\n              </a>\n            </slide>\n          </carousel>\n        </div>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport {\n    Carousel,\n    Slide\n} from 'vue-carousel'\nimport AuthHeader from './AuthHeader'\nimport Confirm from '../../components/signup/Confirm.modal'\nimport Error from '../../components/common/Error.modal'\nimport facebookLogin from 'facebook-login-vuejs'\nimport GoogleLogin from 'vue-google-login'\nimport KakaoLogin from 'vue-kakao-login'\nimport { authentication } from '../../mixins/authentication'\nimport { AUTH_REQUEST, AUTH_SUCCESS, AUTH_ERROR, AUTH_MODAL_BTN, AUTH_SET_FB } from '../../store/actions.type'\nimport axios from 'axios'\nimport CustomLoader from '../../components/common/CustomLoader'\nimport { mapGetters } from 'vuex'\n\nexport default {\n    name: \"Signup\",\n    mixins: [authentication],\n    components: {\n        AuthHeader,\n        Confirm, Error,\n        'custom-loader': CustomLoader,\n        Carousel,\n        Slide,\n        facebookLogin,\n        GoogleLogin,\n        KakaoLogin\n    },\n    data() {\n        return {\n            form: {\n                first_name: '',\n                last_name: '',\n                email: '',\n                password: '',\n                password_confirmation: '',\n                provider_name: ''\n            },\n            sform: {\n                first_name: '',\n                last_name: '',\n                email: '',\n                password: '',\n                password_confirmation: '',\n                provider_name: ''\n            },\n            validator: {\n                first_name: {\n                    valid: true,\n                    focus: false,\n                    blured: false,\n                    text: 'Please input a valid First Name',\n                    error: false,\n                    last: ''\n                },\n                last_name: {\n                    valid: true,\n                    focus: false,\n                    blured: false,\n                    text: 'Please input a valid Last Name',\n                    error: false,\n                    last: ''\n                },\n                email: {\n                    valid: true,\n                    focus: false,\n                    blured: false,\n                    text: 'Please input a valid Email',\n                    error: false,\n                    last: ''\n                },\n                password: {\n                    valid: true,\n                    focus: false,\n                    blured: false,\n                    text: ''\n                },\n                password_confirmation: {\n                    valid: true,\n                    focus: false,\n                    blured: false,\n                    text: 'Password does not match'\n                },\n            },\n            isShowPassword: false,\n            isShowPasswordConfirm: false,\n            pageLoading: false,\n            nosidebar: true,\n\n            /** URL Integration */\n            client_url: process.env.VUE_APP_URL,\n            server_url: process.env.VUE_APP_SERVER_URL,\n            /** Facebook OAuth */\n            FB: undefined,\n            fbAppId: process.env.VUE_APP_FB_APP_ID,\n            isFBSuccess: false,\n            isFBConnected: false,\n            fbkey: 0,\n            /** Google OAuth2 */\n            googleLoginParams: {\n              client_id: process.env.VUE_APP_GOOGLE_CLIENT_ID\n            },\n            /** Line OAuth2 */\n            lineLoginParams: {\n              client_id: process.env.VUE_APP_LINE_CLIENT_ID\n            },\n            /** Kakao OAuth */\n            kakaoLoginParams: {\n              api_key: process.env.VUE_APP_KAKAO_API_KEY\n            }\n        }\n    },\n    computed: {\n      ...mapGetters(['loading'])\n    },\n    mounted() {\n        this.FB = this.$store.getters.FB\n\n        if (this.$route.params.email != undefined) {\n            this.onLLoginDone(this.$route.params.email)\n        }\n    },\n    methods: {\n        onSignup() {\n            var vm = this\n            vm.form.provider_name = ''\n\n            if (!vm.validate()) {\n                return\n            }\n            \n            vm.pageLoading = true;\n\n            localStorage.setItem('signup-form', JSON.stringify(vm.form))\n\n            vm.signup(vm.form)\n                .then(response => {\n                    vm.onSuccess()\n\n                    vm.pageLoading = false\n                })\n                .catch(error => {\n                    vm.pageLoading = false\n                    if (error.response.status == 422) {\n                        var errors = error.response.data.errors\n                        if (errors.email.length > 0) {\n                            vm.validator.email.error = true\n                            vm.validator.email.text = errors.email[0]\n                            vm.validator.email.last = vm.form.email\n                        }\n                    } else {\n                        vm.$store.dispatch(AUTH_ERROR, [\"Failed to sign up.\"])\n                        vm.$bvModal.show('modal-error')\n                    }\n                })\n        },\n        onSuccess() {\n            this.$bvModal.show('modal-confirm')\n        },\n        onFailed() {\n        },\n        onShowPassword() {\n            if (this.isShowPassword) {\n                this.isShowPassword = false\n            } else {\n                this.isShowPassword = true\n            }\n        },\n        onShowPasswordConfirm() {\n            if (this.isShowPasswordConfirm) {\n                this.isShowPasswordConfirm = false\n            } else {\n                this.isShowPasswordConfirm = true\n            }\n        },\n        validate() {\n            var vm = this\n\n            vm.validator.first_name.blured = true\n            vm.validator.last_name.blured = true\n            vm.validator.email.blured = true\n            vm.validator.password.blured = true\n            vm.validator.password_confirmation.blured = true\n\n            if (vm.validName(vm.form.first_name) && vm.validName(vm.form.last_name) && vm.validEmail(vm.form.email) && vm.validPassword(vm.form.password) && vm.matchPassword(vm.form.password, vm.form.password_confirmation)) {\n                return true\n            } else {\n                return false\n            }\n        },\n        validName(name) {\n          // TEMP WORKING ON LATER (SOFIAN)\n          var vm = this\n\n          return true\n        },\n        validEmail(email) {\n            var vm = this\n\n            if (email == vm.validator.email.last) {\n                return\n            }\n\n            vm.validator.email.error = false\n            vm.validator.email.last = ''\n\n            var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            vm.validator.email.valid = re.test(email)\n\n            var isValid = re.test(email)\n            if (isValid) {\n                return true\n            } else {\n                vm.validator.email.valid = false\n                vm.validator.email.text = 'Please input a valid Email'\n                return false\n            }\n        },\n        validPassword(password) {\n            var vm = this\n            if (password.length < 6 || password.length > 12) {\n                vm.validator.password.valid = false\n                vm.validator.password.text = 'Password must be 6 ~ 12 length characters'\n                return false\n            } else if (!(/[a-z]/.test(password))) {\n                vm.validator.password.valid = false\n                vm.validator.password.text = 'Password must contain at least 1 lower case letter'\n                return false\n            } else if (!(/[A-Z]/.test(password))) {\n                vm.validator.password.valid = false\n                vm.validator.password.text = 'Password must contain at least 1 capital letter'\n                return false\n            } else if (!(/[0-9]/.test(password))) {\n                vm.validator.password.valid = false\n                vm.validator.password.text = 'Password must contain at least 1 number'\n                return false\n            } else if (!(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/.test(password))) {\n                vm.validator.password.valid = false\n                vm.validator.password.text = 'Password must contain at least 1 special character'\n                return false\n            }\n\n            return true\n        },\n        matchPassword(password, password_confirmation) {\n            var vm = this\n            if (password_confirmation.length < 6 || password_confirmation.length > 12) {\n                vm.validator.password_confirmation.valid = false\n                vm.validator.password_confirmation.text = 'Password must be 6 ~ 12 length characters'\n                return false\n            } else if (!(/[a-z]/.test(password_confirmation))) {\n                vm.validator.password_confirmation.valid = false\n                vm.validator.password_confirmation.text = 'Password must contain at least 1 lower case letter'\n                return false\n            } else if (!(/[A-Z]/.test(password_confirmation))) {\n                vm.validator.password_confirmation.valid = false\n                vm.validator.password_confirmation.text = 'Password must contain at least 1 capital letter'\n                return false\n            } else if (!(/[0-9]/.test(password_confirmation))) {\n                vm.validator.password_confirmation.valid = false\n                vm.validator.password_confirmation.text = 'Password must contain at least 1 number'\n                return false\n            } else if (!(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/.test(password_confirmation))) {\n                vm.validator.password_confirmation.valid = false\n                vm.validator.password_confirmation.text = 'Password must contain at least 1 special character'\n                return false\n            } else if (password !== password_confirmation) {\n                vm.validator.password_confirmation.valid = false;\n                vm.validator.password_confirmation.text = \"Password doesn't match\"\n                return false\n            }\n\n            return true\n        },\n        // Facebook related module\n        getFBUserData() {\n            var vm = this\n\n            if (!vm.isFBConnected || vm.FB == null) {\n                return\n            }\n\n            vm.FB.api('/me', 'GET', { fields: 'id, name, first_name, last_name, email' },\n                user => {\n                    // vm.personalID = user.id\n                    // vm.name = user.name\n                    vm.sform.email = user.email\n                    vm.sform.password = 'fbCSpwd1!'\n                    vm.sform.password_confirmation = 'fbCSpwd1!'\n                    vm.sform.provider_name = 'facebook'\n                    vm.sform.first_name = user.first_name || 'New'\n                    vm.sform.last_name = user.last_name || 'User'\n\n                    if (vm.isFBSuccess && vm.isFBConnected) {\n                        vm.signupWithSocial()\n                    }\n                }\n            )\n        },\n        onFBSdkLoaded(payload) {\n            this.isFBConnected = payload.isFBConnected\n            this.FB = payload.FB\n            this.$store.dispatch(AUTH_SET_FB, payload.FB)\n            if (this.isFBConnected) {\n                this.getFBUserData()\n            }\n        },\n        onFBLogin() {\n            this.isFBConnected = true\n            this.isFBSuccess = true\n            this.getFBUserData()\n        },\n        onFBLogout() {\n            this.isFBConnected = false\n        },\n        // Google login\n        onGLoginSuccess(gUser) {\n            var vm = this\n            var profile = gUser.getBasicProfile()\n\n            vm.sform.email = profile.getEmail()\n            vm.sform.password = 'gCSpwd2@'\n            vm.sform.password_confirmation = 'gCSpwd2@'\n            vm.sform.provider_name = 'google'\n            vm.sform.first_name = profile.getGivenName()\n            vm.sform.last_name = profile.getFamilyName()\n            \n            vm.signupWithSocial()\n        },\n        onGLoginFailure(error) {\n            console.log(error)\n        },\n        // Line login\n        onLLoginDone(email) {\n            var vm = this\n\n            vm.sform.email = email\n            vm.sform.password = 'lCSpwd2@'\n            vm.sform.password_confirmation = 'lCSpwd2@'\n            vm.sform.provider_name = 'line'\n            vm.sform.first_name = 'New'\n            vm.sform.last_name = 'User'\n\n            vm.signupWithSocial()\n        },\n        onKakaoLoginSuccess(data) {\n            var vm = this\n            axios.post(vm.server_url+'/api/auth/kprofile', {\n                'token_type': data.token_type,\n                'access_token': data.access_token\n            }, {\n                header: null\n            }).then(response => {\n                vm.sform.email = response.data.kakao_account.email\n                vm.sform.password = 'KCSpwd2@'\n                vm.sform.password_confirmation = 'KCSpwd2@'\n                vm.sform.provider_name = 'kakao'\n                vm.sform.first_name = response.data.properties.nickname || ' '\n                vm.sform.last_name = ' '\n\n                vm.signupWithSocial()\n            })\n        },\n        onKakaoLoginFailure(error) {\n            console.log(error)\n        },\n        signupWithSocial() {\n            var vm = this\n            vm.pageLoading = true\n\n            localStorage.setItem('signup-form', JSON.stringify(vm.sform))\n\n            vm.signup(vm.sform)\n                .then(response => {\n                    vm.pageLoading = false\n                    vm.loginAfterSocialSignup()\n                })\n                .catch(error => {\n                    vm.pageLoading = false\n                    if (error.response.status == 422) {\n                        vm.clearSForm()\n                        var errors = error.response.data.errors\n                        if (errors.email.length > 0) {\n                            vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.email)\n                            vm.$store.dispatch(AUTH_MODAL_BTN, 'login')\n                            vm.$bvModal.show('modal-error')\n                        }\n                    } else {\n                        vm.$store.dispatch(AUTH_ERROR, [\"Failed to sign up using your social account.\"])\n                        vm.$bvModal.show('modal-error')\n                    }\n                })\n        },\n        loginAfterSocialSignup() {\n            var vm = this\n            vm.isLoginFailed = false\n            vm.pageLoading = true\n\n            vm.login(vm.sform)\n                .then(response => {\n                    vm.$store.dispatch(AUTH_REQUEST, response.data)\n                    vm.clearSForm()\n                    vm.toHome()\n\n                    vm.pageLoading = false\n                })\n                .catch(error => {\n                    vm.clearSForm()\n                    vm.isLoginFailed = true\n                    vm.pageLoading = false\n                    vm.$store.dispatch(AUTH_ERROR, [\"Failed to log in using your social account.\"])\n                    vm.$bvModal.show('modal-error')\n                })\n        },\n        toLogin() {\n            this.$router.push({ name: 'Login' })\n        },\n        toHome() {\n            this.$router.push({ name: 'LandingPage' })\n        },\n        clearSForm() {\n            var vm = this\n            vm.sform.provider_name = ''\n            vm.sform.first_name = ''\n            vm.sform.last_name = ''\n            vm.sform.email = ''\n            vm.sform.password = ''\n            vm.sform.password_confirmation = ''\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n// @import \"./authentication.scss\";\n</style>\n"],"sourceRoot":"src/views/authentication"}]}