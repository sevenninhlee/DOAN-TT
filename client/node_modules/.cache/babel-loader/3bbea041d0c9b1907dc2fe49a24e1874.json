{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/src/store/modules/folder.js","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/store/modules/folder.js","mtime":1573548265046},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577}],"contextDependencies":[],"result":["import _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _actions, _mutations;\n\nimport JwtService from \"../../mixins/jwt.service\";\nimport { post, put, remove, get } from \"../../utils/http\";\nimport { FOLDER_GET_REQUEST, FOLDER_ADD_REQUEST, FOLDER_RENAME_REQUEST, FOLDER_DELETE_REQUEST } from \"../actions.type\";\nimport { FOLDER_GET_REQUEST_SUCCESS, FOLDER_GET_REQUEST_ERROR, FOLDER_ADD_REQUEST_SUCCESS, FOLDER_ADD_REQUEST_ERROR, FOLDER_RENAME_REQUEST_SUCCESS, FOLDER_RENAME_REQUEST_ERROR } from \"../mutations.type\";\nvar state = {\n  folders: [],\n  folder_add: {\n    name: 'abc',\n    id: 1,\n    children: []\n  }\n};\nvar getters = {\n  get_folders: function get_folders(state) {\n    return state.folders;\n  },\n  folder_add: function folder_add(state) {\n    return state.folder_add;\n  }\n};\nvar actions = (_actions = {}, _defineProperty(_actions, FOLDER_GET_REQUEST, function (_ref) {\n  var commit = _ref.commit;\n  return new Promise(function (resolve, reject) {\n    get('doc-folders/all').then(function (resp) {\n      commit(FOLDER_GET_REQUEST_SUCCESS, resp.data);\n      resolve(resp.data);\n    }).catch(function (err) {\n      commit(FOLDER_GET_REQUEST_ERROR, err);\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, FOLDER_ADD_REQUEST, function (_ref2, data) {\n  var commit = _ref2.commit;\n  return new Promise(function (resolve, reject) {\n    post('doc-folders/add', data).then(function (resp) {\n      // commit(FOLDER_ADD_REQUEST_SUCCESS, resp.data);\n      resolve(resp.data);\n    }).catch(function (err) {\n      // commit(FOLDER_ADD_REQUEST_ERROR, err)\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, FOLDER_RENAME_REQUEST, function (_ref3, data) {\n  var commit = _ref3.commit;\n  return new Promise(function (resolve, reject) {\n    put(\"doc-folders/\".concat(data.id, \"/update\"), data).then(function (resp) {\n      // commit(FOLDER_ADD_REQUEST_SUCCESS, resp.data);\n      resolve(resp.data);\n    }).catch(function (err) {\n      // commit(FOLDER_ADD_REQUEST_ERROR, err)\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, FOLDER_DELETE_REQUEST, function (_ref4, id) {\n  var commit = _ref4.commit;\n  return new Promise(function (resolve, reject) {\n    remove(\"doc-folders/\".concat(id, \"/delete\")).then(function (resp) {\n      // commit(FOLDER_ADD_REQUEST_SUCCESS, resp.data);\n      resolve(resp.data);\n    }).catch(function (err) {\n      // commit(FOLDER_ADD_REQUEST_ERROR, err)\n      reject(err);\n    });\n  });\n}), _actions);\nvar mutations = (_mutations = {}, _defineProperty(_mutations, FOLDER_GET_REQUEST_SUCCESS, function (state, payload) {\n  state.folders = payload.list.map(function (val) {\n    return {\n      name: val.doc_folder_name,\n      id: val.id,\n      parent_id: val.parent_id\n    };\n  }); // state.folders = payload.list;\n}), _defineProperty(_mutations, FOLDER_GET_REQUEST_ERROR, function (state, payload) {\n  state.folders = [];\n}), _defineProperty(_mutations, FOLDER_ADD_REQUEST_SUCCESS, function (state, payload) {// return { ...state.folder_add, name: payload.list.doc_folder_name, id: payload.list.id, children: [] }\n  // state.folder_add.name = payload.data.doc_folder_name\n  // state.folder_add.id = payload.data.id\n  // state.folder_add.children = []\n}), _defineProperty(_mutations, FOLDER_ADD_REQUEST_ERROR, function (state, payload) {\n  state.folder_add = [];\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/var/www/html/Jobs/DOAN-TT/client/src/store/modules/folder.js"],"names":["JwtService","post","put","remove","get","FOLDER_GET_REQUEST","FOLDER_ADD_REQUEST","FOLDER_RENAME_REQUEST","FOLDER_DELETE_REQUEST","FOLDER_GET_REQUEST_SUCCESS","FOLDER_GET_REQUEST_ERROR","FOLDER_ADD_REQUEST_SUCCESS","FOLDER_ADD_REQUEST_ERROR","FOLDER_RENAME_REQUEST_SUCCESS","FOLDER_RENAME_REQUEST_ERROR","state","folders","folder_add","name","id","children","getters","get_folders","actions","commit","Promise","resolve","reject","then","resp","data","catch","err","mutations","payload","list","map","val","doc_folder_name","parent_id"],"mappings":"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","sourcesContent":["import JwtService from \"../../mixins/jwt.service\"\nimport { post, put, remove, get } from '../../utils/http';\n\nimport { \n  FOLDER_GET_REQUEST,\n  FOLDER_ADD_REQUEST,\n  FOLDER_RENAME_REQUEST,\n  FOLDER_DELETE_REQUEST\n} from '../actions.type'\n\nimport { \n  FOLDER_GET_REQUEST_SUCCESS,\n  FOLDER_GET_REQUEST_ERROR,\n  FOLDER_ADD_REQUEST_SUCCESS,\n  FOLDER_ADD_REQUEST_ERROR,\n  FOLDER_RENAME_REQUEST_SUCCESS,\n  FOLDER_RENAME_REQUEST_ERROR\n} from '../mutations.type'\n\nconst state = {\n  folders: [],\n  folder_add: {\n    name: 'abc',\n    id: 1,\n    children: []\n  }\n}\n\nconst getters = {\n    get_folders(state) {\n      return state.folders;\n    },\n    folder_add(state) {\n      return state.folder_add;\n    }\n}\n\nconst actions = {\n  [FOLDER_GET_REQUEST]: ({commit}) => {\n    return new Promise((resolve, reject) => {\n      get('doc-folders/all')\n        .then(resp => {\n          commit(FOLDER_GET_REQUEST_SUCCESS, resp.data);\n          resolve(resp.data)\n        })\n        .catch(err => {\n          commit(FOLDER_GET_REQUEST_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n  [FOLDER_ADD_REQUEST]: ({commit}, data) => {\n    return new Promise((resolve, reject) => {\n      post('doc-folders/add', data)\n        .then(resp => {\n          // commit(FOLDER_ADD_REQUEST_SUCCESS, resp.data);\n          resolve(resp.data)\n        })\n        .catch(err => {\n          // commit(FOLDER_ADD_REQUEST_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n  [FOLDER_RENAME_REQUEST]: ({commit}, data) => {\n    return new Promise((resolve, reject) => {\n      put(`doc-folders/${data.id}/update`, data)\n        .then(resp => {\n          // commit(FOLDER_ADD_REQUEST_SUCCESS, resp.data);\n          resolve(resp.data)\n        })\n        .catch(err => {\n          // commit(FOLDER_ADD_REQUEST_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n  [FOLDER_DELETE_REQUEST]: ({commit}, id) => {\n    return new Promise((resolve, reject) => {\n      remove(`doc-folders/${id}/delete`)\n        .then(resp => {\n          // commit(FOLDER_ADD_REQUEST_SUCCESS, resp.data);\n          resolve(resp.data)\n        })\n        .catch(err => {\n          // commit(FOLDER_ADD_REQUEST_ERROR, err)\n          reject(err)\n        })\n    })\n  },\n}\n\nconst mutations = {\n    [FOLDER_GET_REQUEST_SUCCESS](state, payload) {\n      state.folders = payload.list.map( val => {\n        return {\n          name: val.doc_folder_name,\n          id: val.id,\n          parent_id: val.parent_id\n        }\n      })\n      // state.folders = payload.list;\n    },\n    [FOLDER_GET_REQUEST_ERROR](state, payload) {\n      state.folders = [];\n    },\n    [FOLDER_ADD_REQUEST_SUCCESS](state, payload) {\n      // return { ...state.folder_add, name: payload.list.doc_folder_name, id: payload.list.id, children: [] }\n      // state.folder_add.name = payload.data.doc_folder_name\n      // state.folder_add.id = payload.data.id\n      // state.folder_add.children = []\n    },\n    [FOLDER_ADD_REQUEST_ERROR](state, payload) {\n      state.folder_add = [];\n    },\n}\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n}"]}]}