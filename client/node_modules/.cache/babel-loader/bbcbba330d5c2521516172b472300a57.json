{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/authentication/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/authentication/Login.vue","mtime":1573548269881},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapState } from 'vuex';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport facebookLogin from 'facebook-login-vuejs';\nimport GoogleLogin from 'vue-google-login';\nimport KakaoLogin from 'vue-kakao-login';\nimport { AUTH_REQUEST, AUTH_SUCCESS, AUTH_ERROR, AUTH_MODAL_BTN, AUTH_SET_FB } from \"../../store/actions.type\";\nimport { authentication } from \"../../mixins/authentication\";\nimport store from \"../../store/store\";\nimport { CHANGE_LANGUAGE_ACTION } from \"../../store/actions.type\";\nimport { LANGUAGES } from \"../../i18n\";\nimport AuthHeader from \"./AuthHeader\";\nimport Error from \"../../components/common/Error.modal\";\nimport CustomLoader from \"../../components/common/CustomLoader\"; // import '../../../scss/custom.scss';\n\nexport default {\n  name: \"Login\",\n  components: {\n    'custom-loader': CustomLoader,\n    Error: Error,\n    AuthHeader: AuthHeader,\n    facebookLogin: facebookLogin,\n    GoogleLogin: GoogleLogin,\n    KakaoLogin: KakaoLogin\n  },\n  mixins: [authentication],\n  data: function data() {\n    return {\n      form: {\n        email: '',\n        password: '',\n        remember_me: false\n      },\n      sform: {\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        password_confirmation: '',\n        remember_me: false,\n        provider_name: ''\n      },\n      validator: {\n        email: {\n          valid: true,\n          focus: false,\n          blured: false,\n          text: 'Please input a valid Email',\n          error: false,\n          last: ''\n        },\n        password: {\n          valid: true,\n          focus: false,\n          blured: false,\n          text: 'Password must be 6 ~ 12 length characters',\n          error: false,\n          last: ''\n        }\n      },\n      isLoginFailed: false,\n      isShowPassword: false,\n      pageLoading: false,\n      nosidebar: true,\n      languages: LANGUAGES,\n      testval: 'Test',\n\n      /** URL Integration */\n      client_url: process.env.VUE_APP_URL,\n      server_url: process.env.VUE_APP_SERVER_URL,\n\n      /** Facebook OAuth */\n      FB: undefined,\n      fbAppId: process.env.VUE_APP_FB_APP_ID,\n      isFBSuccess: false,\n      isFBConnected: false,\n      fbkey: 0,\n\n      /** Google OAuth2 */\n      googleLoginParams: {\n        client_id: process.env.VUE_APP_GOOGLE_CLIENT_ID\n      },\n\n      /** Line OAuth2 */\n      lineLoginParams: {\n        client_id: process.env.VUE_APP_LINE_CLIENT_ID,\n        scope: process.env.VUE_APP_LINE_SCOPE\n      },\n\n      /** Kakao OAuth */\n      kakaoLoginParams: {\n        api_key: process.env.VUE_APP_KAKAO_API_KEY\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['USER', 'loading', 'errors'])),\n  mounted: function mounted() {\n    this.FB = this.$store.getters.FB;\n\n    if (this.$route.params.email != undefined) {\n      this.onLLoginDone(this.$route.params.email);\n    } else {\n      if (this.FB == null) {\n        this.fbkey += 1;\n        return;\n      }\n    }\n  },\n  methods: {\n    onLogin: function onLogin(evt) {\n      var vm = this;\n      vm.isLoginFailed = false;\n      vm.pageLoading = true;\n\n      if (!vm.validate()) {\n        vm.pageLoading = false;\n        return;\n      }\n\n      vm.login(vm.form).then(function (response) {\n        vm.$store.dispatch(AUTH_REQUEST, response.data).then(function (response) {\n          response && response.data && vm.toHome();\n          vm.pageLoading = !response;\n        });\n      }).catch(function (error) {\n        console.log(error.response);\n        vm.isLoginFailed = true;\n        vm.pageLoading = false;\n\n        if (error.response.status == 422) {\n          vm.$store.dispatch(AUTH_ERROR, error.response.data.errors);\n        } else if (error.response.status == 401) {\n          var errors = error.response.data.errors;\n\n          if (errors.email) {\n            vm.validator.email.error = true;\n            vm.validator.email.text = errors.email[0];\n            vm.validator.email.last = vm.form.email;\n          } else if (errors.password) {\n            vm.validator.password.error = true;\n            vm.validator.password.text = errors.password[0];\n            vm.validator.password.last = vm.form.password;\n          }\n\n          vm.$store.dispatch(AUTH_ERROR, error.response.data.errors);\n          return;\n        }\n\n        vm.$store.dispatch(AUTH_ERROR, ['Error occured while login.']);\n        vm.$bvModal.show('modal-error');\n      });\n    },\n    onShowPassword: function onShowPassword() {\n      if (this.isShowPassword) {\n        this.isShowPassword = false;\n      } else {\n        this.isShowPassword = true;\n      }\n    },\n    validate: function validate() {\n      var vm = this;\n      vm.validator.email.blured = true;\n      vm.validator.password.blured = true;\n\n      if (vm.validEmail(vm.form.email) && vm.validPassword(vm.form.password)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    validEmail: function validEmail(email) {\n      var vm = this;\n\n      if (email == vm.validator.email.last) {\n        return;\n      }\n\n      vm.validator.email.error = false;\n      vm.validator.email.last = '';\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      vm.validator.email.valid = re.test(email);\n      var isValid = re.test(email);\n\n      if (isValid) {\n        return true;\n      } else {\n        vm.validator.email.valid = false;\n        vm.validator.email.text = 'Please input a valid Email';\n        return false;\n      }\n    },\n    validPassword: function validPassword(password) {\n      var vm = this;\n\n      if (password == vm.validator.password.last) {\n        return;\n      }\n\n      vm.validator.password.error = false;\n      vm.validator.password.last = '';\n\n      if (password.length < 6 || password.length > 12) {\n        vm.validator.password.valid = false;\n        vm.validator.password.text = 'Password must be 6 ~ 12 length characters';\n        return false;\n      } else if (!/[a-z]/.test(password)) {\n        vm.validator.password.valid = false;\n        vm.validator.password.text = 'Password must contain at least 1 lower case letter';\n        return false;\n      } else if (!/[A-Z]/.test(password)) {\n        vm.validator.password.valid = false;\n        vm.validator.password.text = 'Password must contain at least 1 capital letter';\n        return false;\n      } else if (!/[0-9]/.test(password)) {\n        vm.validator.password.valid = false;\n        vm.validator.password.text = 'Password must contain at least 1 number';\n        return false;\n      } else if (!/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/.test(password)) {\n        vm.validator.password.valid = false;\n        vm.validator.password.text = 'Password must contain at least 1 special character';\n        return false;\n      }\n\n      return true;\n    },\n\n    /** Facebook OAuth */\n    getFBUserData: function getFBUserData() {\n      var vm = this;\n      vm.FB.api('/me', 'GET', {\n        fields: 'id, name, first_name, last_name, email'\n      }, function (user) {\n        console.log(\"data api\", user);\n        vm.personalID = user.id;\n        vm.sform.email = user.email;\n        vm.sform.password = 'fbCSpwd1!';\n        vm.sform.provider_name = 'facebook';\n        vm.sform.first_name = user.first_name || ' ';\n        vm.sform.last_name = user.last_name || ' ';\n\n        if (vm.isFBSuccess && vm.isFBConnected) {\n          vm.loginWithSocial();\n        }\n      });\n    },\n    onFBSdkLoaded: function onFBSdkLoaded(payload) {\n      this.isFBConnected = payload.isFBConnected;\n      this.FB = payload.FB;\n      this.$store.dispatch(AUTH_SET_FB, payload.FB);\n\n      if (this.isFBConnected) {\n        this.getFBUserData();\n      }\n    },\n    onFBLogin: function onFBLogin() {\n      this.isFBConnected = true;\n      this.isFBSuccess = true;\n      this.getFBUserData();\n    },\n    onFBLogout: function onFBLogout() {\n      this.isFBConnected = false;\n    },\n\n    /** Google OAuth */\n    onGLoginSuccess: function onGLoginSuccess(gUser) {\n      var vm = this;\n      var profile = gUser.getBasicProfile();\n      vm.sform.email = profile.getEmail();\n      vm.sform.password = 'gCSpwd2@';\n      vm.sform.provider_name = 'google';\n      vm.sform.first_name = profile.getGivenName() || ' ';\n      vm.sform.last_name = profile.getFamilyName() || ' ';\n      vm.loginWithSocial();\n    },\n    onGLoginFailure: function onGLoginFailure(error) {\n      console.log(error);\n    },\n\n    /** Line OAuth */\n    onLLoginDone: function onLLoginDone(email) {\n      var vm = this;\n      vm.sform.email = email;\n      vm.sform.password = 'lCSpwd2@';\n      vm.sform.provider_name = 'line';\n      vm.sform.first_name = ' ';\n      vm.sform.last_name = ' ';\n      vm.form.email = email;\n      vm.form.password = 'lCSpwd2@'; // vm.onLogin()\n\n      vm.loginWithSocial();\n    },\n\n    /** Kakao OAuth */\n    onKakaoLoginSuccess: function onKakaoLoginSuccess(data) {\n      var vm = this;\n      axios.post(vm.server_url + '/api/auth/kprofile', {\n        'token_type': data.token_type,\n        'access_token': data.access_token\n      }, {\n        header: null\n      }).then(function (response) {\n        console.log(response.data);\n        vm.sform.email = response.data.kakao_account.email;\n        vm.sform.password = 'KCSpwd2@';\n        vm.sform.provider_name = 'kakao';\n        vm.sform.first_name = response.data.properties.nickname || ' ';\n        vm.sform.last_name = ' ';\n        vm.loginWithSocial();\n      });\n    },\n    onKakaoLoginFailure: function onKakaoLoginFailure(error) {\n      console.log(error);\n    },\n\n    /** Social OAuth Integration */\n    loginWithSocial: function loginWithSocial() {\n      var vm = this;\n      vm.isLoginFailed = false;\n      vm.pageLoading = true;\n      vm.login(vm.sform).then(function (response) {\n        vm.$store.dispatch(AUTH_REQUEST, response.data);\n        vm.clearSForm();\n        vm.toHome();\n        vm.pageLoading = false;\n      }).catch(function (error) {\n        if (error.response.status == 404) {\n          vm.signupWithSocial();\n          return;\n        } else if (error.response.status == 422) {\n          vm.clearSForm();\n        } else if (error.response.status == 401) {\n          vm.clearSForm();\n        } else {\n          vm.clearSForm();\n        }\n\n        vm.isLoginFailed = true;\n        vm.pageLoading = false;\n\n        if (error.response.data.errors.email) {\n          vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.email);\n        } else if (error.response.data.errors.password) {\n          vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.password);\n        } else {\n          vm.$store.dispatch(AUTH_ERROR, [\"Error occured while social log in\"]);\n        }\n\n        vm.$bvModal.show('modal-error');\n      });\n    },\n    signupWithSocial: function signupWithSocial() {\n      var vm = this;\n      vm.sform.password_confirmation = vm.sform.password;\n      localStorage.setItem('signup-form', JSON.stringify(vm.sform));\n      vm.signup(vm.sform).then(function (response) {\n        vm.loginAfterSocialSignup();\n      }).catch(function (error) {\n        vm.clearSForm();\n\n        if (error.response.data.errors.email) {\n          vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.email);\n        } else if (error.response.data.errors.password) {\n          vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.password);\n        } else {\n          vm.$store.dispatch(AUTH_ERROR, [\"Error occured while social sign up\"]);\n        }\n\n        vm.$bvModal.show('modal-error');\n      });\n    },\n    loginAfterSocialSignup: function loginAfterSocialSignup() {\n      var vm = this;\n      vm.isLoginFailed = false;\n      vm.pageLoading = true;\n      vm.login(vm.sform).then(function (response) {\n        vm.$store.dispatch(AUTH_REQUEST, response.data);\n        vm.clearSForm();\n        vm.toHome();\n        vm.pageLoading = false;\n      }).catch(function (error) {\n        vm.clearSForm();\n        vm.isLoginFailed = true;\n        vm.pageLoading = false;\n\n        if (error.response.data.errors.email) {\n          vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.email);\n        } else if (error.response.data.errors.password) {\n          vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.password);\n        } else {\n          vm.$store.dispatch(AUTH_ERROR, [\"Error occured while log in\"]);\n        }\n\n        vm.$bvModal.show('modal-error');\n      });\n    },\n    toSignup: function toSignup() {\n      this.$router.push({\n        name: 'Signup'\n      });\n    },\n    toPassword: function toPassword() {\n      this.$router.push({\n        name: 'ForgotPassword'\n      });\n    },\n    toHome: function toHome() {\n      this.$router.push({\n        name: 'LandingPage'\n      });\n    },\n    toUpload: function toUpload() {},\n    stringToURL: function stringToURL(str) {\n      return encodeURIComponent(str);\n    },\n    clearSForm: function clearSForm() {\n      var vm = this;\n      vm.sform.first_name = '';\n      vm.sform.last_name = '';\n      vm.sform.email = '';\n      vm.sform.password = '';\n      vm.sform.remember_me = false;\n      vm.sform.provider_name = '';\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <b-container fluid class=\"auth-page login\" style=\"position: relative; display: inline-block;\">\n\n    <custom-loader :own-loading=\"pageLoading\" :no-sidebar=\"nosidebar\"></custom-loader>\n\n    <error></error>\n\n    <b-row class=\"container header\">\n      <b-col md=\"12\">\n        <AuthHeader />\n      </b-col>\n    </b-row>\n\n    <b-row class=\"auth-form\">\n      <b-col lg=\"5\" md=\"8\" offset-md=\"2\" class=\"wrapper\">\n        <b-form @submit.prevent=\"onLogin\">\n          <h3 class=\"form-title\">{{ $t(\"auth.signintitle\") }}</h3>\n          <span class=\"form-subtitle text-gray\">{{ $t(\"auth.signinsubtitle\") }}&nbsp;<b-link href=\"javascript:;\" @click=\"toSignup\" class=\"text-coffee-light link\">{{ $t(\"auth.signinsubtitle2\") }}</b-link></span>\n          <b-form-group id=\"grpEmail\"\n                        :class=\"{\n                          'form-group-withicon': true,\n                          'form-group-focus': validator.email.focus && !validator.email.error && (!validator.email.blured || validEmail(form.email)),\n                          'form-group-invalid': !validEmail(form.email) && validator.email.blured,\n                          'form-group-valid': validator.email.blured && (validEmail(form.email) && !validator.email.error)\n                        }\">\n            <b-form-input id=\"email\"\n                        :class=\"{\n                          'form-control-coffee': true,\n                          'input-invalid': !validEmail(form.email) && validator.email.blured,\n                          'input-valid': validator.email.blured && (validEmail(form.email) && !validator.email.error)\n                        }\"\n                        @blur=\"validator.email.blured = true, validator.email.focus = false\"\n                        @focus=\"validator.email.focus = true\"\n                        type=\"email\"\n                        v-model=\"form.email\"\n                        :placeholder=\"$t('auth.input.email')\"\n                        autocomplete=\"username\">\n            </b-form-input>\n            <font-awesome-icon icon=\"envelope-open\" />\n            <p class=\"validation-error\" v-if=\"!validEmail(form.email) && validator.email.blured\">{{ validator.email.text }}</p>\n          </b-form-group>\n          <b-form-group id=\"grpPassword\"\n                        :class=\"{\n                          'form-group-withicon': true,\n                          'form-group-focus': validator.password.focus && !validator.password.error && (!validator.password.blured || validPassword(form.password)),\n                          'form-group-password': true,\n                          'form-group-invalid': validator.password.blured && !validPassword(form.password),\n                          'form-group-valid': validator.password.blured && (validPassword(form.password) && !validator.password.error)\n                        }\">\n            <b-form-input id=\"password\"\n                        :class=\"{\n                          'form-control-coffee': true,\n                          'password': true,\n                          'input-valid': validator.password.blured && (validPassword(form.password) && !validator.password.error),\n                          'input-invalid': !validPassword(form.password) && validator.password.blured\n                        }\"\n                        @blur=\"validator.password.blured = true, validator.password.focus = false\"\n                        @focus=\"validator.password.focus = true\"\n                        :type=\"isShowPassword?'text':'password'\"\n                        v-model=\"form.password\"\n                        :placeholder=\"$t('auth.input.password')\"\n                        autocomplete=\"current-password\">\n            </b-form-input>\n            <div class=\"eye\" @click=\"onShowPassword\"><font-awesome-icon icon=\"eye-slash\" v-if=\"isShowPassword\" /><font-awesome-icon icon=\"eye\" v-else /></div>\n            <font-awesome-icon icon=\"lock\" />\n            <p class=\"validation-error\" v-if=\"!validPassword(form.password) && validator.password.blured\">{{ validator.password.text }}</p>\n          </b-form-group>\n          <b-form-group id=\"remember\">\n            <b-form-checkbox id=\"remember_me\"\n                          class=\"form-checkbox-coffee pull-left\"\n                          v-model=\"form.remember_me\">{{ $t(\"auth.input.remember\") }}\n            </b-form-checkbox>\n            <b-link href=\"javascript:;\" @click=\"toPassword\" class=\"text-coffee-light link pull-right\">{{ $t(\"auth.input.forgot\") }}</b-link>\n          </b-form-group>\n\n          <input type=\"submit\" class=\"btn btn-block btn-md btn-coffee\" :value=\"$t('auth.button.signin')\"/>\n        </b-form>\n        <div class=\"signup-withsocial\">\n          <p class=\"text-gray\">{{ $t(\"auth.socincomment\") }}</p>\n          <div class=\"social-links\">\n            <facebook-login \n              :appId=\"fbAppId\" \n              class=\"button btn-facebook\" \n              @login=\"onFBLogin\" \n              @logout=\"onFBLogout\" \n              @sdk-loaded=\"onFBSdkLoaded\" \n              :key=\"fbkey\">\n            </facebook-login>\n            <GoogleLogin \n              class=\"button btn-google\" \n              :params=\"googleLoginParams\" \n              :onSuccess=\"onGLoginSuccess\" \n              :onFailure=\"onGLoginFailure\">\n            </GoogleLogin>\n            <b-link :href=\"`https://access.line.me/oauth2/v2.1/authorize?response_type=code&client_id=${lineLoginParams.client_id}&redirect_uri=${server_url}/api/auth/lineauth&state=login12&scope=${this.stringToURL(lineLoginParams.scope)}`\">\n              <img src=\"/img/social/line.png\"/>\n            </b-link>\n            <KakaoLogin :api-key=\"kakaoLoginParams.api_key\" :on-success=\"onKakaoLoginSuccess\" :on-failure=\"onKakaoLoginFailure\" />\n          </div>\n\n          <!-- <div class=\"social-links\">\n            <facebook-login appId=\"2349951131937784\" class=\"button btn-facebook\" @login=\"onFBLogin\" @logout=\"onFBLogout\" @sdk-loaded=\"onFBSdkLoaded\" :key=\"fbkey\"></facebook-login>\n            <GoogleLogin class=\"button btn-google\" :params=\"googleLoginParams\" :onSuccess=\"onGLoginSuccess\" :onFailure=\"onGLoginFailure\"></GoogleLogin>\n            <b-link href=\"https://access.line.me/oauth2/v2.1/authorize?response_type=code&client_id=1592490922&redirect_uri=https://www.coffeesign.io/api/auth/lineauth&state=signup12&scope=openid%20email\"><img src=\"/img/social/line.png\"/></b-link>\n            <KakaoLogin api-key=\"b2f99b39dd3b4d340a7c0ef10260c2e4\" :on-success=\"onKakaoLoginSuccess\" :on-failure=\"onKakaoLoginFailure\" />\n          </div> -->\n\n        </div>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nimport axios from 'axios'\nimport jwtDecode from 'jwt-decode'\nimport facebookLogin from 'facebook-login-vuejs'\nimport GoogleLogin from 'vue-google-login'\nimport KakaoLogin from 'vue-kakao-login'\n\nimport { AUTH_REQUEST, AUTH_SUCCESS, AUTH_ERROR, AUTH_MODAL_BTN, AUTH_SET_FB } from '../../store/actions.type'\nimport { authentication } from '../../mixins/authentication'\nimport store from '../../store/store'\nimport { CHANGE_LANGUAGE_ACTION } from '../../store/actions.type'\nimport { LANGUAGES } from '../../i18n'\nimport AuthHeader from './AuthHeader'\nimport Error from '../../components/common/Error.modal'\nimport CustomLoader from '../../components/common/CustomLoader'\n\n// import '../../../scss/custom.scss';\nexport default {\n    name: \"Login\",\n    components: {\n      'custom-loader': CustomLoader,\n      Error, AuthHeader,\n      facebookLogin, GoogleLogin, KakaoLogin\n    },\n    mixins: [authentication],\n    data() {\n      return {\n        form: {\n          email: '',\n          password: '',\n          remember_me: false,\n        },\n        sform: {\n          first_name: '',\n          last_name: '',\n          email: '',\n          password: '',\n          password_confirmation: '',\n          remember_me: false,\n          provider_name: ''\n        },\n        validator: {\n          email: {\n            valid: true,\n            focus: false,\n            blured: false,\n            text: 'Please input a valid Email',\n            error: false,\n            last: ''\n          },\n          password: {\n            valid: true,\n            focus: false,\n            blured: false,\n            text: 'Password must be 6 ~ 12 length characters',\n            error: false,\n            last: ''\n          },\n        },\n        isLoginFailed: false,\n        isShowPassword: false,\n        pageLoading: false,\n        nosidebar: true,\n        languages: LANGUAGES,\n        testval: 'Test',\n\n        /** URL Integration */\n        client_url: process.env.VUE_APP_URL,\n        server_url: process.env.VUE_APP_SERVER_URL,\n        /** Facebook OAuth */\n        FB: undefined,\n        fbAppId: process.env.VUE_APP_FB_APP_ID,\n        isFBSuccess: false,\n        isFBConnected: false,\n        fbkey: 0,\n        /** Google OAuth2 */\n        googleLoginParams: {\n          client_id: process.env.VUE_APP_GOOGLE_CLIENT_ID\n        },\n        /** Line OAuth2 */\n        lineLoginParams: {\n          client_id: process.env.VUE_APP_LINE_CLIENT_ID,\n          scope: process.env.VUE_APP_LINE_SCOPE\n        },\n        /** Kakao OAuth */\n        kakaoLoginParams: {\n          api_key: process.env.VUE_APP_KAKAO_API_KEY\n        }\n      }\n    },\n    computed: {\n      ...mapGetters(['USER', 'loading', 'errors']),\n    },\n    mounted() {\n      this.FB = this.$store.getters.FB      \n\n      if (this.$route.params.email != undefined) {\n        this.onLLoginDone(this.$route.params.email)\n      } else {\n        if (this.FB == null) {\n          this.fbkey += 1\n          return\n        }\n      }\n    },\n    methods: {\n        onLogin(evt) {\n            var vm = this\n            vm.isLoginFailed = false\n            vm.pageLoading = true\n            \n            if (!vm.validate()) {\n              vm.pageLoading = false\n              return\n            }\n\n            vm.login(vm.form)\n              .then(response => {\n                vm.$store.dispatch(AUTH_REQUEST, response.data)\n                  .then(response => {\n                    response && response.data && vm.toHome();\n\n                    vm.pageLoading = !response\n                  })                          \n              })\n              .catch(error => {\n                console.log(error.response)\n                vm.isLoginFailed = true\n                vm.pageLoading = false\n                if (error.response.status == 422) {\n                  vm.$store.dispatch(AUTH_ERROR, error.response.data.errors)\n                } else if (error.response.status == 401) {\n                  var errors = error.response.data.errors\n                  if (errors.email) {\n                    vm.validator.email.error = true\n                    vm.validator.email.text = errors.email[0]\n                    vm.validator.email.last = vm.form.email\n                  } else if (errors.password) {\n                    vm.validator.password.error = true\n                    vm.validator.password.text = errors.password[0]\n                    vm.validator.password.last = vm.form.password\n                  }\n                  vm.$store.dispatch(AUTH_ERROR, error.response.data.errors)\n                  return\n                }\n                vm.$store.dispatch(AUTH_ERROR, ['Error occured while login.'])\n                vm.$bvModal.show('modal-error')\n              })\n        },\n        onShowPassword() {\n          if (this.isShowPassword) {\n            this.isShowPassword = false\n          } else {\n            this.isShowPassword = true\n          }\n        },\n        validate() {\n          var vm = this\n\n          vm.validator.email.blured = true\n          vm.validator.password.blured = true\n\n          if (vm.validEmail(vm.form.email) && vm.validPassword(vm.form.password)) {\n            return true\n          } else {\n            return false\n          }\n        },\n        validEmail(email) {\n            var vm = this\n\n            if (email == vm.validator.email.last) {\n                return\n            }\n\n            vm.validator.email.error = false\n            vm.validator.email.last = ''\n\n            var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            vm.validator.email.valid = re.test(email)\n\n            var isValid = re.test(email)\n            if (isValid) {\n                return true\n            } else {\n                vm.validator.email.valid = false\n                vm.validator.email.text = 'Please input a valid Email'\n                return false\n            }\n        },\n        validPassword(password) {\n            var vm = this\n\n            if (password == vm.validator.password.last) {\n                return\n            }\n\n            vm.validator.password.error = false\n            vm.validator.password.last = ''\n\n            if (password.length < 6 || password.length > 12) {\n                vm.validator.password.valid = false\n                vm.validator.password.text = 'Password must be 6 ~ 12 length characters'\n                return false\n            } else if (!(/[a-z]/.test(password))) {\n                vm.validator.password.valid = false\n                vm.validator.password.text = 'Password must contain at least 1 lower case letter'\n                return false\n            } else if (!(/[A-Z]/.test(password))) {\n                vm.validator.password.valid = false\n                vm.validator.password.text = 'Password must contain at least 1 capital letter'\n                return false\n            } else if (!(/[0-9]/.test(password))) {\n                vm.validator.password.valid = false\n                vm.validator.password.text = 'Password must contain at least 1 number'\n                return false\n            } else if (!(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/.test(password))) {\n                vm.validator.password.valid = false\n                vm.validator.password.text = 'Password must contain at least 1 special character'\n                return false\n            }\n\n            return true\n        },\n\n        /** Facebook OAuth */\n        getFBUserData() {\n            var vm = this\n            vm.FB.api('/me', 'GET', { fields: 'id, name, first_name, last_name, email' },\n                user => {\n                    console.log(\"data api\", user)\n\n                    vm.personalID = user.id\n                    vm.sform.email = user.email\n                    vm.sform.password = 'fbCSpwd1!'\n                    vm.sform.provider_name = 'facebook'\n                    vm.sform.first_name = user.first_name || ' '\n                    vm.sform.last_name = user.last_name || ' '\n\n                    if (vm.isFBSuccess && vm.isFBConnected) {\n                        vm.loginWithSocial()\n                    }\n                }\n            )\n        },\n        onFBSdkLoaded(payload) {\n            this.isFBConnected = payload.isFBConnected\n            this.FB = payload.FB\n            this.$store.dispatch(AUTH_SET_FB, payload.FB)\n            if (this.isFBConnected) {\n                this.getFBUserData()\n            }\n        },\n        onFBLogin() {\n            this.isFBConnected = true\n            this.isFBSuccess = true\n            this.getFBUserData()\n        },\n        onFBLogout() {\n            this.isFBConnected = false\n        },\n\n        /** Google OAuth */\n        onGLoginSuccess(gUser) {\n            var vm = this\n            var profile = gUser.getBasicProfile()\n\n            vm.sform.email = profile.getEmail()\n            vm.sform.password = 'gCSpwd2@'\n            vm.sform.provider_name = 'google'\n            vm.sform.first_name = profile.getGivenName() || ' '\n            vm.sform.last_name = profile.getFamilyName() || ' '\n            \n            vm.loginWithSocial()\n        },\n        onGLoginFailure(error) {\n            console.log(error)\n        },\n\n        /** Line OAuth */\n        onLLoginDone(email) {\n            var vm = this\n\n            vm.sform.email = email\n            vm.sform.password = 'lCSpwd2@'\n            vm.sform.provider_name = 'line'\n            vm.sform.first_name = ' '\n            vm.sform.last_name = ' '\n\n            vm.form.email = email\n            vm.form.password = 'lCSpwd2@'\n\n            // vm.onLogin()\n            vm.loginWithSocial()\n        },\n\n        /** Kakao OAuth */\n        onKakaoLoginSuccess(data) {\n            var vm = this\n            axios.post(vm.server_url+'/api/auth/kprofile', {\n                'token_type': data.token_type,\n                'access_token': data.access_token\n            }, {\n                header: null\n            }).then(response => {\n                console.log(response.data)\n                vm.sform.email = response.data.kakao_account.email\n                vm.sform.password = 'KCSpwd2@'\n                vm.sform.provider_name = 'kakao'\n                vm.sform.first_name = response.data.properties.nickname || ' '\n                vm.sform.last_name = ' '\n\n                vm.loginWithSocial()\n            })\n        },\n        onKakaoLoginFailure(error) {\n            console.log(error)\n        },\n\n        /** Social OAuth Integration */\n        loginWithSocial() {\n            var vm = this\n            vm.isLoginFailed = false\n            vm.pageLoading = true\n\n            vm.login(vm.sform)\n                .then(response => {\n                    vm.$store.dispatch(AUTH_REQUEST, response.data)\n                    vm.clearSForm()\n                    vm.toHome()\n\n                    vm.pageLoading = false\n                })\n                .catch(error => {\n                    if (error.response.status == 404) {\n                        vm.signupWithSocial()\n                        return\n                    } else if (error.response.status == 422) {\n                        vm.clearSForm()\n                    } else if (error.response.status == 401) {\n                        vm.clearSForm()\n                    } else {\n                        vm.clearSForm()\n                    }\n                    vm.isLoginFailed = true\n                    vm.pageLoading = false\n                    if (error.response.data.errors.email) {\n                        vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.email)\n                    } else if (error.response.data.errors.password) {\n                        vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.password)\n                    } else {\n                        vm.$store.dispatch(AUTH_ERROR, [\"Error occured while social log in\"])\n                    }\n\n                    vm.$bvModal.show('modal-error')\n                })\n        },\n        signupWithSocial() {\n            var vm = this\n            vm.sform.password_confirmation = vm.sform.password\n\n            localStorage.setItem('signup-form', JSON.stringify(vm.sform))\n\n            vm.signup(vm.sform)\n                .then(response => {\n                    vm.loginAfterSocialSignup()\n                })\n                .catch(error => {\n                    vm.clearSForm()\n\n                    if (error.response.data.errors.email) {\n                        vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.email)\n                    } else if (error.response.data.errors.password) {\n                        vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.password)\n                    } else {\n                        vm.$store.dispatch(AUTH_ERROR, [\"Error occured while social sign up\"])\n                    }\n\n                    vm.$bvModal.show('modal-error')\n                })\n        },\n        loginAfterSocialSignup() {\n            var vm = this\n            vm.isLoginFailed = false\n            vm.pageLoading = true\n\n            vm.login(vm.sform)\n                .then(response => {\n                    vm.$store.dispatch(AUTH_REQUEST, response.data)\n                    vm.clearSForm()\n                    vm.toHome()\n\n                    vm.pageLoading = false\n                })\n                .catch(error => {\n                    vm.clearSForm()\n                    vm.isLoginFailed = true\n                    vm.pageLoading = false\n\n                    if (error.response.data.errors.email) {\n                        vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.email)\n                    } else if (error.response.data.errors.password) {\n                        vm.$store.dispatch(AUTH_ERROR, error.response.data.errors.password)\n                    } else {\n                        vm.$store.dispatch(AUTH_ERROR, [\"Error occured while log in\"])\n                    }\n\n                    vm.$bvModal.show('modal-error')\n                })\n        },\n        toSignup() {\n            this.$router.push({ name: 'Signup' })\n        },\n        toPassword() {\n            this.$router.push({ name: 'ForgotPassword' })\n        },\n        toHome() {\n            this.$router.push({ name: 'LandingPage' })\n        },\n        toUpload() {\n          \n        },\n        stringToURL(str) {\n          return encodeURIComponent(str)\n        },\n        clearSForm() {\n            var vm = this\n            vm.sform.first_name = ''\n            vm.sform.last_name = ''\n            vm.sform.email = ''\n            vm.sform.password = ''\n            vm.sform.remember_me = false\n            vm.sform.provider_name = ''\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n// @import \"./authentication.scss\";\n  .text {\n    position: absolute;\n    z-index: 999;\n    margin: 0 auto;\n    left: 0;\n    right: 0;        \n    text-align: center;\n    top: 50%; /* Adjust this value to move the positioned div up and down */\n    background: rgba(224, 224, 224, 0.2);\n    width: 100%; /* Set the width of the positioned div */\n    height: 50%;\n  }\n  .text2 {\n    position: absolute;\n    z-index: 999;\n    margin: 0 auto;\n    left: 0;\n    right: 0;        \n    text-align: center;\n    bottom: 50%; /* Adjust this value to move the positioned div up and down */\n    background: rgba(224, 224, 224, 0.2);\n    width: 100%; /* Set the width of the positioned div */\n    height: 50%;\n  }\n</style>\n"],"sourceRoot":"src/views/authentication"}]}