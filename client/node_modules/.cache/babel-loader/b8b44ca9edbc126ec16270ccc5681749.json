{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/components/connect/OneDrive.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/components/connect/OneDrive.vue","mtime":1573548262162},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\nimport UserIcon from \"../UserIcon\";\nimport config from \"../../config/config\";\nimport { extensionToMimeType, convertUrlToFile } from \"../../helpers\";\nexport default {\n  name: \"OneDrive\",\n  components: {\n    UserIcon: UserIcon\n  },\n  props: {\n    prop_files: Object\n  },\n  data: function data() {\n    return {\n      pickerApiLoaded: false,\n      oauthToken: null\n    };\n  },\n  methods: {\n    chooserFile: function chooserFile() {\n      var self = this;\n      var odOptions = {\n        clientId: config.MICROSOFT.CLIENT_ID,\n        action: \"download\",\n        multiSelect: true,\n        openInNewWindow: true,\n        viewType: \"files\",\n        advanced: {\n          /** URL CHANGED */\n          // endpointHint: config.MICROSOFT.endpointHint\n          redirectUri: config.MICROSOFT.redirectUri // queryParameters: \"select=id,name,size,file,folder,photo,@microsoft.graph.downloadUrl\",\n\n        },\n        success: function success(files) {\n          /* success handler */\n          var attachments = files && files.value && files.value.length > 0 && files.value.map(function (v) {\n            // return convertUrlToFile(v, '@microsoft.graph.downloadUrl');\n            return _objectSpread({}, v, {\n              type: extensionToMimeType(\"\".concat(v.name.split(\".\")[1])),\n              downloadUrl: v[\"@microsoft.graph.downloadUrl\"]\n            });\n          });\n          self.$emit(\"addFiles\", attachments, true);\n        },\n        cancel: function cancel() {\n          /* cancel handler */\n          console.log(\"cancel\");\n        },\n        error: function error(_error) {\n          /* error handler */\n          console.log(\"error\", _error);\n        }\n      };\n      OneDrive.open(odOptions);\n    }\n  },\n  mounted: function mounted() {\n    var oneDrive = document.createElement(\"script\");\n    oneDrive.setAttribute(\"type\", \"text/javascript\");\n    oneDrive.setAttribute(\"src\", \"https://js.live.net/v7.2/OneDrive.js\"); // oneDrive.setAttribute(\"id\", \"onedrive-js\");\n    // oneDrive.setAttribute(\"client-id\", config.MICROSOFT.CLIENT_ID);\n\n    document.head.appendChild(oneDrive);\n  }\n};",{"version":3,"sources":["OneDrive.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAOA,OAAA,QAAA;AACA,OAAA,MAAA;AACA,SAAA,mBAAA,EAAA,gBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GALA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,eAAA,EAAA,KADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,UAAA,SAAA,GAAA;AACA,QAAA,QAAA,EAAA,MAAA,CAAA,SAAA,CAAA,SADA;AAEA,QAAA,MAAA,EAAA,UAFA;AAGA,QAAA,WAAA,EAAA,IAHA;AAIA,QAAA,eAAA,EAAA,IAJA;AAKA,QAAA,QAAA,EAAA,OALA;AAMA,QAAA,QAAA,EAAA;AACA;AACA;AACA,UAAA,WAAA,EAAA,MAAA,CAAA,SAAA,CAAA,WAHA,CAIA;;AAJA,SANA;AAYA,QAAA,OAAA,EAAA,iBAAA,KAAA,EAAA;AACA;AACA,cAAA,WAAA,GACA,KAAA,IACA,KAAA,CAAA,KADA,IAEA,KAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAFA,IAGA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA;AACA,qCACA,CADA;AAEA,cAAA,IAAA,EAAA,mBAAA,WAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAFA;AAGA,cAAA,WAAA,EAAA,CAAA,CAAA,8BAAA;AAHA;AAKA,WAPA,CAJA;AAYA,UAAA,IAAA,CAAA,KAAA,CAAA,UAAA,EAAA,WAAA,EAAA,IAAA;AACA,SA3BA;AA4BA,QAAA,MAAA,EAAA,kBAAA;AACA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,SA/BA;AAgCA,QAAA,KAAA,EAAA,eAAA,MAAA,EAAA;AACA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,MAAA;AACA;AAnCA,OAAA;AAqCA,MAAA,QAAA,CAAA,IAAA,CAAA,SAAA;AACA;AAzCA,GAdA;AAyDA,EAAA,OAzDA,qBAyDA;AACA,QAAA,QAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,IAAA,QAAA,CAAA,YAAA,CAAA,MAAA,EAAA,iBAAA;AACA,IAAA,QAAA,CAAA,YAAA,CAAA,KAAA,EAAA,sCAAA,EAHA,CAIA;AACA;;AACA,IAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,QAAA;AACA;AAhEA,CAAA","sourcesContent":["<template>\n  <span v-on:click=\"chooserFile()\">\n    <UserIcon icon=\"onedrive.svg\" class=\"store-src-item\" />\n  </span>\n</template>\n\n<script>\nimport UserIcon from \"../UserIcon\";\nimport config from \"../../config/config\";\nimport { extensionToMimeType, convertUrlToFile } from \"../../helpers\";\n\nexport default {\n  name: \"OneDrive\",\n  components: {\n    UserIcon\n  },\n  props: {\n    prop_files: Object\n  },\n  data() {\n    return {\n      pickerApiLoaded: false,\n      oauthToken: null\n    };\n  },\n  methods: {\n    chooserFile() {\n      let self = this;\n      let odOptions = {\n        clientId: config.MICROSOFT.CLIENT_ID,\n        action: \"download\",\n        multiSelect: true,\n        openInNewWindow: true,\n        viewType: \"files\",\n        advanced: {\n          /** URL CHANGED */\n          // endpointHint: config.MICROSOFT.endpointHint\n          redirectUri: config.MICROSOFT.redirectUri,\n          // queryParameters: \"select=id,name,size,file,folder,photo,@microsoft.graph.downloadUrl\",\n        },\n        success: function(files) {\n          /* success handler */\n          let attachments =\n            files &&\n            files.value &&\n            files.value.length > 0 &&\n            files.value.map(v => {\n              // return convertUrlToFile(v, '@microsoft.graph.downloadUrl');\n              return {\n                ...v,\n                type: extensionToMimeType(`${v.name.split(\".\")[1]}`),\n                downloadUrl: v[\"@microsoft.graph.downloadUrl\"],\n              };\n            });\n          self.$emit(\"addFiles\", attachments, true);\n        },\n        cancel: function() {\n          /* cancel handler */\n          console.log(\"cancel\");\n        },\n        error: function(error) {\n          /* error handler */\n          console.log(\"error\", error);\n        }\n      };\n      OneDrive.open(odOptions);\n    }\n  },\n  mounted() {\n    let oneDrive = document.createElement(\"script\");\n    oneDrive.setAttribute(\"type\", \"text/javascript\");\n    oneDrive.setAttribute(\"src\", \"https://js.live.net/v7.2/OneDrive.js\");\n    // oneDrive.setAttribute(\"id\", \"onedrive-js\");\n    // oneDrive.setAttribute(\"client-id\", config.MICROSOFT.CLIENT_ID);\n    document.head.appendChild(oneDrive);\n  }\n};\n</script>\n"],"sourceRoot":"src/components/connect"}]}