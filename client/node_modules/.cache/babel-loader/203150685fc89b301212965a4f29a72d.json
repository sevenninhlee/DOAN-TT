{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/components/DrawingBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/components/DrawingBoard.vue","mtime":1573548261925},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    paramData: Object,\n    drawSize: Object\n  },\n  data: function data() {\n    return {\n      canvas_id: '',\n      stageSize: {\n        width: this.drawSize.width,\n        height: this.drawSize.height\n      },\n      mouse: {\n        current: {\n          x: 0,\n          y: 0\n        },\n        previous: {\n          x: 0,\n          y: 0\n        },\n        down: false\n      }\n    };\n  },\n  computed: {\n    currentMouse: function currentMouse() {\n      var c = this.$refs[this.canvas_id];\n      var rect = c.getBoundingClientRect();\n      return {\n        x: this.mouse.current.x - rect.left,\n        y: this.mouse.current.y - rect.top\n      };\n    }\n  },\n  mounted: function mounted() {\n    this.canvas_id = 'canvas-' + this.paramData.name;\n  },\n  methods: {\n    draw: function draw(event) {\n      var c = this.$refs[this.canvas_id];\n      var ctx = c.getContext(\"2d\"); // requestAnimationFrame(this.draw);\n\n      if (this.mouse.down) {\n        ctx.clearRect(0, 0, this.drawSize.width, this.drawSize.height);\n        ctx.lineTo(this.currentMouse.x, this.currentMouse.y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n    },\n    handleMouseDown: function handleMouseDown(event) {\n      var c = this.$refs[this.canvas_id];\n      var ctx = c.getContext(\"2d\");\n      this.mouse.down = true;\n      this.mouse.current = {\n        x: event.pageX,\n        y: event.pageY\n      };\n      ctx.moveTo(this.currentMouse.x, this.currentMouse.y);\n    },\n    handleMouseOut: function handleMouseOut(event) {\n      this.mouse.down = false;\n    },\n    handleMouseUp: function handleMouseUp() {\n      this.mouse.down = false;\n    },\n    handleMouseMove: function handleMouseMove(event) {\n      this.mouse.current = {\n        x: event.pageX,\n        y: event.pageY\n      };\n      this.draw(event);\n    },\n    getDataURL: function getDataURL() {\n      var c = this.$refs[this.canvas_id];\n      return c.toDataURL('image/svg+xml');\n    }\n  },\n  ready: function ready() {\n    var c = this.$refs[this.canvas_id];\n    var ctx = c.getContext('2d', {\n      antialias: false\n    });\n    ctx.translate(0.5, 0.5);\n    ctx.mozImageSmoothingEnabled = false;\n    ctx.webkitImageSmoothingEnabled = false;\n    ctx.msImageSmoothingEnabled = false;\n    ctx.imageSmoothingEnabled = false; // this.draw();\n  }\n};",{"version":3,"sources":["DrawingBoard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"canvas-border\">\n    <canvas\n      :ref=\"canvas_id\"\n      v-on:mousedown=\"handleMouseDown\"\n      v-on:mouseout=\"handleMouseOut\"\n      v-on:mouseup=\"handleMouseUp\"\n      v-on:mousemove=\"handleMouseMove\"\n      v-bind=\"stageSize\"\n    ></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    paramData: Object,\n    drawSize: Object\n  },\n  data: function() {\n    return {\n      canvas_id: '',\n      stageSize: {\n        width: this.drawSize.width,\n        height: this.drawSize.height\n      },\n      mouse: {\n        current: {\n          x: 0,\n          y: 0\n        },\n        previous: {\n          x: 0,\n          y: 0\n        },\n        down: false\n      }\n    };\n  },\n  computed: {\n    currentMouse: function() {\n      var c = this.$refs[this.canvas_id];\n      var rect = c.getBoundingClientRect();\n\n      return {\n        x: this.mouse.current.x - rect.left,\n        y: this.mouse.current.y - rect.top\n      };\n    }\n  },\n  mounted() {\n    this.canvas_id = 'canvas-' + this.paramData.name\n  },\n  methods: {\n    draw: function(event) {\n      var c = this.$refs[this.canvas_id];\n      var ctx = c.getContext(\"2d\");\n      // requestAnimationFrame(this.draw);\n\n      if (this.mouse.down) {\n        ctx.clearRect(0, 0, this.drawSize.width, this.drawSize.height);\n\n        ctx.lineTo(this.currentMouse.x, this.currentMouse.y);\n        ctx.strokeStyle = \"black\";\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n    },\n    handleMouseDown: function(event) {\n      var c = this.$refs[this.canvas_id];\n      var ctx = c.getContext(\"2d\");\n      \n      this.mouse.down = true;\n      this.mouse.current = {\n        x: event.pageX,\n        y: event.pageY\n      };\n      \n      ctx.moveTo(this.currentMouse.x, this.currentMouse.y);\n    },\n    handleMouseOut: function(event) {\n      this.mouse.down = false;\n    },\n    handleMouseUp: function() {\n      this.mouse.down = false;\n    },\n    handleMouseMove: function(event) {\n      this.mouse.current = {\n        x: event.pageX,\n        y: event.pageY\n      };\n\n      this.draw(event);\n    },\n    getDataURL: function () {\n      var c = this.$refs[this.canvas_id];\n      return c.toDataURL('image/svg+xml')\n    }\n  },\n  ready: function() {\n    var c = this.$refs[this.canvas_id];\n    let ctx = c.getContext('2d', {antialias: false});\n    ctx.translate(0.5, 0.5);\n    ctx.mozImageSmoothingEnabled = false;\n    ctx.webkitImageSmoothingEnabled = false;\n    ctx.msImageSmoothingEnabled = false;\n    ctx.imageSmoothingEnabled = false;\n    // this.draw();\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.canvas-border{\n  border: solid 2px #ebebeb;\n}\n</style>"],"sourceRoot":"src/components"}]}