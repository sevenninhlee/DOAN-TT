{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/views/document/AddRecipients.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/views/document/AddRecipients.vue","mtime":1573548269900},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserIcon from \"../../components/UserIcon\";\nimport VueTelInput from \"vue-tel-input\";\nimport { HeaderDropdown } from \"@coreui/vue\";\nimport { checkForm } from \"../../mixins/validate.form\";\nimport { mapGetters, mapState } from \"vuex\";\nimport config from \"../../config/config\"; // import  \"../../helpers/kakao.min\";\n\nimport store from \"../../store/store\"; // import KakaoLogin from 'vue-kakao-login'\n\nimport { RECIPIENTS_ADD, RECIPIENTS_UPDATE, GET_EMAIL_CLIENT, GET_DOCS, RECIPIENTS_REMOVE, GET_FRIENDS_KAKAO_REQUEST } from \"../../store/actions.type\";\nexport default {\n  name: \"AddRecipients\",\n  components: {\n    UserIcon: UserIcon,\n    VueTelInput: VueTelInput,\n    HeaderDropdown: HeaderDropdown // KakaoLogin\n\n  },\n  mixins: [checkForm],\n  data: function data() {\n    return {\n      togglePress: false,\n      error_flag: false,\n      submit: true,\n      recipients: [{\n        sign_type_name: \"Needs to Sign\",\n        action: \"sign\",\n        com_type: true,\n        name: \"\",\n        email: \"\",\n        phone: \"Select a friend\",\n        set_password: false,\n        password: \"\",\n        confirm_password: \"\",\n        nickname: \"Select a friend\",\n        uuid: \"\"\n      }],\n      sign_types: [{\n        value: \"sign\",\n        name: \"Needs to Sign\",\n        class: \"fa fa-pencil\"\n      }, {\n        value: \"copy\",\n        name: \"Receives a Copy\",\n        class: \"fa fa-cc\"\n      }, {\n        value: \"signer\",\n        name: \"In personal signer\",\n        class: \"fa fa-eye\"\n      }],\n      documents: [{\n        id: 1,\n        doc_name: \"Continuous Improvement lorem ipsum sit dollor amet.doc\",\n        doc_pages: 5\n      }, {\n        id: 2,\n        doc_name: \"Ad cum numquam efficiantur.pdf\",\n        doc_pages: 1\n      }],\n      friends: [],\n      checkEmailClient: false,\n      isUpdate: false,\n      pageLoading: false,\n      accessToken: ''\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    emailClients: \"getEmailClients\",\n    getRecipients: \"getRecipients\",\n    getDocuments: \"getDocuments\"\n  }), {\n    recipientName: function recipientName() {\n      return this.$t(\"docsign.recipients.placeholder.recipient\");\n    },\n    emailAddress: function emailAddress() {\n      return this.$t(\"docsign.recipients.placeholder.email\");\n    },\n    password: function password() {\n      return this.$t(\"docsign.recipients.placeholder.password\");\n    },\n    confirmPassword: function confirmPassword() {\n      return this.$t(\"docsign.recipients.placeholder.confirm\");\n    }\n  }),\n  created: function created() {},\n  mounted: function mounted() {\n    var _this = this;\n\n    var scriptId = \"kakao_login\";\n    var isExist = !!document.getElementById(scriptId);\n\n    if (!isExist) {\n      var script = document.createElement(\"script\");\n      script.src = \"https://developers.kakao.com/sdk/js/kakao.min.js\";\n\n      script.onload = function () {\n        return _this.initiate(_this);\n      }; // script.onerror = error => this.handleError(error)\n\n\n      script.id = scriptId;\n      document.getElementsByTagName(\"head\")[0].appendChild(script);\n    }\n\n    store.dispatch(GET_EMAIL_CLIENT);\n    store.dispatch(GET_DOCS, this.$route.query.document_id).then(function (res) {\n      var up_recipients = _this.getRecipients;\n\n      if (up_recipients && Object.keys(up_recipients).length != 0) {\n        _this.isUpdate = true;\n        _this.recipients = [];\n        up_recipients.map(function (value, index) {\n          _this.recipients.push(value);\n        });\n      }\n\n      var up_documents = _this.getDocuments;\n\n      if (up_documents && Object.keys(up_documents).length != 0) {\n        _this.documents = [];\n        up_documents.map(function (value, index) {\n          var data = Object.assign({}, {\n            id: value.id,\n            doc_name: value.document_name,\n            doc_pages: 3\n          });\n\n          _this.documents.push(data);\n        });\n      }\n    }).catch(function (err) {\n      _this.$router.push(\"/docu-sign/add-document\");\n    });\n  },\n  methods: {\n    initiate: function initiate(comp) {\n      Kakao.init(config.KAKAO.javascriptKey);\n      comp.accessToken = Kakao.Auth.getAccessToken();\n      console.log('comp.accessToken', comp.accessToken);\n\n      if (comp.accessToken) {\n        comp.getTalkFriends();\n      }\n    },\n    loginWithKakao: function loginWithKakao(com_type, index) {\n      var _self = this;\n\n      _self.recipients[index].com_type = false;\n\n      if (!_self.accessToken) {\n        Kakao.Auth.login({\n          scope: \"talk_message,friends\",\n          success: function success(resLogin) {\n            _self.accessToken = Kakao.Auth.getAccessToken();\n            console.log(\"===login\", resLogin);\n\n            _self.getTalkFriends();\n          },\n          fail: function fail(res) {\n            console.log(\"===fail\", res);\n            Kakao.Auth.logout();\n\n            if (res && res.msg) {\n              _self.$awn.alert(res.msg, {\n                position: \"bottom-left\",\n                labels: {\n                  alert: \"Danger Message\"\n                }\n              });\n            }\n          }\n        });\n      } else {\n        _self.getTalkFriends();\n      }\n    },\n    getTalkFriends: function getTalkFriends() {\n      var _self = this;\n\n      Kakao.API.request({\n        url: \"/v1/api/talk/friends\",\n        success: function () {\n          var _success = _asyncToGenerator(\n          /*#__PURE__*/\n          regeneratorRuntime.mark(function _callee(res) {\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    console.log('friend=======', res);\n                    _self.friends = [];\n\n                    if (res && res.elements) {\n                      _self.friends = res.elements;\n                    }\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function success(_x) {\n            return _success.apply(this, arguments);\n          }\n\n          return success;\n        }(),\n        fail: function fail(res) {\n          console.log('res____', res);\n          Kakao.Auth.logout();\n\n          if (res && res.msg) {\n            _self.$awn.alert(res.msg, {\n              position: \"bottom-left\",\n              labels: {\n                alert: \"Danger Message\"\n              }\n            });\n          } // Kakao.Auth.getRefreshToken()\n          // _self.getTalkFriends()\n\n        }\n      });\n    },\n    onKakaoLoginSuccess: function onKakaoLoginSuccess(data) {\n      store.dispatch(GET_FRIENDS_KAKAO_REQUEST, data).then(function (res) {\n        console.log(\"res-----\", res);\n      }).catch(function (err) {\n        console.log(\"err____\", err);\n      });\n    },\n    onKakaoLoginFailure: function onKakaoLoginFailure(data) {\n      console.log(\"err......\", data);\n    },\n    changeSignTypeValue: function changeSignTypeValue(value, index, name) {\n      this.recipients[index].action = value;\n      this.recipients[index].sign_type_name = name;\n    },\n    changeFriendTypeValue: function changeFriendTypeValue(value, index, name) {\n      this.recipients[index].uuid = value;\n      this.recipients[index].phone = name;\n      this.recipients[index].nickname = name;\n    },\n    getTypeIcon: function getTypeIcon(_type) {\n      if (_type == \"Needs to Sign\") {\n        return \"fa-pencil\";\n      } else if (_type == \"Receives a Copy\") {\n        return \"fa-cc\";\n      } else if (_type == \"In personal signer\") {\n        return \"fa-eye\";\n      }\n    },\n    getFileType: function getFileType(fileName) {\n      return \"img/icons/\" + fileName.split(\".\").pop() + \".svg\";\n    },\n    validateState: function validateState(ref) {\n      if (this.veeFields[ref] && (this.veeFields[ref].dirty || this.veeFields[ref].validated)) {\n        return !this.veeErrors.has(ref);\n      }\n\n      return null;\n    },\n    moveNextPage: function moveNextPage() {\n      var _this2 = this;\n\n      var vm = this;\n      var isRequiredPass = false;\n      var isConfPass = false;\n      var isRequiredEmail = false;\n      var isEmail = false;\n      var emailClient = false;\n      vm.error_flag = true;\n      var err_array = [];\n      vm.recipients.map(function (value, index) {\n        if (value.com_type) {\n          isRequiredEmail = vm.isRequired(value.email, vm.error_flag);\n          isEmail = !vm.isEmail(value.email);\n        }\n\n        if (value.set_password) {\n          isRequiredPass = vm.isRequired(value.password, vm.error_flag);\n          isConfPass = !vm.isConfirmPass(value.password, value.confirm_password);\n        } else {\n          isRequiredPass = false;\n          isConfPass = false;\n        }\n\n        if (value.sign_type_name == \"In personal signer\") {\n          vm.checkEmailClient = true;\n          emailClient = !vm.isCheckEmailClient(value.email, vm.emailClients);\n          var emailData = vm.emailClients.filter(function (value2, key) {\n            return value2.email === value.email;\n          });\n          Object.assign(vm.recipients[index], {\n            user_id: emailData[0] ? emailData[0].id : null\n          });\n        } else {\n          emailClient = false;\n        } // console.log( vm.isRequired(value.name, vm.error_flag), vm.isRequired(value.email, vm.error_flag), !vm.isEmail(value.email), isRequiredPass, isConfPass, emailClient)\n\n\n        vm.isRequired(value.name, vm.error_flag) || isRequiredEmail || isEmail || isRequiredPass || isConfPass || emailClient ? err_array.push(false) : err_array.push(true);\n      });\n      var data = {\n        recipients: vm.recipients,\n        documents: vm.documents,\n        accessToken: vm.accessToken\n      };\n\n      if (err_array.indexOf(false) == -1) {\n        if (!vm.isUpdate) {\n          store.dispatch(RECIPIENTS_ADD, data).then(function (res) {\n            _this2.$router.push(\"/docu-sign/prepare?document_id=\" + _this2.$route.query.document_id);\n\n            vm.pageLoading = true;\n          }).catch(function (err) {\n            console.log(\"err\", err);\n          });\n        } else {\n          store.dispatch(RECIPIENTS_UPDATE, data).then(function (res) {\n            _this2.$router.push(\"/docu-sign/prepare?document_id=\" + _this2.$route.query.document_id);\n\n            vm.pageLoading = true;\n          }).catch(function (err) {\n            console.log(\"err\", err);\n          });\n        }\n      }\n    },\n    moveBackPage: function moveBackPage() {\n      this.$router.push(\"/docu-sign/add-document?document_id=\" + this.$route.query.document_id);\n    },\n    addRecipient: function addRecipient() {\n      this.recipients.push({\n        sign_type_name: \"Needs to Sign\",\n        action: \"sign\",\n        com_type: true,\n        name: \"\",\n        email: \"\",\n        phone: \"Select a friend\",\n        set_password: false,\n        password: \"\",\n        confirm_password: \"\",\n        nickname: \"Select a friend\",\n        uuid: \"\"\n      });\n    },\n    removeRecipient: function removeRecipient(index, reci_id) {\n      var _this3 = this;\n\n      if (reci_id) {\n        store.dispatch(RECIPIENTS_REMOVE, reci_id).then(function (resp) {\n          if (resp && resp.status) {\n            _this3.recipients.splice(index, 1);\n          } else {\n            window.confirm(\"Remove file fail\");\n          }\n        });\n      } else {\n        this.recipients.splice(index, 1);\n      }\n    },\n    converSignTypes: function converSignTypes(_value) {\n      var data = this.sign_types.filter(function (animal) {\n        return animal.value === _value;\n      });\n      return data[0].name;\n    }\n  }\n};",{"version":3,"sources":["AddRecipients.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app flex-row\">\n    <div class=\"w-100\">\n      <h1>{{ $t(\"layout.documents.header.recipients\") }}</h1>\n      <hr class=\"mb-4\" />\n      <div class=\"row\">\n        <div class=\"col-md-8\">\n          <div class=\"recipient\" v-for=\"(recipient, index) in recipients\" :key=\"index\">\n            <div class=\"recipient-head\">\n              <span class=\"name\">{{ $t(\"docsign.recipients.title\") }} #{{index+1}}</span>\n              <span v-on:click=\"removeRecipient(index, recipient.id)\">\n                <UserIcon icon=\"delete.svg\" :button=\"true\" />\n              </span>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <ul class=\"user-custom-select\" :id=\"`user_select_${index+1}`\">\n                  <HeaderDropdown>\n                    <template slot=\"header\">\n                      <i class=\"fa\" :class=\"getTypeIcon(recipient.sign_type_name)\"></i>\n                      {{$t(recipient.sign_type_name)}}\n                    </template>\n                    <template slot=\"dropdown\">\n                      <b-dropdown-item\n                        v-for=\"(sign, key) in sign_types\"\n                        :key=\"key\"\n                        :value=\"sign.value\"\n                        @click=\"changeSignTypeValue(sign.value, index, sign.name)\"\n                      >\n                        <i :class=\"sign.class\"></i>\n                        {{$t(sign.name)}}\n                      </b-dropdown-item>\n                    </template>\n                  </HeaderDropdown>\n                </ul>\n              </div>\n              <div class=\"col-md-6\">\n                <b-form-group>\n                  <b-button\n                    :variant=\"recipient.com_type?'primary':'outline-primary'\"\n                    class=\"w-50\"\n                    :pressed.sync=\"recipient.com_type\"\n                  >{{ $t(\"docsign.recipients.button.email\") }}</b-button>\n                  <b-button\n                    :variant=\"!recipient.com_type?'primary':'outline-primary'\"\n                    class=\"w-50\"\n                    :pressed.sync=\"recipient.com_type\"\n                  >\n                    <!-- @click=\"loginWithKakao(recipient.com_type, index)\" -->\n                    {{ $t(\"docsign.recipients.button.talk\") }}\n                    <!-- <KakaoLogin api-key=\"6c4e91afbb15437d319ac9c9d38f1ac5\" :on-success=\"onKakaoLoginSuccess\" :on-failure=\"onKakaoLoginFailure\" /> -->\n                  </b-button>\n                </b-form-group>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <b-form-group>\n                  <b-input-group\n                    v-bind:class=\"{'input-error':isRequired(recipient.name, error_flag)}\"\n                  >\n                    <b-input-group-prepend>\n                      <b-input-group-text>\n                        <i class=\"fa fa-user\"></i>\n                      </b-input-group-text>\n                    </b-input-group-prepend>\n                    <b-form-input\n                      type=\"text\"\n                      :placeholder=\"recipientName\"\n                      name=\"name\"\n                      v-model=\"recipient.name\"\n                    ></b-form-input>\n                  </b-input-group>\n                  <div\n                    v-if=\"isRequired(recipient.name, error_flag)\"\n                    class=\"error-text\"\n                  >Please input Recipient Name</div>\n                </b-form-group>\n              </div>\n              <div class=\"col-md-6\">\n                <div v-if=\"recipient.com_type\">\n                  <b-form-group>\n                    <b-input-group\n                      :class=\"{'input-error':isRequired(recipient.email, error_flag) || (recipient &&recipient.email && recipient.email.length > 0 && !isEmail(recipient.email))}\"\n                    >\n                      <b-input-group-prepend>\n                        <b-input-group-text>\n                          <i class=\"fa fa-envelope\"></i>\n                        </b-input-group-text>\n                      </b-input-group-prepend>\n                      <b-form-input\n                        type=\"email\"\n                        :placeholder=\"emailAddress\"\n                        autocomplete=\"email\"\n                        name=\"email\"\n                        v-model=\"recipient.email\"\n                      ></b-form-input>\n                    </b-input-group>\n                    <div\n                      v-if=\"recipient &&recipient.email && recipient.email.length > 0 && !isEmail(recipient.email)\"\n                      class=\"error-text\"\n                    >Please enter valid email</div>\n                    <div\n                      v-else-if=\"isRequired(recipient.email, error_flag)\"\n                      class=\"error-text\"\n                    >Please input Email</div>\n                    <div\n                      v-else-if=\"error_flag && recipient.sign_type_name == 'In personal signer' && checkEmailClient && !isCheckEmailClient(recipient.email, emailClients)\"\n                      class=\"error-text\"\n                    >Email does not exist in the system</div>\n                  </b-form-group>\n                </div>\n                <div v-if=\"!recipient.com_type\">\n                  <b-form-group>\n                    <ul class=\"user-custom-select\" :id=\"`user_select_${index+1}`\">\n                      <HeaderDropdown v-if=\"friends.length > 0\"> \n                        <template slot=\"header\">\n                          <i class=\"fa fa-user\"></i>\n                          {{recipient.nickname}}\n                        </template>\n                        <template slot=\"dropdown\">\n                          <b-dropdown-item\n                            v-for=\"(friend, key) in friends\"\n                            :key=\"key\"\n                            :value=\"friend.uuid\"\n                            @click=\"changeFriendTypeValue(friend.uuid, index, friend.profile_nickname)\"\n                          >\n                          <i class=\"fa fa-user\"></i>\n                            {{friend.profile_nickname}}\n                          </b-dropdown-item>\n                        </template>\n                      </HeaderDropdown>\n                      <li v-else style=\"padding: 9px;width: 100%;\"> \n                        <i class=\"fa fa-user\" style=\"margin-right: 17px;color: #9ea0a5;\"></i>\n                        <span v-if=\"recipient && recipient.nickname\" disabled>{{ recipient.nickname }}</span>\n                        <span v-else>Data not found</span>\n                        \n                      </li>\n                    </ul>\n                  </b-form-group>\n                </div>\n              </div>\n            </div>\n            <b-form-group>\n              <b-form-checkbox\n                v-model=\"recipient.set_password\"\n              >{{ $t(\"docsign.recipients.password\") }}</b-form-checkbox>\n            </b-form-group>\n            <div class=\"row\" v-if=\"recipient.set_password\">\n              <div class=\"col-md-6\">\n                <b-form-group>\n                  <b-input-group\n                    :class=\"{'input-error':isRequired(recipient.password, error_flag)}\"\n                  >\n                    <b-input-group-prepend>\n                      <b-input-group-text>\n                        <!-- <i class=\"fa fa-lock\"></i> -->\n                        <UserIcon icon=\"pass.svg\"></UserIcon>\n                      </b-input-group-text>\n                    </b-input-group-prepend>\n                    <b-form-input\n                      type=\"password\"\n                      :placeholder=\"password\"\n                      autocomplete=\"current-password\"\n                      name=\"password\"\n                      v-model=\"recipient.password\"\n                    ></b-form-input>\n                  </b-input-group>\n                  <div\n                    v-if=\"isRequired(recipient.password, error_flag)\"\n                    class=\"error-text\"\n                  >Please input Password</div>\n                </b-form-group>\n              </div>\n              <div class=\"col-md-6\">\n                <b-form-group>\n                  <b-input-group\n                    :class=\"{'input-error':error_flag && !isConfirmPass(recipient.password, recipient.confirm_password)}\"\n                  >\n                    <b-input-group-prepend>\n                      <b-input-group-text>\n                        <!-- <i class=\"fa fa-lock\"></i> -->\n                        <UserIcon icon=\"pass.svg\"></UserIcon>\n                      </b-input-group-text>\n                    </b-input-group-prepend>\n                    <b-form-input\n                      type=\"password\"\n                      :placeholder=\"confirmPassword\"\n                      autocomplete=\"current-password\"\n                      name=\"confirm_password\"\n                      v-model=\"recipient.confirm_password\"\n                    ></b-form-input>\n                  </b-input-group>\n                  <div\n                    v-if=\"error_flag && !isConfirmPass(recipient.password, recipient.confirm_password)\"\n                    class=\"error-text\"\n                  >Passwords don't match</div>\n                </b-form-group>\n              </div>\n            </div>\n          </div>\n          <button class=\"btn btn-primary min-width-230px mt-4 mb-3\" v-on:click=\"addRecipient()\">\n            <UserIcon icon=\"add-recipien.svg\" class=\"mr-2\" />\n            {{ $t(\"docsign.recipients.recipient\") }}\n          </button>\n        </div>\n        <div class=\"col-md-4\">\n          <div class=\"document\" v-for=\"(doc, index) in documents\" :key=\"index\">\n            <div class=\"document-div\">\n              <img v-bind:src=\"getFileType(doc.doc_name)\" class=\"folder-2\" />\n              <div class=\"docu-title\">{{doc.doc_name}}</div>\n              <!-- <div class=\"docu-pages\">{{doc.pages}} {{doc.pages>1?\"pages\":\"page\"}}</div> -->\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-end mt-4 flex-wrap\">\n            <button\n              class=\"btn btn-outline-primary min-width-124px m-1\"\n              v-on:click=\"moveBackPage()\"\n            >{{ $t(\"docsign.back\") }}</button>\n            <button\n              class=\"btn btn-primary min-width-124px m-1\"\n              v-on:click=\"moveNextPage()\"\n              style=\"position: relative\"\n            >\n              <i\n                v-if=\"pageLoading\"\n                class=\"fa fa-spinner fa-spin fa-3x\"\n                style=\"position: absolute; top: 0; left: 33%;\"\n              />\n              {{ $t(\"docsign.next\") }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport UserIcon from \"../../components/UserIcon\";\nimport VueTelInput from \"vue-tel-input\";\nimport { HeaderDropdown } from \"@coreui/vue\";\nimport { checkForm } from \"../../mixins/validate.form\";\nimport { mapGetters, mapState } from \"vuex\";\nimport config from \"../../config/config\";\n// import  \"../../helpers/kakao.min\";\nimport store from \"../../store/store\";\n// import KakaoLogin from 'vue-kakao-login'\nimport {\n  RECIPIENTS_ADD,\n  RECIPIENTS_UPDATE,\n  GET_EMAIL_CLIENT,\n  GET_DOCS,\n  RECIPIENTS_REMOVE,\n  GET_FRIENDS_KAKAO_REQUEST\n} from \"../../store/actions.type\";\nexport default {\n  name: \"AddRecipients\",\n  components: {\n    UserIcon,\n    VueTelInput,\n    HeaderDropdown\n    // KakaoLogin\n  },\n  mixins: [checkForm],\n  data() {\n    return {\n      togglePress: false,\n      error_flag: false,\n      submit: true,\n      recipients: [\n        {\n          sign_type_name: \"Needs to Sign\",\n          action: \"sign\",\n          com_type: true,\n          name: \"\",\n          email: \"\",\n          phone: \"Select a friend\",\n          set_password: false,\n          password: \"\",\n          confirm_password: \"\",\n          nickname: \"Select a friend\",\n          uuid: \"\",\n        }\n      ],\n      sign_types: [\n        {\n          value: \"sign\",\n          name: \"Needs to Sign\",\n          class: \"fa fa-pencil\"\n        },\n        {\n          value: \"copy\",\n          name: \"Receives a Copy\",\n          class: \"fa fa-cc\"\n        },\n        {\n          value: \"signer\",\n          name: \"In personal signer\",\n          class: \"fa fa-eye\"\n        }\n      ],\n      documents: [\n        {\n          id: 1,\n          doc_name: \"Continuous Improvement lorem ipsum sit dollor amet.doc\",\n          doc_pages: 5\n        },\n        {\n          id: 2,\n          doc_name: \"Ad cum numquam efficiantur.pdf\",\n          doc_pages: 1\n        }\n      ],\n      friends: [],\n      checkEmailClient: false,\n      isUpdate: false,\n      pageLoading: false,\n      accessToken: '',\n    };\n  },\n  computed: {\n    ...mapGetters({\n      emailClients: \"getEmailClients\",\n      getRecipients: \"getRecipients\",\n      getDocuments: \"getDocuments\"\n    }),\n    recipientName() {\n      return this.$t(\"docsign.recipients.placeholder.recipient\");\n    },\n    emailAddress() {\n      return this.$t(\"docsign.recipients.placeholder.email\");\n    },\n    password() {\n      return this.$t(\"docsign.recipients.placeholder.password\");\n    },\n    confirmPassword() {\n      return this.$t(\"docsign.recipients.placeholder.confirm\");\n    }\n  },\n  created() {},\n  mounted() {\n    const scriptId = \"kakao_login\";\n    const isExist = !!document.getElementById(scriptId)\n    if (!isExist) {\n      const script = document.createElement(\"script\");\n      script.src = `https://developers.kakao.com/sdk/js/kakao.min.js`;\n      script.onload = () => this.initiate(this);\n      // script.onerror = error => this.handleError(error)\n      script.id = scriptId;\n      document.getElementsByTagName(\"head\")[0].appendChild(script);\n    }\n\n    store.dispatch(GET_EMAIL_CLIENT);\n    store\n      .dispatch(GET_DOCS, this.$route.query.document_id)\n      .then(res => {\n        var up_recipients = this.getRecipients;\n        if (up_recipients && Object.keys(up_recipients).length != 0) {\n          this.isUpdate = true;\n          this.recipients = [];\n          up_recipients.map((value, index) => {\n            this.recipients.push(value);\n          });\n        }\n        var up_documents = this.getDocuments;\n        if (up_documents && Object.keys(up_documents).length != 0) {\n          this.documents = [];\n          up_documents.map((value, index) => {\n            var data = Object.assign(\n              {},\n              {\n                id: value.id,\n                doc_name: value.document_name,\n                doc_pages: 3\n              }\n            );\n            this.documents.push(data);\n          });\n        }\n      })\n      .catch(err => {\n        this.$router.push(\"/docu-sign/add-document\");\n      });\n  },\n  methods: {\n    initiate: comp => {\n      Kakao.init(config.KAKAO.javascriptKey);\n      comp.accessToken = Kakao.Auth.getAccessToken();\n      console.log('comp.accessToken', comp.accessToken)\n      if (comp.accessToken) {\n        comp.getTalkFriends()\n      }\n    },\n    loginWithKakao(com_type, index) {\n      let _self = this;\n      _self.recipients[index].com_type = false;\n      if(!_self.accessToken) {\n        Kakao.Auth.login({\n          scope: \"talk_message,friends\",\n          success: function(resLogin) {\n            _self.accessToken = Kakao.Auth.getAccessToken();\n            console.log(\"===login\", resLogin);\n            _self.getTalkFriends();\n          },\n          fail: function(res) {\n            console.log(\"===fail\", res);\n            Kakao.Auth.logout() \n            if(res && res.msg) {\n              _self.$awn.alert(res.msg, {\n                position: \"bottom-left\",\n                labels: {\n                  alert: \"Danger Message\"\n                }\n              });\n            }\n          }\n        });\n      } else {\n        _self.getTalkFriends();\n      }\n    },\n    getTalkFriends(){\n      let _self = this;\n      Kakao.API.request({\n        url: \"/v1/api/talk/friends\",\n        success: async function(res) {\n          console.log('friend=======', res)\n          _self.friends = []\n          if(res && res.elements){\n            _self.friends = res.elements;\n          }\n        },\n        fail: function(res) {\n          console.log('res____', res)\n          Kakao.Auth.logout() \n          if(res && res.msg) {\n            _self.$awn.alert(res.msg, {\n              position: \"bottom-left\",\n              labels: {\n                alert: \"Danger Message\"\n              }\n            });\n          }\n          // Kakao.Auth.getRefreshToken()\n          // _self.getTalkFriends()\n        }\n      });\n    },\n    onKakaoLoginSuccess(data) {\n      store\n        .dispatch(GET_FRIENDS_KAKAO_REQUEST, data)\n        .then(res => {\n          console.log(\"res-----\", res);\n        })\n        .catch(err => {\n          console.log(\"err____\", err);\n        });\n    },\n    onKakaoLoginFailure(data) {\n      console.log(\"err......\", data);\n    },\n    changeSignTypeValue(value, index, name) {\n      this.recipients[index].action = value;\n      this.recipients[index].sign_type_name = name;\n    },\n    changeFriendTypeValue(value, index, name) {\n      this.recipients[index].uuid = value;\n      this.recipients[index].phone = name;\n      this.recipients[index].nickname = name;\n    },\n    getTypeIcon(_type) {\n      if (_type == \"Needs to Sign\") {\n        return \"fa-pencil\";\n      } else if (_type == \"Receives a Copy\") {\n        return \"fa-cc\";\n      } else if (_type == \"In personal signer\") {\n        return \"fa-eye\";\n      }\n    },\n    getFileType(fileName) {\n      return \"img/icons/\" + fileName.split(\".\").pop() + \".svg\";\n    },\n    validateState(ref) {\n      if (\n        this.veeFields[ref] &&\n        (this.veeFields[ref].dirty || this.veeFields[ref].validated)\n      ) {\n        return !this.veeErrors.has(ref);\n      }\n      return null;\n    },\n    moveNextPage() {\n      var vm = this;\n      var isRequiredPass = false;\n      var isConfPass = false;\n      var isRequiredEmail = false;\n      var isEmail = false;\n      var emailClient = false;\n      vm.error_flag = true;\n      var err_array = [];\n\n      vm.recipients.map((value, index) => {\n        if (value.com_type) {\n          isRequiredEmail = vm.isRequired(value.email, vm.error_flag);\n          isEmail = !vm.isEmail(value.email);\n        }\n\n        if (value.set_password) {\n          isRequiredPass = vm.isRequired(value.password, vm.error_flag);\n          isConfPass = !vm.isConfirmPass(\n            value.password,\n            value.confirm_password\n          );\n        } else {\n          isRequiredPass = false;\n          isConfPass = false;\n        }\n\n        if (value.sign_type_name == \"In personal signer\") {\n          vm.checkEmailClient = true;\n          emailClient = !vm.isCheckEmailClient(value.email, vm.emailClients);\n          var emailData = vm.emailClients.filter((value2, key) => {\n            return value2.email === value.email;\n          });\n          Object.assign(vm.recipients[index], {\n            user_id: emailData[0] ? emailData[0].id : null\n          });\n        } else {\n          emailClient = false;\n        }\n        // console.log( vm.isRequired(value.name, vm.error_flag), vm.isRequired(value.email, vm.error_flag), !vm.isEmail(value.email), isRequiredPass, isConfPass, emailClient)\n        vm.isRequired(value.name, vm.error_flag) ||\n        isRequiredEmail ||\n        isEmail ||\n        isRequiredPass ||\n        isConfPass ||\n        emailClient\n          ? err_array.push(false)\n          : err_array.push(true);\n      });\n      const data = {\n        recipients: vm.recipients,\n        documents: vm.documents,\n        accessToken: vm.accessToken\n      };\n      if (err_array.indexOf(false) == -1) {\n        if (!vm.isUpdate) {\n          store\n            .dispatch(RECIPIENTS_ADD, data)\n            .then(res => {\n              this.$router.push(\n                \"/docu-sign/prepare?document_id=\" +\n                  this.$route.query.document_id\n              );\n              vm.pageLoading = true;\n            })\n            .catch(err => {\n              console.log(\"err\", err);\n            });\n        } else {\n          store\n            .dispatch(RECIPIENTS_UPDATE, data)\n            .then(res => {\n              this.$router.push(\n                \"/docu-sign/prepare?document_id=\" +\n                  this.$route.query.document_id\n              );\n              vm.pageLoading = true;\n            })\n            .catch(err => {\n              console.log(\"err\", err);\n            });\n        }\n      }\n    },\n    moveBackPage() {\n      this.$router.push(\n        \"/docu-sign/add-document?document_id=\" + this.$route.query.document_id\n      );\n    },\n    addRecipient() {\n      this.recipients.push({\n        sign_type_name: \"Needs to Sign\",\n        action: \"sign\",\n        com_type: true,\n        name: \"\",\n        email: \"\",\n        phone: \"Select a friend\",\n        set_password: false,\n        password: \"\",\n        confirm_password: \"\",\n        nickname: \"Select a friend\",\n        uuid: \"\"\n      });\n    },\n    removeRecipient(index, reci_id) {\n      if (reci_id) {\n        store.dispatch(RECIPIENTS_REMOVE, reci_id).then(resp => {\n          if (resp && resp.status) {\n            this.recipients.splice(index, 1);\n          } else {\n            window.confirm(\"Remove file fail\");\n          }\n        });\n      } else {\n        this.recipients.splice(index, 1);\n      }\n    },\n    converSignTypes(_value) {\n      var data = this.sign_types.filter(animal => {\n        return animal.value === _value;\n      });\n      return data[0].name;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"./AddRecipients.scss\";\n</style>\n\n"],"sourceRoot":"src/views/document"}]}