{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/containers/PaymentContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/containers/PaymentContainer.vue","mtime":1573548264971},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Header as AppHeader, SidebarToggler, Sidebar as AppSidebar, SidebarFooter, SidebarForm, SidebarHeader, SidebarMinimizer, SidebarNav, Aside as AppAside, AsideToggler, Footer as TheFooter } from \"@coreui/vue\";\nimport DefaultHeaderDropdownAccnt from \"./DefaultHeaderDropdownAccnt\";\nimport UserIcon from \"../components/UserIcon\";\nimport UpgradePlan from \"./UpgradePlan\";\nimport Logout from \"../components/Logout\";\nimport AppLogo from \"../components/AppLogo\";\nimport SideFolders from \"../components/SideFolders\";\nimport SideFoldersMove from \"../components/SideFoldersMove\";\nimport { EventBus } from \"../config/event-bus\";\nimport { landingNavList } from \"../helpers/defaultValue\";\nimport { restructure } from \"../helpers/restructure\";\nimport store from \"../store/store\";\nimport { mapGetters } from \"vuex\";\nimport { FOLDER_GET_REQUEST, FOLDER_ADD_REQUEST, FOLDER_RENAME_REQUEST, FOLDER_DELETE_REQUEST } from \"../store/actions.type\";\nexport default {\n  name: \"DocumentsContainer\",\n  components: {\n    SideFolders: SideFolders,\n    AppLogo: AppLogo,\n    Logout: Logout,\n    UserIcon: UserIcon,\n    UpgradePlan: UpgradePlan,\n    AsideToggler: AsideToggler,\n    AppHeader: AppHeader,\n    AppSidebar: AppSidebar,\n    AppAside: AppAside,\n    TheFooter: TheFooter,\n    DefaultHeaderDropdownAccnt: DefaultHeaderDropdownAccnt,\n    SidebarForm: SidebarForm,\n    SidebarFooter: SidebarFooter,\n    SidebarToggler: SidebarToggler,\n    SidebarHeader: SidebarHeader,\n    SidebarNav: SidebarNav,\n    SidebarMinimizer: SidebarMinimizer,\n    SideFoldersMove: SideFoldersMove\n  },\n  data: function data() {\n    return {\n      show_add_folder: false,\n      current_item: '',\n      folder_rename: '',\n      folder_remove_id: 0,\n      folder_op_type: 'new',\n      nav: [{\n        name: \"Account\",\n        url: \"/profile/account\",\n        icon: \"fa fa-user\"\n      }, {\n        name: \"Signature\",\n        url: \"/signature\",\n        icon: \"fa fa-pencil\"\n      }, {\n        name: \"Pricing Plan\",\n        url: \"/payment/upgrade-plan\",\n        icon: \"fa fa-tag\"\n      }, {\n        name: \"Branding\",\n        url: \"/profile/custom-branding\",\n        icon: \"fa fa-id-card\"\n      }],\n      folders: [{\n        id: 0,\n        name: \"Folders\",\n        parent_id: null,\n        children: []\n      }],\n      show_tool_menu: true,\n      id_folder_del: 0,\n      move_id: null\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    get_folders: 'get_folders',\n    folder_add: 'folder_add'\n  }), {\n    computedNav: function computedNav() {\n      return this.addTranslateNav(landingNavList);\n    },\n    name: function name() {\n      return this.$route.name;\n    },\n    list: function list() {\n      return this.$route.matched.filter(function (route) {\n        return route.name || route.meta.label;\n      });\n    }\n  }),\n  created: function created() {\n    this.getFolders();\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.$router.history.current.fullPath == \"/payment/document-list\") {\n      this.show_add_folder = true;\n    } else {\n      this.show_add_folder = false;\n    }\n\n    this.$root.$on('renameFolder', function (layer_id, name) {\n      _this.folder_rename = name;\n      _this.folder_op_type = \"rename\";\n\n      _this.openRenameDialog(layer_id);\n    });\n    this.$root.$on('newFolder', function (layer_id) {\n      _this.folder_rename = \"New Folder\";\n      _this.folder_op_type = \"new\";\n\n      _this.openRenameDialog(layer_id);\n    });\n    this.$root.$on('moveFolder', function (layer_id, id) {\n      _this.folder_op_type = \"move\";\n\n      _this.openMoveDialog(layer_id, id);\n\n      _this.move_id = id;\n    });\n    this.$root.$on('removeFolder', function (layer_id, index, id) {\n      _this.folder_op_type = \"remove\";\n      _this.folder_remove_id = index;\n\n      _this.openDeleteDialog(layer_id, index, id); // this.renameFolder(this.folders, layer_id, id);\n\n    });\n    this.toggleSidebar();\n  },\n  methods: {\n    getFolders: function getFolders() {\n      var vm = this;\n      store.dispatch(FOLDER_GET_REQUEST).then(function (res) {\n        var get_folders = vm.get_folders;\n        var data_res = restructure(get_folders);\n        vm.folders[0].children = data_res;\n      }).catch(function (err) {});\n    },\n    addTranslateNav: function addTranslateNav() {\n      var _this2 = this;\n\n      var lists = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return lists.map(function (v) {\n        return _objectSpread({}, v, {\n          name: _this2.$t(v.name)\n        });\n      });\n    },\n    toggleSidebar: function toggleSidebar() {\n      if (window.innerWidth < 500) {\n        this.$refs.sidebarToggleBtn.toggle();\n      }\n    },\n    renameFolder: function renameFolder(folders, layer_id) {\n      var _this3 = this;\n\n      var vm = this;\n      var pos = layer_id.indexOf('/', 1);\n      var no = parseInt(layer_id.substr(1, pos));\n\n      if (pos < 0) {\n        var no1 = parseInt(layer_id.substr(1));\n\n        if (vm.folder_op_type == \"rename\") {\n          var folder_rename = vm.folder_rename;\n          store.dispatch(FOLDER_RENAME_REQUEST, {\n            id: folders[no1].id,\n            doc_folder_name: folder_rename\n          }).then(function (res) {\n            res && res.status && _this3.getFolders();\n          }).catch(function (err) {\n            console.log('err-------', err);\n          });\n        } else if (this.folder_op_type == \"new\") {\n          var _folder_rename = this.folder_rename;\n          store.dispatch(FOLDER_ADD_REQUEST, {\n            parent_id: folders[no1].id,\n            doc_folder_name: _folder_rename\n          }).then(function (res) {\n            res && res.status && _this3.getFolders(); // folders[no1].children.push({name: res.data.doc_folder_name, parent_id: res.data.parent_id, id: res.data.id, children: []})\n          }).catch(function (err) {\n            console.log('err-------', err);\n          });\n        } else if (this.folder_op_type == \"remove\") {\n          var folder_remove_id = this.folder_remove_id;\n          store.dispatch(FOLDER_DELETE_REQUEST, this.id_folder_del).then(function (res) {\n            // res && res.status && this.getFolders();\n            if (res && res.status) {\n              folders[no1].children.splice(parseInt(folder_remove_id), 1);\n            }\n          }).catch(function (err) {\n            console.log('err-------', err);\n          });\n        }\n\n        this.folder_rename = \"\";\n      } else {\n        layer_id = layer_id.substr(pos);\n        this.renameFolder(folders[no].children, layer_id);\n      }\n    },\n    deleteFolder: function deleteFolder() {\n      this.renameFolder(this.folders, this.current_item);\n      this.$refs['delete-folder-modal'].hide();\n    },\n    openDeleteDialog: function openDeleteDialog(layer_id, index, id) {\n      this.current_item = layer_id;\n      this.id_folder_del = id;\n      this.$refs['delete-folder-modal'].show();\n    },\n    enterName: function enterName() {\n      this.renameFolder(this.folders, this.current_item);\n      this.$refs['rename-folder-modal'].hide();\n    },\n    openRenameDialog: function openRenameDialog(layer_id) {\n      this.current_item = layer_id;\n      this.$refs['rename-folder-modal'].show();\n    },\n    openMoveDialog: function openMoveDialog(layer_id, id) {\n      this.current_item = layer_id;\n      this.$refs['move-folder-modal'].show();\n    },\n    moveAFolder: function moveAFolder() {\n      var _this4 = this;\n\n      var folder_id = parseInt(sessionStorage.getItem('folder_id'));\n      var parent_id = parseInt(sessionStorage.getItem('parent_id'));\n      store.dispatch(FOLDER_RENAME_REQUEST, {\n        id: folder_id,\n        parent_id: parent_id == 0 ? null : parent_id\n      }).then(function (res) {\n        _this4.$refs['move-folder-modal'].hide();\n\n        res && res.status && _this4.getFolders();\n      }).catch(function (err) {\n        console.log('err-------', err);\n      });\n    },\n    getSelected: function getSelected(doc_type) {\n      if (doc_type == 'doc' && this.$router.history.current.fullPath == \"/payment/document-list\") {\n        return \"selected\";\n      } else if (doc_type == 'temp' && this.$router.history.current.fullPath == \"/payment/template-list\") {\n        return \"selected\";\n      }\n\n      return \"\";\n    },\n    clickMain: function clickMain(e) {\n      if (e.target.className == \"main\") {\n        this.toggleSidebar;\n      }\n    },\n    gotoPage: function gotoPage(page) {\n      this.$router.push({\n        path: page\n      });\n    },\n    gotoStartPage: function gotoStartPage() {\n      if (this.$route.path === \"/landing\") {\n        EventBus.$emit('IS_LANDING', true);\n      } else {\n        EventBus.$emit('IS_LANDING', false);\n      }\n\n      this.$router.push({\n        path: \"/docu-sign/add-document\"\n      });\n    }\n  },\n  watch: {\n    $route: function $route(to) {\n      if (to.fullPath == \"/prepare\") {\n        this.show_tool_menu = true;\n      } else {\n        this.show_tool_menu = false;\n      }\n\n      if (this.$router.history.current.fullPath == \"/payment/document-list\") {\n        this.show_add_folder = true;\n      } else {\n        this.show_add_folder = false;\n      }\n    }\n  }\n};",{"version":3,"sources":["PaymentContainer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app\">\n    <div class=\"app-body payment-container\">\n      <AppSidebar fixed>\n        <AppLogo />\n        <div class=\"p-3 side-menu\">\n          <div class=\"sidebar-auto-scoroll\">\n            <b-button block variant=\"other\" v-on:click=\"gotoStartPage()\">\n              {{ getSelected('temp')==\"selected\" ? \"Create Template\" :  $t('layout.payment.sidebar.button')  }}\n            </b-button>\n            <b-button\n              variant=\"primary\"\n              class=\"d-block d-sm-none\"\n              block\n              style=\"padding-top: 0.5rem;\"\n              v-on:click=\"gotoPage('/payment/pricing-plan'); toggleSidebar();\"\n            >{{ $t('layout.button') }}</b-button>\n            <div class=\"prepare-tool-nav\">\n              <hr class=\"seperate-bar\" />\n              <SidebarNav :navItems=\"computedNav\"></SidebarNav>\n            </div>\n            <!-- <template  v-if=\"show_add_folder\"> -->\n              <hr class=\"seperate-bar\" />\n              <div class=\"user-sidebar-folders\">\n                <SideFolders :folders=\"folders\" :layer_id=\"''\"/>\n              </div>\n            <!-- </template> -->\n          </div>\n          <Logout></Logout>\n        </div>\n      </AppSidebar>\n      <main class=\"main\" v-on:click=\"clickMain\">\n        <AppHeader class=\"pr-3\">\n          <SidebarToggler ref=\"sidebarToggleBtn\" class=\"d-lg-none\" display=\"md\" mobile />\n          <!-- <SidebarToggler class=\"d-md-down-none\" display=\"lg\" :defaultOpen=true /> -->\n          <UpgradePlan class=\"d-none d-sm-block\"></UpgradePlan>\n          <div class=\"your-cur-plan\">\n            <span class=\"comments ml-3 mr-1\">{{ $t('layout.payment.header.comments') }}</span>\n            <span>\n              <UserIcon icon=\"smile.png\" class=\"mr-2\" />{{ $t('layout.payment.header.icon') }}\n            </span>\n          </div>\n          <div class=\"sign-doc-type\">\n            <div\n              class=\"clickable-icon mx-1 mx-1 mx-sm-2 mx-md-2 mx-lg-4\"\n              v-on:click=\"gotoPage('/payment/document-list')\"\n              v-bind:class=\"getSelected('doc')\"\n            >{{ $t('layout.payment.header.documents') }}</div>\n            <div\n              class=\"clickable-icon mx-1 mx-sm-2 mx-md-2 mx-lg-4 \"\n              v-on:click=\"gotoPage('/payment/template-list')\"\n              v-bind:class=\"getSelected('temp')\"\n            >{{ $t('layout.payment.header.templates') }}</div>\n          </div>\n          <DefaultHeaderDropdownAccnt />\n          <!--<AsideToggler class=\"d-lg-none\" mobile />-->\n        </AppHeader>\n        <div class=\"container-fluid main-container\">\n          <router-view></router-view>\n        </div>\n      </main>\n    </div>\n    <TheFooter>\n      <!--footer-->\n      <div>\n        <span class=\"ml-1\">&copy; 2019 CoffeeSign All rights reserved</span>\n      </div>\n    </TheFooter>\n    <b-modal id=\"rename-folder-modal\" ref=\"rename-folder-modal\" hide-footer centered size=\"md\">\n      <div class=\"rename-folder-modal\">\n        <div class=\"title\">{{folder_op_type==\"new\"?\"Create\":\"Rename\"}} Folder</div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"folder_rename\"\n            placeholder=\"Folder Name\"\n            name=\"folder_rename\"\n            v-model=\"folder_rename\"\n          />\n        </div>\n        <hr>\n        <b-button v-on:click=\"enterName\" variant=\"primary\" class=\"min-width-136px\">{{folder_op_type==\"new\"?\"Create\":\"Rename\"}}</b-button>\n      </div>\n    </b-modal>\n    \n    <b-modal id=\"move-folder-modal\" ref=\"move-folder-modal\" hide-footer centered size=\"md\">\n      <div class=\"rename-folder-modal\">\n        <div class=\"title\">Move Folder</div>\n        <div class=\"form-group\">\n          <SideFoldersMove :folders=\"folders\" :layer_id=\"''\" :move_id=\"move_id\"/>\n        </div>\n        <hr>\n        <b-button v-on:click=\"moveAFolder\" variant=\"primary\" class=\"min-width-136px\">Move</b-button>\n      </div>\n    </b-modal>\n    <b-modal id=\"delete-folder-modal\" ref=\"delete-folder-modal\" hide-footer centered size=\"md\">\n      <div class=\"rename-folder-modal\">\n        <div class=\"title\">Delete Folder</div>\n        <div class=\"form-group\">\n          <span>Are you sure delete folder?</span>\n        </div>\n        <hr>\n        <b-button v-on:click=\"deleteFolder\" variant=\"primary\" class=\"min-width-136px\">Delete</b-button>\n      </div>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport {\n  Header as AppHeader,\n  SidebarToggler,\n  Sidebar as AppSidebar,\n  SidebarFooter,\n  SidebarForm,\n  SidebarHeader,\n  SidebarMinimizer,\n  SidebarNav,\n  Aside as AppAside,\n  AsideToggler,\n  Footer as TheFooter,\n} from \"@coreui/vue\";\nimport DefaultHeaderDropdownAccnt from \"./DefaultHeaderDropdownAccnt\";\nimport UserIcon from \"../components/UserIcon\";\nimport UpgradePlan from \"./UpgradePlan\";\nimport Logout from \"../components/Logout\";\nimport AppLogo from \"../components/AppLogo\";\nimport SideFolders from \"../components/SideFolders\";\nimport SideFoldersMove from \"../components/SideFoldersMove\";\nimport { EventBus } from '../config/event-bus';\nimport { landingNavList } from \"../helpers/defaultValue\";\nimport { restructure } from \"../helpers/restructure\";\n\nimport store from '../store/store'\nimport { mapGetters } from \"vuex\";\nimport {\n  FOLDER_GET_REQUEST,\n  FOLDER_ADD_REQUEST,\n  FOLDER_RENAME_REQUEST,\n  FOLDER_DELETE_REQUEST\n} from \"../store/actions.type\";\n\nexport default {\n  name: \"DocumentsContainer\",\n  components: {\n    SideFolders,\n    AppLogo,\n    Logout,\n    UserIcon,\n    UpgradePlan,\n    AsideToggler,\n    AppHeader,\n    AppSidebar,\n    AppAside,\n    TheFooter,\n    DefaultHeaderDropdownAccnt,\n    SidebarForm,\n    SidebarFooter,\n    SidebarToggler,\n    SidebarHeader,\n    SidebarNav,\n    SidebarMinimizer,\n    SideFoldersMove\n  },\n  data() {\n    return {\n      show_add_folder: false,\n      current_item: '',\n      folder_rename: '',\n      folder_remove_id: 0,\n      folder_op_type: 'new',\n      nav: [\n        {\n          name: \"Account\",\n          url: \"/profile/account\",\n          icon: \"fa fa-user\"\n        },\n        {\n          name: \"Signature\",\n          url: \"/signature\",\n          icon: \"fa fa-pencil\"\n        },\n        {\n          name: \"Pricing Plan\",\n          url: \"/payment/upgrade-plan\",\n          icon: \"fa fa-tag\"\n        },\n        {\n          name: \"Branding\",\n          url: \"/profile/custom-branding\",\n          icon: \"fa fa-id-card\"\n        }\n      ],\n      folders: [{\n        id: 0,\n        name: \"Folders\",\n        parent_id: null,\n        children: []\n      }],\n      show_tool_menu: true,\n      id_folder_del: 0,\n      move_id: null,\n    };\n  },\n  computed: {\n    ...mapGetters({\n      get_folders: 'get_folders',\n      folder_add: 'folder_add'\n    }),\n    computedNav() {\n      return this.addTranslateNav(landingNavList);\n    },\n    name() {\n      return this.$route.name;\n    },\n    list() {\n      return this.$route.matched.filter(\n        route => route.name || route.meta.label\n      );\n    }\n  },\n  created() {\n    this.getFolders()\n  },\n  mounted() {\n    if (this.$router.history.current.fullPath == \"/payment/document-list\") {\n      this.show_add_folder = true;\n    } else {\n      this.show_add_folder = false;\n    }\n    this.$root.$on('renameFolder', (layer_id, name) => {\n      this.folder_rename = name;\n      this.folder_op_type = \"rename\";\n      this.openRenameDialog(layer_id);\n    });\n    this.$root.$on('newFolder', (layer_id) => {\n      this.folder_rename = \"New Folder\";\n      this.folder_op_type = \"new\";\n      this.openRenameDialog(layer_id);\n    });\n    this.$root.$on('moveFolder', (layer_id, id) => {\n      this.folder_op_type = \"move\";\n      this.openMoveDialog(layer_id, id);\n      this.move_id = id;\n\n    });\n    this.$root.$on('removeFolder', (layer_id, index, id) => {\n      this.folder_op_type = \"remove\";\n      this.folder_remove_id = index;\n      this.openDeleteDialog(layer_id, index, id);\n      // this.renameFolder(this.folders, layer_id, id);\n    });\n    this.toggleSidebar();\n  },\n  methods: {\n    getFolders() {\n      let vm = this;\n      store.dispatch(FOLDER_GET_REQUEST)\n      .then( res => {\n        let get_folders = vm.get_folders;\n        let data_res = restructure(get_folders);\n        vm.folders[0].children = data_res;\n      })\n      .catch( err => {\n\n      });\n    },\n    addTranslateNav(lists = []) {\n      return lists.map(v => {\n        return { ...v, name: this.$t(v.name) };\n      });\n    },\n    toggleSidebar() {\n      if(window.innerWidth<500){\n        this.$refs.sidebarToggleBtn.toggle();\n      }\n    },\n    renameFolder(folders, layer_id) {\n      let vm  = this\n      const pos = layer_id.indexOf('/', 1);\n      const no = parseInt(layer_id.substr(1, pos));\n      if(pos<0){\n        const no1 = parseInt(layer_id.substr(1));\n        if(vm.folder_op_type == \"rename\") {\n          const folder_rename = vm.folder_rename;\n          store.dispatch(FOLDER_RENAME_REQUEST, {id: folders[no1].id, doc_folder_name: folder_rename})\n          .then( res => {\n            res && res.status && this.getFolders();\n          })\n          .catch( err => {\n            console.log('err-------', err)\n          });\n        } else if(this.folder_op_type == \"new\") {\n          const folder_rename = this.folder_rename;\n          store.dispatch(FOLDER_ADD_REQUEST, {parent_id: folders[no1].id, doc_folder_name: folder_rename})\n          .then( res => {\n            res && res.status && this.getFolders();\n            // folders[no1].children.push({name: res.data.doc_folder_name, parent_id: res.data.parent_id, id: res.data.id, children: []})\n          })\n          .catch( err => {\n            console.log('err-------', err)\n          });\n        } else if(this.folder_op_type == \"remove\") {\n          let folder_remove_id = this.folder_remove_id\n          store.dispatch(FOLDER_DELETE_REQUEST, this.id_folder_del)\n          .then( res => {\n            // res && res.status && this.getFolders();\n            if( res && res.status) {\n              folders[no1].children.splice(parseInt(folder_remove_id), 1);\n            }\n          })\n          .catch( err => {\n            console.log('err-------', err)\n          });\n        }\n\n        this.folder_rename = \"\";\n      } else {\n        layer_id = layer_id.substr(pos);\n        this.renameFolder(folders[no].children, layer_id);\n      }\n    },\n    deleteFolder() {\n      this.renameFolder(this.folders, this.current_item);\n      this.$refs['delete-folder-modal'].hide();\n    },\n    openDeleteDialog(layer_id, index, id) {\n      this.current_item = layer_id;\n      this.id_folder_del = id;\n      this.$refs['delete-folder-modal'].show();\n    },\n    enterName() {\n      this.renameFolder(this.folders, this.current_item);\n      this.$refs['rename-folder-modal'].hide();\n    },\n    openRenameDialog(layer_id) {\n      this.current_item = layer_id;\n      this.$refs['rename-folder-modal'].show();\n    },\n    openMoveDialog(layer_id, id) {\n      this.current_item = layer_id;\n      this.$refs['move-folder-modal'].show();\n    },\n    moveAFolder() {\n      let folder_id = parseInt(sessionStorage.getItem('folder_id'));\n      let parent_id = parseInt(sessionStorage.getItem('parent_id'));\n      store.dispatch(FOLDER_RENAME_REQUEST, {id: folder_id, parent_id: parent_id  == 0 ? null : parent_id})\n        .then( res => {\n          this.$refs['move-folder-modal'].hide();\n          res && res.status && this.getFolders();\n        })\n        .catch( err => {\n          console.log('err-------', err)\n        });\n    },\n    getSelected(doc_type) {\n      if(doc_type == 'doc' && this.$router.history.current.fullPath == \"/payment/document-list\") {\n        return \"selected\"\n      } else if(doc_type == 'temp' && this.$router.history.current.fullPath == \"/payment/template-list\") {\n        return \"selected\"\n      }\n      return \"\";\n    },\n    clickMain(e) {\n      if (e.target.className == \"main\") {\n        this.toggleSidebar\n      }\n    },\n    gotoPage(page) {\n      this.$router.push({ path: page });\n    },\n    gotoStartPage() {\n      if(this.$route.path === \"/landing\"){\n        EventBus.$emit('IS_LANDING', true);\n      } else {\n        EventBus.$emit('IS_LANDING', false);\n      }\n      this.$router.push({\n        path: \"/docu-sign/add-document\"\n      });\n    },\n  },\n  watch: {\n    $route(to) {\n      if (to.fullPath == \"/prepare\") {\n        this.show_tool_menu = true;\n      } else {\n        this.show_tool_menu = false;\n      }\n      \n      if (this.$router.history.current.fullPath == \"/payment/document-list\") {\n        this.show_add_folder = true;\n      } else {\n        this.show_add_folder = false;\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"./PaymentContainer.scss\";\n</style>"],"sourceRoot":"src/containers"}]}