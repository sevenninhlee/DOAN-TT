{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/src/store/modules/stampseal.js","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/store/modules/stampseal.js","mtime":1573548265050},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find\";\n\nvar _actions, _mutations;\n\nimport JwtService from \"../../mixins/jwt.service\";\nimport { stampseal } from \"../../mixins/stampseal\";\nimport { STAMP_CREATE, STAMP_UPLOAD, STAMP_GET, STAMP_UPDATE, STAMP_SOFTDELETE, STAMP_DESTROY } from \"../actions.type\";\nimport { SET_STAMP, UPDATE_STAMP, SOFTDELETE_STAMP, DESTROY_STAMP } from \"../mutations.type\";\nvar state = {\n  stamps: []\n};\nvar getters = {\n  STAMPS: function STAMPS(state) {\n    return state.stamps;\n  },\n  getDefaultStamp: function getDefaultStamp(state) {\n    return state.stamps.find(function (stamp) {\n      return stamp.default === 1;\n    });\n  }\n};\nvar actions = (_actions = {}, _defineProperty(_actions, STAMP_CREATE, function (context, stamp) {\n  context.commit(UPDATE_STAMP, stamp);\n}), _defineProperty(_actions, STAMP_UPLOAD, function (context, stamp) {\n  context.commit(UPDATE_STAMP, stamp);\n}), _defineProperty(_actions, STAMP_GET, function (context, stamps) {\n  context.commit(SET_STAMP, stamps);\n}), _defineProperty(_actions, STAMP_UPDATE, function (context, stamp) {\n  context.commit(SET_STAMP, stamp);\n}), _defineProperty(_actions, STAMP_SOFTDELETE, function (context, id) {\n  context.commit(SOFTDELETE_STAMP, id);\n}), _defineProperty(_actions, STAMP_DESTROY, function (context, id) {\n  context.commit(DESTROY_STAMP, id);\n}), _actions);\nvar mutations = (_mutations = {}, _defineProperty(_mutations, SET_STAMP, function (state, payload) {\n  state.stamps = payload;\n}), _defineProperty(_mutations, UPDATE_STAMP, function (state, payload) {\n  state.stamps.push(payload);\n}), _defineProperty(_mutations, SOFTDELETE_STAMP, function (state, id) {\n  var index = state.stamps.findIndex(function (stamp) {\n    return stamp.id == id;\n  });\n  state.stamps.splice(index, 1);\n}), _defineProperty(_mutations, DESTROY_STAMP, function (state, id) {// state.stamps = id\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/var/www/html/Jobs/DOAN-TT/client/src/store/modules/stampseal.js"],"names":["JwtService","stampseal","STAMP_CREATE","STAMP_UPLOAD","STAMP_GET","STAMP_UPDATE","STAMP_SOFTDELETE","STAMP_DESTROY","SET_STAMP","UPDATE_STAMP","SOFTDELETE_STAMP","DESTROY_STAMP","state","stamps","getters","STAMPS","getDefaultStamp","find","stamp","default","actions","context","commit","id","mutations","payload","push","index","findIndex","splice"],"mappings":";;;;;;AAAA,OAAOA,UAAP;AACA,SAASC,SAAT;AAEA,SACEC,YADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,YAJF,EAKEC,gBALF,EAMEC,aANF;AASA,SACEC,SADF,EAEEC,YAFF,EAGEC,gBAHF,EAIEC,aAJF;AAOA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AADI,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,gBAAAH,KAAK;AAAA,WAAIA,KAAK,CAACC,MAAV;AAAA,GADC;AAEdG,EAAAA,eAAe,EAAE,yBAAAJ,KAAK,EAAI;AACxB,WAAOA,KAAK,CAACC,MAAN,CAAaI,IAAb,CAAkB,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,OAAN,KAAkB,CAAtB;AAAA,KAAvB,CAAP;AACD;AAJa,CAAhB;AAOA,IAAMC,OAAO,6CACVlB,YADU,EACK,UAACmB,OAAD,EAAUH,KAAV,EAAoB;AAClCG,EAAAA,OAAO,CAACC,MAAR,CAAeb,YAAf,EAA6BS,KAA7B;AACD,CAHU,6BAKVf,YALU,EAKK,UAACkB,OAAD,EAAUH,KAAV,EAAoB;AAClCG,EAAAA,OAAO,CAACC,MAAR,CAAeb,YAAf,EAA6BS,KAA7B;AACD,CAPU,6BASVd,SATU,EASE,UAACiB,OAAD,EAAUR,MAAV,EAAqB;AAChCQ,EAAAA,OAAO,CAACC,MAAR,CAAed,SAAf,EAA0BK,MAA1B;AACD,CAXU,6BAaVR,YAbU,EAaK,UAACgB,OAAD,EAAUH,KAAV,EAAoB;AAClCG,EAAAA,OAAO,CAACC,MAAR,CAAed,SAAf,EAA0BU,KAA1B;AACD,CAfU,6BAiBVZ,gBAjBU,EAiBS,UAACe,OAAD,EAAUE,EAAV,EAAiB;AACnCF,EAAAA,OAAO,CAACC,MAAR,CAAeZ,gBAAf,EAAiCa,EAAjC;AACD,CAnBU,6BAqBVhB,aArBU,EAqBM,UAACc,OAAD,EAAUE,EAAV,EAAiB;AAChCF,EAAAA,OAAO,CAACC,MAAR,CAAeX,aAAf,EAA8BY,EAA9B;AACD,CAvBU,YAAb;AA0BA,IAAMC,SAAS,iDACZhB,SADY,YACDI,KADC,EACMa,OADN,EACe;AAC1Bb,EAAAA,KAAK,CAACC,MAAN,GAAeY,OAAf;AACD,CAHY,+BAIZhB,YAJY,YAIEG,KAJF,EAISa,OAJT,EAIkB;AAC7Bb,EAAAA,KAAK,CAACC,MAAN,CAAaa,IAAb,CAAkBD,OAAlB;AACD,CANY,+BAQZf,gBARY,YAQME,KARN,EAQaW,EARb,EAQiB;AAC5B,MAAII,KAAK,GAAGf,KAAK,CAACC,MAAN,CAAae,SAAb,CAAuB,UAAAV,KAAK;AAAA,WAAIA,KAAK,CAACK,EAAN,IAAYA,EAAhB;AAAA,GAA5B,CAAZ;AACAX,EAAAA,KAAK,CAACC,MAAN,CAAagB,MAAb,CAAoBF,KAApB,EAA2B,CAA3B;AACD,CAXY,+BAcZhB,aAdY,YAcGC,KAdH,EAcUW,EAdV,EAcc,CACzB;AACD,CAhBY,cAAf;AAmBA,eAAe;AACbX,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,OAAO,EAAPA,OAFa;AAGbM,EAAAA,OAAO,EAAPA,OAHa;AAIbI,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import JwtService from '../../mixins/jwt.service'\nimport { stampseal } from '../../mixins/stampseal'\n\nimport {\n  STAMP_CREATE,\n  STAMP_UPLOAD,\n  STAMP_GET,\n  STAMP_UPDATE,\n  STAMP_SOFTDELETE,\n  STAMP_DESTROY\n} from '../actions.type'\n\nimport {\n  SET_STAMP,\n  UPDATE_STAMP,\n  SOFTDELETE_STAMP,\n  DESTROY_STAMP\n} from '../mutations.type'\n\nconst state = {\n  stamps: []\n}\n\nconst getters = {\n  STAMPS: state => state.stamps,\n  getDefaultStamp: state => {\n    return state.stamps.find(stamp => stamp.default === 1)\n  }\n}\n\nconst actions = {\n  [STAMP_CREATE]: (context, stamp) => {\n    context.commit(UPDATE_STAMP, stamp)\n  },\n  \n  [STAMP_UPLOAD]: (context, stamp) => {\n    context.commit(UPDATE_STAMP, stamp)\n  },\n\n  [STAMP_GET]: (context, stamps) => {\n    context.commit(SET_STAMP, stamps)\n  },\n\n  [STAMP_UPDATE]: (context, stamp) => {    \n    context.commit(SET_STAMP, stamp)\n  },\n\n  [STAMP_SOFTDELETE]: (context, id) => {\n    context.commit(SOFTDELETE_STAMP, id)\n  }, \n\n  [STAMP_DESTROY]: (context, id) => {\n    context.commit(DESTROY_STAMP, id)\n  }\n}\n\nconst mutations = {\n  [SET_STAMP](state, payload) {\n    state.stamps = payload\n  },\n  [UPDATE_STAMP](state, payload) {\n    state.stamps.push(payload)\n  },\n\n  [SOFTDELETE_STAMP](state, id) {\n    let index = state.stamps.findIndex(stamp => stamp.id == id)\n    state.stamps.splice(index, 1)\n  },\n\n  /** NOT WORKING YET (SOFIAN) */\n  [DESTROY_STAMP](state, id) {\n    // state.stamps = id\n  }\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n}"]}]}