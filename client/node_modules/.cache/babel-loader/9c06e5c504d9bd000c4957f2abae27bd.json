{"remainingRequest":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js!/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Jobs/DOAN-TT/client/src/components/FileUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/Jobs/DOAN-TT/client/src/components/FileUpload.vue","mtime":1573548261927},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/babel-loader/lib/index.js","mtime":1571304325577},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/cache-loader/dist/cjs.js","mtime":1571633391755},{"path":"/var/www/html/Jobs/DOAN-TT/client/node_modules/vue-loader/lib/index.js","mtime":1571304326381}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/var/www/html/Jobs/DOAN-TT/client/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserIcon from \"./UserIcon\";\nimport { GoogleDrive, Dropbox, OneDrive, Box } from \"./connect\";\nimport { bytesToSize, addParamsToBlob, extensionToMimeType } from \"../helpers\";\nimport { EventBus } from \"../config/event-bus\";\nimport { mapGetters, mapState } from \"vuex\";\nimport store from \"../store/store\";\nimport { GET_DOCS } from \"../store/actions.type\";\nimport { GET_BLOD_FROM_URL, REMOVE_DOCUMENT_REQUEST } from \"../store/modules/document\";\nexport default {\n  name: \"FileUpload\",\n  components: {\n    UserIcon: UserIcon,\n    GoogleDrive: GoogleDrive,\n    Dropbox: Dropbox,\n    OneDrive: OneDrive,\n    Box: Box\n  },\n  props: [\"files\", \"default_files\"],\n  data: function data() {\n    return {\n      dragAndDropCapable: false,\n      old_files: [],\n      landingFiles: [],\n      isFile: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters({\n    getDocuments: \"getDocuments\"\n  })),\n  created: function created() {},\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.$route.query.document_id) {\n      this.old_files = [];\n      store.dispatch(GET_DOCS, this.$route.query.document_id).then(function (res) {\n        _this.getDocuments.map(function (value, key) {\n          store;\n          value.file = _objectSpread({}, value, {\n            name: value.document_name,\n            downloadUrl: value.document_file,\n            id: value.id,\n            size: value.size\n          });\n\n          _this.old_files.push(value.file);\n        });\n\n        _this.isFile = true;\n\n        _this.$emit(\"isData\", true);\n      }).catch(function (err) {\n        _this.$router.push(\"/docu-sign/add-document\");\n      });\n    } else {\n      this.isFile = false;\n    }\n\n    this.dragAndDropCapable = this.determineDragAndDropCapable();\n\n    if (this.dragAndDropCapable) {\n      [\"drag\", \"dragstart\", \"dragend\", \"dragover\", \"dragenter\", \"dragleave\", \"drop\"].forEach(function (evt) {\n        this.$refs.fileform && this.$refs.fileform.addEventListener(evt, function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n        }.bind(this), false);\n      }.bind(this));\n      this.$refs.fileform && this.$refs.fileform.addEventListener(\"drop\", function (e) {\n        this.addFiles(e.dataTransfer.files);\n      }.bind(this));\n    }\n  },\n  methods: {\n    getFileType: function getFileType(fileName) {\n      var iconUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var url = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (url && url.indexOf(\"https://docs.google.com\") != -1) {\n        return iconUrl;\n      } else if (fileName.split(\".\").pop() === \"mp3\" || fileName.split(\".\").pop() === \"mp4\") {\n        return \"img/icons/warning-sign.svg\";\n      } else {\n        return \"img/icons/\" + fileName.split(\".\").pop() + \".svg\";\n      }\n    },\n    getFileSize: function getFileSize(size) {\n      return size == 0 ? '' : bytesToSize(size);\n    },\n    determineDragAndDropCapable: function determineDragAndDropCapable() {\n      var div = document.createElement(\"div\");\n      return (\"draggable\" in div || \"ondragstart\" in div && \"ondrop\" in div) && \"FormData\" in window && \"FileReader\" in window;\n    },\n    onFileChange: function onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      files && files.length > 0 && this.addFiles([files[0]]);\n    },\n    addFiles: function addFiles(files, needLoadFile) {\n      var _this2 = this;\n\n      files.map(function (val, key) {\n        if (val.type.indexOf(\"video/mp4\") != -1 || val.type.indexOf(\"audio/mpeg\") != -1) {\n          var text = \"File \" + val.name + \" is not a supported format\";\n\n          _this2.$awn.alert(text, {\n            position: \"bottom-left\",\n            labels: {\n              alert: \"Danger Message\"\n            }\n          });\n        }\n      });\n\n      if (this.$route.path.indexOf(\"landing\") != -1) {\n        this.$emit(\"addLandingFiles\", files);\n        this.$router.push({\n          path: \"/docu-sign/add-document\" // query: { files: files }\n\n        });\n      }\n\n      this.$emit(\"addFiles\", files, needLoadFile);\n    },\n    removeFile: function removeFile(index, isRemove) {\n      var _this3 = this;\n\n      var doc_id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (isRemove) {\n        store.dispatch(REMOVE_DOCUMENT_REQUEST, doc_id).then(function (resp) {\n          if (resp && resp.status) {\n            _this3.old_files.splice(index, 1);\n\n            if (_this3.old_files.length < 1) {\n              _this3.$emit(\"isData\", false);\n            }\n          } else {\n            window.confirm(\"Remove file fail\");\n          }\n        });\n      } else {\n        this.files.splice(index, 1);\n      }\n    },\n    openBrows: function openBrows() {\n      this.$refs.file.click();\n    },\n    checkHasFiles: function checkHasFiles() {\n      return this.files && this.files.length > 0 || this.old_files && this.old_files.length > 0;\n    }\n  }\n};",{"version":3,"sources":["FileUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"w-100\">\n    <div class=\"drag-drop-container\" v-bind:class=\"{'drag-has-file':checkHasFiles()}\">\n      <form ref=\"fileform\" class=\"drag-drop-div\" v-bind:class=\"{'has-files':checkHasFiles()}\">\n        <span v-on:click=\"openBrows()\">\n          <UserIcon icon=\"folder.svg\" class=\"folder-2\" />\n        </span>\n        <input type=\"file\" ref=\"file\" multiple style=\"display: none\" @change=\"onFileChange\" />\n        <div class=\"px-md-3\" v-bind:class=\"{'has-file-upload-type':checkHasFiles()}\">\n          <div class=\"drag-a-file\" v-bind:class=\"{'has-file':checkHasFiles()}\">\n            {{ $t(\"home.drag.title_1\") }}\n            <span\n              class=\"text-style-1 clickable-text\"\n              v-on:click=\"openBrows()\"\n            >{{ $t(\"home.drag.title_2\") }}</span>\n            {{ $t(\"home.drag.title_3\") }}\n          </div>\n          <div\n            class=\"you-can-use\"\n            v-bind:class=\"{'text-left-align':checkHasFiles()}\"\n          >{{ $t(\"home.drag.subtitle\") }}</div>\n        </div>\n        <div class=\"store-src\" v-bind:class=\"{'none-top-margin':checkHasFiles()}\">\n          <Dropbox @addFiles=\"addFiles\" />\n          <GoogleDrive @addFiles=\"addFiles\" />\n          <OneDrive @addFiles=\"addFiles\" />\n          <Box @addFiles=\"addFiles\" />\n          <!-- <UserIcon icon=\"dropbox.svg\" class=\"store-src-item\" /> -->\n          <!-- <UserIcon icon=\"google-drive.svg\" class=\"store-src-item\" /> -->\n          <!-- <UserIcon icon=\"onedrive.svg\" class=\"store-src-item\" /> -->\n          <!-- <UserIcon icon=\"box.svg\" class=\"store-src-item\" /> -->\n        </div>\n        <div\n          class=\"you-can-use\"\n          v-bind:class=\"{'you-can-use-has-file':checkHasFiles()}\"\n        >{{ $t(\"home.drag.comments\") }}</div>\n        <b-button\n          variant=\"outline-primary\"\n          style=\"min-width:153px;margin-top: 10px;\"\n          :class=\"{'none-top-margin':files.length > 0}\"\n        >{{ $t(\"home.drag.button\") }}</b-button>\n      </form>\n    </div>\n    <div class=\"file-list\">\n      <div v-if=\"$route.query.document_id\">\n        <div v-for=\"(file, index) in old_files\" :key=\"index\" class=\"file-listing\">\n          <div class=\"file-content\">\n            <img v-bind:src=\"getFileType(file.name)\" class=\"folder-2\" />\n            <div class=\"file-info ml-3\">\n              <div class=\"doc-file-name\">{{ file.name }}</div>\n              <div class=\"doc-file-info\">{{getFileSize(file.bytes || file.size)}}</div>\n              <!-- <div class=\"doc-file-info\">5 pages</div> -->\n            </div>\n          </div>\n          <div class=\"file-control\">\n            <!-- <i class=\"fa fa-ellipsis-h fa-lg mr-4\"></i> -->\n            <!-- <i class=\"cui-trash icons\"></i> -->\n            <span v-on:click=\"removeFile(index, true, file.id)\">\n              <UserIcon icon=\"delete.svg\" :button=\"true\" />\n            </span>\n          </div>\n        </div>\n      </div>\n      <div v-for=\"(file, index) in files\" :key=\"index+1000\" class=\"file-listing\">\n        <div class=\"file-content\">\n          <img v-bind:src=\"getFileType(file.name, file.iconUrl ? file.iconUrl : null,file.url ? file.url : null)\" class=\"folder-2\" />\n          <div class=\"file-info ml-3\">\n            <div class=\"doc-file-name\">{{ file.name }}</div>\n            <div class=\"doc-file-info\">{{getFileSize(file.bytes || file.size)}}</div>\n            <!-- <div class=\"doc-file-info\">5 pages</div> -->\n          </div>\n        </div>\n        <div class=\"file-control\">\n          <!-- <i class=\"fa fa-ellipsis-h fa-lg mr-4\"></i> -->\n          <!-- <i class=\"cui-trash icons\"></i> -->\n          <span v-on:click=\"removeFile(index, false)\">\n            <UserIcon icon=\"delete.svg\" :button=\"true\" />\n          </span>\n        </div>\n      </div>\n      <!-- <div v-if=\"files && files.length>0\">\n        <div class=\"file-listing w-100\">\n          <div class=\"file-content w-100\">\n            <img v-bind:src=\"getFileType(files[0].name)\" class=\"folder-2\" />\n            <div class=\"file-info ml-3 w-100\">\n              <div class=\"doc-file-name\">168 KB of 378 KB (56% Done)</div>\n              <div class=\"text-right\">\n                <i class=\"cui-circle-x icons\" style=\"font-size:18px\"></i>\n                <b-progress :value=\"56\" :max=\"100\" class=\"mt-1\"></b-progress>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>-->\n    </div>\n  </div>\n</template>\n\n<script>\nimport UserIcon from \"./UserIcon\";\nimport { GoogleDrive, Dropbox, OneDrive, Box } from \"./connect\";\nimport { bytesToSize, addParamsToBlob, extensionToMimeType } from \"../helpers\";\nimport { EventBus } from \"../config/event-bus\";\nimport { mapGetters, mapState } from \"vuex\";\nimport store from \"../store/store\";\nimport { GET_DOCS } from \"../store/actions.type\";\nimport {\n  GET_BLOD_FROM_URL,\n  REMOVE_DOCUMENT_REQUEST\n} from \"../store/modules/document\";\n\nexport default {\n  name: \"FileUpload\",\n  components: {\n    UserIcon,\n    GoogleDrive,\n    Dropbox,\n    OneDrive,\n    Box\n  },\n  props: [\"files\", \"default_files\"],\n  data() {\n    return {\n      dragAndDropCapable: false,\n      old_files: [],\n      landingFiles: [],\n      isFile: false\n    };\n  },\n  computed: {\n    ...mapGetters({\n      getDocuments: \"getDocuments\"\n    }),\n  },\n  created() {\n    \n  },\n  mounted() {\n    if (this.$route.query.document_id) {\n      this.old_files = [];\n      store\n        .dispatch(GET_DOCS, this.$route.query.document_id)\n        .then(res => {\n          this.getDocuments.map((value, key) => {\n            store\n              value.file ={\n                ...value,\n                name: value.document_name,\n                downloadUrl: value.document_file,\n                id: value.id,\n                size: value.size\n              };\n              this.old_files.push(value.file);\n          });\n          this.isFile = true;\n          this.$emit(\"isData\", true);\n        })\n        .catch(err => {\n          this.$router.push(\"/docu-sign/add-document\");\n        });\n\n    } else {\n      this.isFile = false;\n    }\n    this.dragAndDropCapable = this.determineDragAndDropCapable();\n    if (this.dragAndDropCapable) {\n      [\n        \"drag\",\n        \"dragstart\",\n        \"dragend\",\n        \"dragover\",\n        \"dragenter\",\n        \"dragleave\",\n        \"drop\"\n      ].forEach(\n        function(evt) {\n          this.$refs.fileform &&\n            this.$refs.fileform.addEventListener(\n              evt,\n              function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n              }.bind(this),\n              false\n            );\n        }.bind(this)\n      );\n\n      this.$refs.fileform &&\n        this.$refs.fileform.addEventListener(\n          \"drop\",\n          function(e) {\n            this.addFiles(e.dataTransfer.files);\n          }.bind(this)\n        );\n    }\n  },\n  methods: {\n    getFileType(fileName, iconUrl = null, url = null) {\n      if(url && url.indexOf(\"https://docs.google.com\") != -1){\n        return iconUrl;\n      }else if(fileName.split(\".\").pop() === \"mp3\" || fileName.split(\".\").pop() === \"mp4\") {\n        return \"img/icons/warning-sign.svg\";\n      } else {\n        return \"img/icons/\" + fileName.split(\".\").pop() + \".svg\";\n      }\n    },\n    getFileSize(size) {\n      return size== 0 ? '' : bytesToSize(size);\n    },\n    determineDragAndDropCapable() {\n      var div = document.createElement(\"div\");\n      return (\n        (\"draggable\" in div || (\"ondragstart\" in div && \"ondrop\" in div)) &&\n        \"FormData\" in window &&\n        \"FileReader\" in window\n      );\n    },\n    onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      files && files.length > 0 && this.addFiles([files[0]]);\n    },\n    addFiles(files, needLoadFile) {\n      files.map( (val, key) => {\n        if(val.type.indexOf(\"video/mp4\") != -1 || val.type.indexOf(\"audio/mpeg\") != -1)\n        {\n          let text = \"File \"+val.name+\" is not a supported format\"\n          this.$awn.alert(text, {\n            position: \"bottom-left\",\n            labels: {\n              alert: \"Danger Message\"\n            }\n          })\n        }\n      })\n      if (this.$route.path.indexOf(\"landing\") != -1) {\n        this.$emit(\"addLandingFiles\", files);\n        this.$router.push({\n          path: \"/docu-sign/add-document\",\n          // query: { files: files }\n        });\n      }\n      this.$emit(\"addFiles\", files, needLoadFile);\n\n    },\n    removeFile(index, isRemove, doc_id = null) {\n      if (isRemove) {\n        store.dispatch(REMOVE_DOCUMENT_REQUEST, doc_id).then(resp => {\n          if (resp && resp.status) {\n            this.old_files.splice(index, 1);\n            if(this.old_files.length < 1) {\n              this.$emit(\"isData\", false);\n            }\n          } else {\n            window.confirm(\"Remove file fail\");\n          }\n        });\n      } else {\n        this.files.splice(index, 1);\n      }\n    },\n    openBrows() {\n      this.$refs.file.click();\n    },\n    checkHasFiles() {\n      return (this.files && this.files.length > 0) || (this.old_files && this.old_files.length > 0);\n    }\n  },\n  \n};\n</script>\n<style lang=\"scss\">\n@import \"./FileUpload.scss\";\n</style>\n"],"sourceRoot":"src/components"}]}